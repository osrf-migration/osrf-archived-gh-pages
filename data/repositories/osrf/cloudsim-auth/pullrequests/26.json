{"rendered": {"description": {"raw": "In this PR I address part of [CLOUD-183](https://osrfoundation.atlassian.net/browse/CLOUD-183) (the second PR in gz-token is [here](https://github.com/osrf/gz-token/pull/10)).\r\n\r\nThe username is no longer passed as a query, instead, it is inside the Auth0 Token.\r\n\r\nBefore, a `GET` request to `/token` would respond with null identities, as none was passed as a query. To pass any identity, it had to be included as `/token?username=user`. (Examples using a local Cloudsim Auth server)\r\n\r\n    curl -X GET -H 'authorization: Bearer auth0_token' http://localhost:4001/token\r\n    \r\n    {\r\n      \"decoded\": {\r\n        \"identities\": [\r\n          null\r\n        ]\r\n      },\r\n      \"success\": true,\r\n      \"token\": \"{{cloudsim_token}}\"\r\n    }\r\n\r\nNow, as the username is included inside the Auth0 Token, the same command responds with:\r\n\r\n    {\r\n      \"decoded\": {\r\n        \"identities\": [\r\n          \"german@creativa77.com.ar\",\r\n          \"teamGer\"\r\n        ]\r\n      },\r\n      \"success\": true,\r\n      \"token\": \"{{cloudsim_token}}\"\r\n    }\r\n\r\nThis way we avoid passing the username in the query.\r\n\r\nNotice that `req.user` contains the payload of the decoded token. It's email is in `req.user.email`.\r\n\r\n**Note: **The obtained Auth0 Token can still be decoded and modified, but as long as the Client Secret remains secret, it's signature won't be correctly encoded, and an invalid signature error will be thrown upon decoding.\r\n\r\nptal @andres_fortier", "markup": "markdown", "html": "<p>In this PR I address part of <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/browse/CLOUD-183\" rel=\"nofollow\">CLOUD-183</a> (the second PR in gz-token is <a data-is-external-link=\"true\" href=\"https://github.com/osrf/gz-token/pull/10\" rel=\"nofollow\">here</a>).</p>\n<p>The username is no longer passed as a query, instead, it is inside the Auth0 Token.</p>\n<p>Before, a <code>GET</code> request to <code>/token</code> would respond with null identities, as none was passed as a query. To pass any identity, it had to be included as <code>/token?username=user</code>. (Examples using a local Cloudsim Auth server)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">curl -X GET -H &#39;authorization: Bearer auth0_token&#39; http://localhost:4001/token</span>\n\n<span class=\"x\">{</span>\n<span class=\"x\">  &quot;decoded&quot;: {</span>\n<span class=\"x\">    &quot;identities&quot;: [</span>\n<span class=\"x\">      null</span>\n<span class=\"x\">    ]</span>\n<span class=\"x\">  },</span>\n<span class=\"x\">  &quot;success&quot;: true,</span>\n<span class=\"x\">  &quot;token&quot;: &quot;</span><span class=\"cp\">{{</span><span class=\"nv\">cloudsim_token</span><span class=\"cp\">}}</span><span class=\"x\">&quot;</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<p>Now, as the username is included inside the Auth0 Token, the same command responds with:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">{</span>\n<span class=\"x\">  &quot;decoded&quot;: {</span>\n<span class=\"x\">    &quot;identities&quot;: [</span>\n<span class=\"x\">      &quot;german@creativa77.com.ar&quot;,</span>\n<span class=\"x\">      &quot;teamGer&quot;</span>\n<span class=\"x\">    ]</span>\n<span class=\"x\">  },</span>\n<span class=\"x\">  &quot;success&quot;: true,</span>\n<span class=\"x\">  &quot;token&quot;: &quot;</span><span class=\"cp\">{{</span><span class=\"nv\">cloudsim_token</span><span class=\"cp\">}}</span><span class=\"x\">&quot;</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<p>This way we avoid passing the username in the query.</p>\n<p>Notice that <code>req.user</code> contains the payload of the decoded token. It's email is in <code>req.user.email</code>.</p>\n<p><strong>Note: </strong>The obtained Auth0 Token can still be decoded and modified, but as long as the Client Secret remains secret, it's signature won't be correctly encoded, and an invalid signature error will be thrown upon decoding.</p>\n<p>ptal @andres_fortier</p>", "type": "rendered"}, "title": {"raw": "Obtain username from Token", "markup": "markdown", "html": "<p>Obtain username from Token</p>", "type": "rendered"}}, "type": "pullrequest", "description": "In this PR I address part of [CLOUD-183](https://osrfoundation.atlassian.net/browse/CLOUD-183) (the second PR in gz-token is [here](https://github.com/osrf/gz-token/pull/10)).\r\n\r\nThe username is no longer passed as a query, instead, it is inside the Auth0 Token.\r\n\r\nBefore, a `GET` request to `/token` would respond with null identities, as none was passed as a query. To pass any identity, it had to be included as `/token?username=user`. (Examples using a local Cloudsim Auth server)\r\n\r\n    curl -X GET -H 'authorization: Bearer auth0_token' http://localhost:4001/token\r\n    \r\n    {\r\n      \"decoded\": {\r\n        \"identities\": [\r\n          null\r\n        ]\r\n      },\r\n      \"success\": true,\r\n      \"token\": \"{{cloudsim_token}}\"\r\n    }\r\n\r\nNow, as the username is included inside the Auth0 Token, the same command responds with:\r\n\r\n    {\r\n      \"decoded\": {\r\n        \"identities\": [\r\n          \"german@creativa77.com.ar\",\r\n          \"teamGer\"\r\n        ]\r\n      },\r\n      \"success\": true,\r\n      \"token\": \"{{cloudsim_token}}\"\r\n    }\r\n\r\nThis way we avoid passing the username in the query.\r\n\r\nNotice that `req.user` contains the payload of the decoded token. It's email is in `req.user.email`.\r\n\r\n**Note: **The obtained Auth0 Token can still be decoded and modified, but as long as the Client Secret remains secret, it's signature won't be correctly encoded, and an invalid signature error will be thrown upon decoding.\r\n\r\nptal @andres_fortier", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-auth/pullrequests/26/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-auth/diffstat/osrf/cloudsim-auth:0ded94eb5dc7%0Dd6fb368b5606?from_pullrequest_id=26"}, "commits": {"href": "data/repositories/osrf/cloudsim-auth/pullrequests/26/commits.json"}, "self": {"href": "data/repositories/osrf/cloudsim-auth/pullrequests/26.json"}, "comments": {"href": "data/repositories/osrf/cloudsim-auth/pullrequests/26/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-auth/pullrequests/26/merge"}, "html": {"href": "#!/osrf/cloudsim-auth/pull-requests/26"}, "activity": {"href": "data/repositories/osrf/cloudsim-auth/pullrequests/26/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-auth/diff/osrf/cloudsim-auth:0ded94eb5dc7%0Dd6fb368b5606?from_pullrequest_id=26"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-auth/pullrequests/26/approve"}, "statuses": {"href": "data/repositories/osrf/cloudsim-auth/pullrequests/26/statuses_page=1.json"}}, "title": "Obtain username from Token", "close_source_branch": true, "reviewers": [], "id": 26, "destination": {"commit": {"hash": "d6fb368b5606", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-auth/commit/d6fb368b5606.json"}, "html": {"href": "#!/osrf/cloudsim-auth/commits/d6fb368b5606"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-auth.json"}, "html": {"href": "#!/osrf/cloudsim-auth"}, "avatar": {"href": "data/bytebucket.org/ravatar/{fcbe065d-e7d7-4c83-9ca6-5e91154a993c}ts=default"}}, "type": "repository", "name": "cloudsim-auth", "full_name": "osrf/cloudsim-auth", "uuid": "{fcbe065d-e7d7-4c83-9ca6-5e91154a993c}"}, "branch": {"name": "default"}}, "created_on": "2017-07-06T19:46:54.952870+00:00", "summary": {"raw": "In this PR I address part of [CLOUD-183](https://osrfoundation.atlassian.net/browse/CLOUD-183) (the second PR in gz-token is [here](https://github.com/osrf/gz-token/pull/10)).\r\n\r\nThe username is no longer passed as a query, instead, it is inside the Auth0 Token.\r\n\r\nBefore, a `GET` request to `/token` would respond with null identities, as none was passed as a query. To pass any identity, it had to be included as `/token?username=user`. (Examples using a local Cloudsim Auth server)\r\n\r\n    curl -X GET -H 'authorization: Bearer auth0_token' http://localhost:4001/token\r\n    \r\n    {\r\n      \"decoded\": {\r\n        \"identities\": [\r\n          null\r\n        ]\r\n      },\r\n      \"success\": true,\r\n      \"token\": \"{{cloudsim_token}}\"\r\n    }\r\n\r\nNow, as the username is included inside the Auth0 Token, the same command responds with:\r\n\r\n    {\r\n      \"decoded\": {\r\n        \"identities\": [\r\n          \"german@creativa77.com.ar\",\r\n          \"teamGer\"\r\n        ]\r\n      },\r\n      \"success\": true,\r\n      \"token\": \"{{cloudsim_token}}\"\r\n    }\r\n\r\nThis way we avoid passing the username in the query.\r\n\r\nNotice that `req.user` contains the payload of the decoded token. It's email is in `req.user.email`.\r\n\r\n**Note: **The obtained Auth0 Token can still be decoded and modified, but as long as the Client Secret remains secret, it's signature won't be correctly encoded, and an invalid signature error will be thrown upon decoding.\r\n\r\nptal @andres_fortier", "markup": "markdown", "html": "<p>In this PR I address part of <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/browse/CLOUD-183\" rel=\"nofollow\">CLOUD-183</a> (the second PR in gz-token is <a data-is-external-link=\"true\" href=\"https://github.com/osrf/gz-token/pull/10\" rel=\"nofollow\">here</a>).</p>\n<p>The username is no longer passed as a query, instead, it is inside the Auth0 Token.</p>\n<p>Before, a <code>GET</code> request to <code>/token</code> would respond with null identities, as none was passed as a query. To pass any identity, it had to be included as <code>/token?username=user</code>. (Examples using a local Cloudsim Auth server)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">curl -X GET -H &#39;authorization: Bearer auth0_token&#39; http://localhost:4001/token</span>\n\n<span class=\"x\">{</span>\n<span class=\"x\">  &quot;decoded&quot;: {</span>\n<span class=\"x\">    &quot;identities&quot;: [</span>\n<span class=\"x\">      null</span>\n<span class=\"x\">    ]</span>\n<span class=\"x\">  },</span>\n<span class=\"x\">  &quot;success&quot;: true,</span>\n<span class=\"x\">  &quot;token&quot;: &quot;</span><span class=\"cp\">{{</span><span class=\"nv\">cloudsim_token</span><span class=\"cp\">}}</span><span class=\"x\">&quot;</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<p>Now, as the username is included inside the Auth0 Token, the same command responds with:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">{</span>\n<span class=\"x\">  &quot;decoded&quot;: {</span>\n<span class=\"x\">    &quot;identities&quot;: [</span>\n<span class=\"x\">      &quot;german@creativa77.com.ar&quot;,</span>\n<span class=\"x\">      &quot;teamGer&quot;</span>\n<span class=\"x\">    ]</span>\n<span class=\"x\">  },</span>\n<span class=\"x\">  &quot;success&quot;: true,</span>\n<span class=\"x\">  &quot;token&quot;: &quot;</span><span class=\"cp\">{{</span><span class=\"nv\">cloudsim_token</span><span class=\"cp\">}}</span><span class=\"x\">&quot;</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<p>This way we avoid passing the username in the query.</p>\n<p>Notice that <code>req.user</code> contains the payload of the decoded token. It's email is in <code>req.user.email</code>.</p>\n<p><strong>Note: </strong>The obtained Auth0 Token can still be decoded and modified, but as long as the Client Secret remains secret, it's signature won't be correctly encoded, and an invalid signature error will be thrown upon decoding.</p>\n<p>ptal @andres_fortier</p>", "type": "rendered"}, "source": {"commit": {"hash": "12218411cd8a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-auth/commit/12218411cd8a.json"}, "html": {"href": "#!/osrf/cloudsim-auth/commits/12218411cd8a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-auth.json"}, "html": {"href": "#!/osrf/cloudsim-auth"}, "avatar": {"href": "data/bytebucket.org/ravatar/{fcbe065d-e7d7-4c83-9ca6-5e91154a993c}ts=default"}}, "type": "repository", "name": "cloudsim-auth", "full_name": "osrf/cloudsim-auth", "uuid": "{fcbe065d-e7d7-4c83-9ca6-5e91154a993c}"}, "branch": {"name": "remove-username-query"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-07-06T19:53:06.305896+00:00", "type": "participant", "approved": false, "user": {"display_name": "Andr\u00e9s Fortier", "uuid": "{f9c4496c-9146-4675-b1d5-bd0ed156cf58}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf9c4496c-9146-4675-b1d5-bd0ed156cf58%7D"}, "html": {"href": "https://bitbucket.org/%7Bf9c4496c-9146-4675-b1d5-bd0ed156cf58%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:c59901bb-7eb0-4d2c-966f-7c66c154fef3/4af4377f-d065-496d-8cd4-01d5c760c6a3/128"}}, "nickname": "andres_fortier", "type": "user", "account_id": "557058:c59901bb-7eb0-4d2c-966f-7c66c154fef3"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-11T17:47:44.982713+00:00", "type": "participant", "approved": false, "user": {"display_name": "Germ\u00e1n M\u00e1s", "uuid": "{4135c724-adb3-4ffb-a983-57bf615c4d1c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4135c724-adb3-4ffb-a983-57bf615c4d1c%7D"}, "html": {"href": "https://bitbucket.org/%7B4135c724-adb3-4ffb-a983-57bf615c4d1c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ebe9f39d-0ca2-4f29-82cf-6cc3df017384/b758f5b1-8d6c-4aa7-8106-ebf2b29bc9a9/128"}}, "nickname": "Germ\u00e1n M\u00e1s", "type": "user", "account_id": "557058:ebe9f39d-0ca2-4f29-82cf-6cc3df017384"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-06T20:10:51.071949+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-07T16:23:55.676584+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-07-11T17:48:06.858787+00:00", "author": {"display_name": "Germ\u00e1n M\u00e1s", "uuid": "{4135c724-adb3-4ffb-a983-57bf615c4d1c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4135c724-adb3-4ffb-a983-57bf615c4d1c%7D"}, "html": {"href": "https://bitbucket.org/%7B4135c724-adb3-4ffb-a983-57bf615c4d1c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ebe9f39d-0ca2-4f29-82cf-6cc3df017384/b758f5b1-8d6c-4aa7-8106-ebf2b29bc9a9/128"}}, "nickname": "Germ\u00e1n M\u00e1s", "type": "user", "account_id": "557058:ebe9f39d-0ca2-4f29-82cf-6cc3df017384"}, "merge_commit": {"hash": "0ded94eb5dc7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-auth/commit/0ded94eb5dc7.json"}, "html": {"href": "#!/osrf/cloudsim-auth/commits/0ded94eb5dc7"}}}, "closed_by": {"display_name": "Germ\u00e1n M\u00e1s", "uuid": "{4135c724-adb3-4ffb-a983-57bf615c4d1c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4135c724-adb3-4ffb-a983-57bf615c4d1c%7D"}, "html": {"href": "https://bitbucket.org/%7B4135c724-adb3-4ffb-a983-57bf615c4d1c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ebe9f39d-0ca2-4f29-82cf-6cc3df017384/b758f5b1-8d6c-4aa7-8106-ebf2b29bc9a9/128"}}, "nickname": "Germ\u00e1n M\u00e1s", "type": "user", "account_id": "557058:ebe9f39d-0ca2-4f29-82cf-6cc3df017384"}}