{"links": {"self": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/49/comments/36992729.json"}, "html": {"href": "#!/osrf/cloudsim-sim/pull-requests/49/_/diff#comment-36992729"}}, "parent": {"id": 36800275, "links": {"self": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/49/comments/36800275.json"}, "html": {"href": "#!/osrf/cloudsim-sim/pull-requests/49/_/diff#comment-36800275"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 49, "links": {"self": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/49.json"}, "html": {"href": "#!/osrf/cloudsim-sim/pull-requests/49"}}, "title": "Support callbacks from cloudsim-sim to portal"}, "content": {"raw": "Thanks @iche033  ! \nAlso, regarding your question: \n\n```\n#!python\n\ndo you think we should avoid overwriting existing simulation data in portal with PUT? We could then avoid doing an extra GET and then extending the data.\n```\nI followed that approach to allow clients to send only the data they are interesting in (or know about), without requiring all clients to keep the full status of the sim. In other words I find it somewhat dangerous to let any client override the entire status. I believe statuses could come from different places (eg. some clients are interested in sending statuses like ready, running, stopped , while others will need to send score stats) .\nIf we agree to follow this idea, and in order to avoid the need for 2 requests, we could update portal code to do this logic of 'extending' current status with the received data. What do you think? \n\n Thanks again! \n", "markup": "markdown", "html": "<p>Thanks @iche033  ! \nAlso, regarding your question: </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">do</span> <span class=\"n\">you</span> <span class=\"n\">think</span> <span class=\"n\">we</span> <span class=\"n\">should</span> <span class=\"n\">avoid</span> <span class=\"n\">overwriting</span> <span class=\"n\">existing</span> <span class=\"n\">simulation</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">portal</span> <span class=\"k\">with</span> <span class=\"n\">PUT</span><span class=\"err\">?</span> <span class=\"n\">We</span> <span class=\"n\">could</span> <span class=\"n\">then</span> <span class=\"n\">avoid</span> <span class=\"n\">doing</span> <span class=\"n\">an</span> <span class=\"n\">extra</span> <span class=\"n\">GET</span> <span class=\"ow\">and</span> <span class=\"n\">then</span> <span class=\"n\">extending</span> <span class=\"n\">the</span> <span class=\"n\">data</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>I followed that approach to allow clients to send only the data they are interesting in (or know about), without requiring all clients to keep the full status of the sim. In other words I find it somewhat dangerous to let any client override the entire status. I believe statuses could come from different places (eg. some clients are interested in sending statuses like ready, running, stopped , while others will need to send score stats) .\nIf we agree to follow this idea, and in order to avoid the need for 2 requests, we could update portal code to do this logic of 'extending' current status with the received data. What do you think? </p>\n<p>Thanks again! </p>", "type": "rendered"}, "created_on": "2017-05-16T16:57:06.818511+00:00", "user": {"display_name": "Patricio Reyna Almandos", "uuid": "{8d07164d-cee3-4eb0-8816-97f42c297bc3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D"}, "html": {"href": "https://bitbucket.org/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2f4f0911-c46a-4f3c-92af-650544415846/235d39e4-77b1-46b7-ac0f-900424378fef/128"}}, "nickname": "Patricio Reyna Almandos", "type": "user", "account_id": "557058:2f4f0911-c46a-4f3c-92af-650544415846"}, "updated_on": "2017-05-16T16:57:06.826585+00:00", "type": "pullrequest_comment", "id": 36992729}