{"rendered": {"description": {"raw": "Added support for wrapping all events within a parent property. Example: {\"simulator\": { event obj } } instead of just sending { event obj } .  This helps differentiating at Portal the events sent by the simulators vs those sent by the field computer.\r\n\r\nIn addition: when using this new parent property I had to keep track of and extend the cumulative state with the new event (before sending to portal). This was needed because the portal will just override everything with the received data, losing any data not included in the last event.\r\n\r\nBy doing this, in the srcsimulations resource @ portal , we will end up having something like:\r\n\r\n\r\n```\r\n#!python\r\n\r\nsrcsimulations-123: \r\n{\r\n  fieldcomputer: { state derived from events sent by field comp},\r\n  simulator: { state derived  from events sent by simulator},\r\n  other data sent by other clients (which didn't go through events module)\r\n}\r\n```", "markup": "markdown", "html": "<p>Added support for wrapping all events within a parent property. Example: {\"simulator\": { event obj } } instead of just sending { event obj } .  This helps differentiating at Portal the events sent by the simulators vs those sent by the field computer.</p>\n<p>In addition: when using this new parent property I had to keep track of and extend the cumulative state with the new event (before sending to portal). This was needed because the portal will just override everything with the received data, losing any data not included in the last event.</p>\n<p>By doing this, in the srcsimulations resource @ portal , we will end up having something like:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">srcsimulations</span><span class=\"o\">-</span><span class=\"mi\">123</span><span class=\"p\">:</span> \n<span class=\"p\">{</span>\n  <span class=\"n\">fieldcomputer</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"n\">state</span> <span class=\"n\">derived</span> <span class=\"kn\">from</span> <span class=\"nn\">events</span> <span class=\"nn\">sent</span> <span class=\"nn\">by</span> <span class=\"nn\">field</span> <span class=\"nn\">comp</span><span class=\"p\">},</span>\n  <span class=\"n\">simulator</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"n\">state</span> <span class=\"n\">derived</span>  <span class=\"kn\">from</span> <span class=\"nn\">events</span> <span class=\"nn\">sent</span> <span class=\"nn\">by</span> <span class=\"nn\">simulator</span><span class=\"p\">},</span>\n  <span class=\"n\">other</span> <span class=\"n\">data</span> <span class=\"n\">sent</span> <span class=\"n\">by</span> <span class=\"n\">other</span> <span class=\"n\">clients</span> <span class=\"p\">(</span><span class=\"n\">which</span> <span class=\"n\">didn</span><span class=\"s1\">&#39;t go through events module)</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Changes events:", "markup": "markdown", "html": "<p>Changes events:</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Added support for wrapping all events within a parent property. Example: {\"simulator\": { event obj } } instead of just sending { event obj } .  This helps differentiating at Portal the events sent by the simulators vs those sent by the field computer.\r\n\r\nIn addition: when using this new parent property I had to keep track of and extend the cumulative state with the new event (before sending to portal). This was needed because the portal will just override everything with the received data, losing any data not included in the last event.\r\n\r\nBy doing this, in the srcsimulations resource @ portal , we will end up having something like:\r\n\r\n\r\n```\r\n#!python\r\n\r\nsrcsimulations-123: \r\n{\r\n  fieldcomputer: { state derived from events sent by field comp},\r\n  simulator: { state derived  from events sent by simulator},\r\n  other data sent by other clients (which didn't go through events module)\r\n}\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-sim/pullrequests/53/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-sim/diffstat/osrf/cloudsim-sim:26f3bb418200%0D57dc86cd23f3?from_pullrequest_id=53"}, "commits": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/53/commits.json"}, "self": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/53.json"}, "comments": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/53/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-sim/pullrequests/53/merge"}, "html": {"href": "#!/osrf/cloudsim-sim/pull-requests/53"}, "activity": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/53/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-sim/diff/osrf/cloudsim-sim:26f3bb418200%0D57dc86cd23f3?from_pullrequest_id=53"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-sim/pullrequests/53/approve"}, "statuses": {"href": "data/repositories/osrf/cloudsim-sim/pullrequests/53/statuses_page=1.json"}}, "title": "Changes events:", "close_source_branch": true, "reviewers": [], "id": 53, "destination": {"commit": {"hash": "57dc86cd23f3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-sim/commit/57dc86cd23f3.json"}, "html": {"href": "#!/osrf/cloudsim-sim/commits/57dc86cd23f3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-sim.json"}, "html": {"href": "#!/osrf/cloudsim-sim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7338bbed-6d00-4c97-9f6f-3aab7f13d165}ts=default"}}, "type": "repository", "name": "cloudsim-sim", "full_name": "osrf/cloudsim-sim", "uuid": "{7338bbed-6d00-4c97-9f6f-3aab7f13d165}"}, "branch": {"name": "default"}}, "created_on": "2017-05-19T18:26:02.548350+00:00", "summary": {"raw": "Added support for wrapping all events within a parent property. Example: {\"simulator\": { event obj } } instead of just sending { event obj } .  This helps differentiating at Portal the events sent by the simulators vs those sent by the field computer.\r\n\r\nIn addition: when using this new parent property I had to keep track of and extend the cumulative state with the new event (before sending to portal). This was needed because the portal will just override everything with the received data, losing any data not included in the last event.\r\n\r\nBy doing this, in the srcsimulations resource @ portal , we will end up having something like:\r\n\r\n\r\n```\r\n#!python\r\n\r\nsrcsimulations-123: \r\n{\r\n  fieldcomputer: { state derived from events sent by field comp},\r\n  simulator: { state derived  from events sent by simulator},\r\n  other data sent by other clients (which didn't go through events module)\r\n}\r\n```", "markup": "markdown", "html": "<p>Added support for wrapping all events within a parent property. Example: {\"simulator\": { event obj } } instead of just sending { event obj } .  This helps differentiating at Portal the events sent by the simulators vs those sent by the field computer.</p>\n<p>In addition: when using this new parent property I had to keep track of and extend the cumulative state with the new event (before sending to portal). This was needed because the portal will just override everything with the received data, losing any data not included in the last event.</p>\n<p>By doing this, in the srcsimulations resource @ portal , we will end up having something like:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">srcsimulations</span><span class=\"o\">-</span><span class=\"mi\">123</span><span class=\"p\">:</span> \n<span class=\"p\">{</span>\n  <span class=\"n\">fieldcomputer</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"n\">state</span> <span class=\"n\">derived</span> <span class=\"kn\">from</span> <span class=\"nn\">events</span> <span class=\"nn\">sent</span> <span class=\"nn\">by</span> <span class=\"nn\">field</span> <span class=\"nn\">comp</span><span class=\"p\">},</span>\n  <span class=\"n\">simulator</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"n\">state</span> <span class=\"n\">derived</span>  <span class=\"kn\">from</span> <span class=\"nn\">events</span> <span class=\"nn\">sent</span> <span class=\"nn\">by</span> <span class=\"nn\">simulator</span><span class=\"p\">},</span>\n  <span class=\"n\">other</span> <span class=\"n\">data</span> <span class=\"n\">sent</span> <span class=\"n\">by</span> <span class=\"n\">other</span> <span class=\"n\">clients</span> <span class=\"p\">(</span><span class=\"n\">which</span> <span class=\"n\">didn</span><span class=\"s1\">&#39;t go through events module)</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "0d54db79f7da", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-sim/commit/0d54db79f7da.json"}, "html": {"href": "#!/osrf/cloudsim-sim/commits/0d54db79f7da"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-sim.json"}, "html": {"href": "#!/osrf/cloudsim-sim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7338bbed-6d00-4c97-9f6f-3aab7f13d165}ts=default"}}, "type": "repository", "name": "cloudsim-sim", "full_name": "osrf/cloudsim-sim", "uuid": "{7338bbed-6d00-4c97-9f6f-3aab7f13d165}"}, "branch": {"name": "changes-to-sim-events"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-05-24T13:31:31.175816+00:00", "type": "participant", "approved": false, "user": {"display_name": "Patricio Reyna Almandos", "uuid": "{8d07164d-cee3-4eb0-8816-97f42c297bc3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D"}, "html": {"href": "https://bitbucket.org/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2f4f0911-c46a-4f3c-92af-650544415846/235d39e4-77b1-46b7-ac0f-900424378fef/128"}}, "nickname": "Patricio Reyna Almandos", "type": "user", "account_id": "557058:2f4f0911-c46a-4f3c-92af-650544415846"}}, {"role": "PARTICIPANT", "participated_on": "2017-05-23T21:41:06.707538+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-05-24T13:37:59.304052+00:00", "author": {"display_name": "Patricio Reyna Almandos", "uuid": "{8d07164d-cee3-4eb0-8816-97f42c297bc3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D"}, "html": {"href": "https://bitbucket.org/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2f4f0911-c46a-4f3c-92af-650544415846/235d39e4-77b1-46b7-ac0f-900424378fef/128"}}, "nickname": "Patricio Reyna Almandos", "type": "user", "account_id": "557058:2f4f0911-c46a-4f3c-92af-650544415846"}, "merge_commit": {"hash": "26f3bb418200", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-sim/commit/26f3bb418200.json"}, "html": {"href": "#!/osrf/cloudsim-sim/commits/26f3bb418200"}}}, "closed_by": {"display_name": "Patricio Reyna Almandos", "uuid": "{8d07164d-cee3-4eb0-8816-97f42c297bc3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D"}, "html": {"href": "https://bitbucket.org/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2f4f0911-c46a-4f3c-92af-650544415846/235d39e4-77b1-46b7-ac0f-900424378fef/128"}}, "nickname": "Patricio Reyna Almandos", "type": "user", "account_id": "557058:2f4f0911-c46a-4f3c-92af-650544415846"}}