{"links": {"self": {"href": "data/repositories/osrf/cloudsim-grant/issues/14/comments/34265745.json"}, "html": {"href": "#!/osrf/cloudsim-grant/issues/14#comment-34265745"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-grant/issues/14.json"}}, "type": "issue", "id": 14, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-grant.json"}, "html": {"href": "#!/osrf/cloudsim-grant"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ca19179-2686-45dc-b64a-7b1be2b404de}ts=default"}}, "type": "repository", "name": "cloudsim-grant", "full_name": "osrf/cloudsim-grant", "uuid": "{7ca19179-2686-45dc-b64a-7b1be2b404de}"}, "title": "Possible data loss during deployment"}, "content": {"raw": "New findings. Since the data corruption has only been observed in our user data, and there's an outstanding bug reported on the \"Cloudsim status spreadsheet\" about missing user data, it looks like the problem is in the auth server, not the data reading code.\n\nThe auth server in dev does this:\n```\n#!javascript\n\nif (process.env.CLOUDSIM_ADMIN)\n  adminUser = process.env.CLOUDSIM_ADMIN;\ncsgrant.init(adminUser, {'root': {}, 'group':{} }, dbName,\n  process.env.CLOUDSIM_AUTH_DB, ()=>{\n    console.log( dbName + ' redis database loaded')\n  });\n\n...\n\nif (process.env.CLOUDSIM_ADMIN)\n  adminUser = process.env.CLOUDSIM_ADMIN;\ncsgrant.init(adminUser, {'root': {}, 'group':{} }, dbName,\n  process.env.CLOUDSIM_AUTH_DB, ()=>{\n    console.log( dbName + ' redis database loaded')\n  });\n\n\n```\n\n\n\nThe auth server in production is newer, and does this:\n```\n#!javascript\n\n\ncsgrant.init(resources,\n  dbName,\n  process.env.CLOUDSIM_AUTH_DB,\n  httpServer,\n  ()=>{\n    console.log( dbName + ' redis database loaded')\n    httpServer.listen(port)\n  })\n\n\n```\nI believe that starting the server in parallel with the server (old dev code) can cause the problem we've seen. \n\nI believe we lost user data when I upgraded the production database machine from a t2.micro. Changing the database ip on Elastic Beanstalk triggered a deployment (which is rare for the auth server).\n\nI'm in the process of replicating the data and trying to reproduce the problem on my local machine.\n\nI think that the fix I was working on was not the correct one, but has value since it resumes previous work (to enable batch grant/revoke) and provides many new unit tests, including a test server.\n\nSince the current \"default\" of the auth server already includes better data loading, expect a PR on auth (but no new issue).", "markup": "markdown", "html": "<p>New findings. Since the data corruption has only been observed in our user data, and there's an outstanding bug reported on the \"Cloudsim status spreadsheet\" about missing user data, it looks like the problem is in the auth server, not the data reading code.</p>\n<p>The auth server in dev does this:</p>\n<div class=\"codehilite language-javascript\"><pre><span></span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">CLOUDSIM_ADMIN</span><span class=\"p\">)</span>\n  <span class=\"nx\">adminUser</span> <span class=\"o\">=</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">CLOUDSIM_ADMIN</span><span class=\"p\">;</span>\n<span class=\"nx\">csgrant</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">(</span><span class=\"nx\">adminUser</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;root&#39;</span><span class=\"o\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">&#39;group&#39;</span><span class=\"o\">:</span><span class=\"p\">{}</span> <span class=\"p\">},</span> <span class=\"nx\">dbName</span><span class=\"p\">,</span>\n  <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">CLOUDSIM_AUTH_DB</span><span class=\"p\">,</span> <span class=\"p\">()=&gt;{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span> <span class=\"nx\">dbName</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; redis database loaded&#39;</span><span class=\"p\">)</span>\n  <span class=\"p\">});</span>\n\n<span class=\"p\">...</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">CLOUDSIM_ADMIN</span><span class=\"p\">)</span>\n  <span class=\"nx\">adminUser</span> <span class=\"o\">=</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">CLOUDSIM_ADMIN</span><span class=\"p\">;</span>\n<span class=\"nx\">csgrant</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">(</span><span class=\"nx\">adminUser</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;root&#39;</span><span class=\"o\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">&#39;group&#39;</span><span class=\"o\">:</span><span class=\"p\">{}</span> <span class=\"p\">},</span> <span class=\"nx\">dbName</span><span class=\"p\">,</span>\n  <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">CLOUDSIM_AUTH_DB</span><span class=\"p\">,</span> <span class=\"p\">()=&gt;{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span> <span class=\"nx\">dbName</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; redis database loaded&#39;</span><span class=\"p\">)</span>\n  <span class=\"p\">});</span>\n</pre></div>\n\n\n<p>The auth server in production is newer, and does this:</p>\n<div class=\"codehilite language-javascript\"><pre><span></span><span class=\"nx\">csgrant</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">(</span><span class=\"nx\">resources</span><span class=\"p\">,</span>\n  <span class=\"nx\">dbName</span><span class=\"p\">,</span>\n  <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">CLOUDSIM_AUTH_DB</span><span class=\"p\">,</span>\n  <span class=\"nx\">httpServer</span><span class=\"p\">,</span>\n  <span class=\"p\">()=&gt;{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span> <span class=\"nx\">dbName</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; redis database loaded&#39;</span><span class=\"p\">)</span>\n    <span class=\"nx\">httpServer</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n</pre></div>\n\n\n<p>I believe that starting the server in parallel with the server (old dev code) can cause the problem we've seen. </p>\n<p>I believe we lost user data when I upgraded the production database machine from a t2.micro. Changing the database ip on Elastic Beanstalk triggered a deployment (which is rare for the auth server).</p>\n<p>I'm in the process of replicating the data and trying to reproduce the problem on my local machine.</p>\n<p>I think that the fix I was working on was not the correct one, but has value since it resumes previous work (to enable batch grant/revoke) and provides many new unit tests, including a test server.</p>\n<p>Since the current \"default\" of the auth server already includes better data loading, expect a PR on auth (but no new issue).</p>", "type": "rendered"}, "created_on": "2017-02-08T23:15:17.159897+00:00", "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "updated_on": "2017-02-08T23:18:52.515829+00:00", "type": "issue_comment", "id": 34265745}