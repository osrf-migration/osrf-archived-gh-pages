{"rendered": {"description": {"raw": "This PR build on top of pull request #31. Please review that one first.\r\n\r\nThe state of resources is now saved in the database\r\n\r\nAfter updating a server to use these changes, the expected behavior is:\r\n\r\n1. the first time a server is launched and if there exist no states in db, the resources will be reconstructed from the logs (old way). The resources will then be written to db as a key (`[name]:state`) - this is the database state.\r\n\r\n1. subsequent operations, e.g. create resource, grant, revoke, will be written as logs to the db (same as before). A counter (`[name]:state-backlog`) is used to keep track of the number of operations performed after a saved state\r\n\r\n1. once 10000 number of db operations have been written, a new state will be saved which overwrites the old one. The `state-backlog` counter resets to 0.\r\n\r\n1. when the server is redeployed, it loads the latest saved state from db to create the resources. It then uses the counter to determine how many operations are needed to reconstruct the resources back to the most recent state before the redeployment.", "markup": "markdown", "html": "<p>This PR build on top of <a href=\"#!/osrf/cloudsim-grant/pull-requests/31/prevent-clearing-and-rewriting-to-database\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #31</a>. Please review that one first.</p>\n<p>The state of resources is now saved in the database</p>\n<p>After updating a server to use these changes, the expected behavior is:</p>\n<ol>\n<li>\n<p>the first time a server is launched and if there exist no states in db, the resources will be reconstructed from the logs (old way). The resources will then be written to db as a key (<code>[name]:state</code>) - this is the database state.</p>\n</li>\n<li>\n<p>subsequent operations, e.g. create resource, grant, revoke, will be written as logs to the db (same as before). A counter (<code>[name]:state-backlog</code>) is used to keep track of the number of operations performed after a saved state</p>\n</li>\n<li>\n<p>once 10000 number of db operations have been written, a new state will be saved which overwrites the old one. The <code>state-backlog</code> counter resets to 0.</p>\n</li>\n<li>\n<p>when the server is redeployed, it loads the latest saved state from db to create the resources. It then uses the counter to determine how many operations are needed to reconstruct the resources back to the most recent state before the redeployment.</p>\n</li>\n</ol>", "type": "rendered"}, "title": {"raw": "Support saving and reloading database states", "markup": "markdown", "html": "<p>Support saving and reloading database states</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This PR build on top of pull request #31. Please review that one first.\r\n\r\nThe state of resources is now saved in the database\r\n\r\nAfter updating a server to use these changes, the expected behavior is:\r\n\r\n1. the first time a server is launched and if there exist no states in db, the resources will be reconstructed from the logs (old way). The resources will then be written to db as a key (`[name]:state`) - this is the database state.\r\n\r\n1. subsequent operations, e.g. create resource, grant, revoke, will be written as logs to the db (same as before). A counter (`[name]:state-backlog`) is used to keep track of the number of operations performed after a saved state\r\n\r\n1. once 10000 number of db operations have been written, a new state will be saved which overwrites the old one. The `state-backlog` counter resets to 0.\r\n\r\n1. when the server is redeployed, it loads the latest saved state from db to create the resources. It then uses the counter to determine how many operations are needed to reconstruct the resources back to the most recent state before the redeployment.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-grant/pullrequests/32/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-grant/diffstat/osrf/cloudsim-grant:a3c464af1e5e%0D6f24e4a17a9d?from_pullrequest_id=32"}, "commits": {"href": "data/repositories/osrf/cloudsim-grant/pullrequests/32/commits.json"}, "self": {"href": "data/repositories/osrf/cloudsim-grant/pullrequests/32.json"}, "comments": {"href": "data/repositories/osrf/cloudsim-grant/pullrequests/32/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-grant/pullrequests/32/merge"}, "html": {"href": "#!/osrf/cloudsim-grant/pull-requests/32"}, "activity": {"href": "data/repositories/osrf/cloudsim-grant/pullrequests/32/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-grant/diff/osrf/cloudsim-grant:a3c464af1e5e%0D6f24e4a17a9d?from_pullrequest_id=32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-grant/pullrequests/32/approve"}, "statuses": {"href": "data/repositories/osrf/cloudsim-grant/pullrequests/32/statuses_page=1.json"}}, "title": "Support saving and reloading database states", "close_source_branch": true, "reviewers": [], "id": 32, "destination": {"commit": {"hash": "6f24e4a17a9d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-grant/commit/6f24e4a17a9d.json"}, "html": {"href": "#!/osrf/cloudsim-grant/commits/6f24e4a17a9d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-grant.json"}, "html": {"href": "#!/osrf/cloudsim-grant"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ca19179-2686-45dc-b64a-7b1be2b404de}ts=default"}}, "type": "repository", "name": "cloudsim-grant", "full_name": "osrf/cloudsim-grant", "uuid": "{7ca19179-2686-45dc-b64a-7b1be2b404de}"}, "branch": {"name": "default"}}, "created_on": "2017-03-24T01:34:55.068042+00:00", "summary": {"raw": "This PR build on top of pull request #31. Please review that one first.\r\n\r\nThe state of resources is now saved in the database\r\n\r\nAfter updating a server to use these changes, the expected behavior is:\r\n\r\n1. the first time a server is launched and if there exist no states in db, the resources will be reconstructed from the logs (old way). The resources will then be written to db as a key (`[name]:state`) - this is the database state.\r\n\r\n1. subsequent operations, e.g. create resource, grant, revoke, will be written as logs to the db (same as before). A counter (`[name]:state-backlog`) is used to keep track of the number of operations performed after a saved state\r\n\r\n1. once 10000 number of db operations have been written, a new state will be saved which overwrites the old one. The `state-backlog` counter resets to 0.\r\n\r\n1. when the server is redeployed, it loads the latest saved state from db to create the resources. It then uses the counter to determine how many operations are needed to reconstruct the resources back to the most recent state before the redeployment.", "markup": "markdown", "html": "<p>This PR build on top of <a href=\"#!/osrf/cloudsim-grant/pull-requests/31/prevent-clearing-and-rewriting-to-database\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #31</a>. Please review that one first.</p>\n<p>The state of resources is now saved in the database</p>\n<p>After updating a server to use these changes, the expected behavior is:</p>\n<ol>\n<li>\n<p>the first time a server is launched and if there exist no states in db, the resources will be reconstructed from the logs (old way). The resources will then be written to db as a key (<code>[name]:state</code>) - this is the database state.</p>\n</li>\n<li>\n<p>subsequent operations, e.g. create resource, grant, revoke, will be written as logs to the db (same as before). A counter (<code>[name]:state-backlog</code>) is used to keep track of the number of operations performed after a saved state</p>\n</li>\n<li>\n<p>once 10000 number of db operations have been written, a new state will be saved which overwrites the old one. The <code>state-backlog</code> counter resets to 0.</p>\n</li>\n<li>\n<p>when the server is redeployed, it loads the latest saved state from db to create the resources. It then uses the counter to determine how many operations are needed to reconstruct the resources back to the most recent state before the redeployment.</p>\n</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "b1a77cffa79c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-grant/commit/b1a77cffa79c.json"}, "html": {"href": "#!/osrf/cloudsim-grant/commits/b1a77cffa79c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-grant.json"}, "html": {"href": "#!/osrf/cloudsim-grant"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ca19179-2686-45dc-b64a-7b1be2b404de}ts=default"}}, "type": "repository", "name": "cloudsim-grant", "full_name": "osrf/cloudsim-grant", "uuid": "{7ca19179-2686-45dc-b64a-7b1be2b404de}"}, "branch": {"name": "save_state"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-04-12T01:06:11.489818+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-04-12T01:02:11.133760+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-04-12T16:54:21.432481+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "a3c464af1e5e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-grant/commit/a3c464af1e5e.json"}, "html": {"href": "#!/osrf/cloudsim-grant/commits/a3c464af1e5e"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}