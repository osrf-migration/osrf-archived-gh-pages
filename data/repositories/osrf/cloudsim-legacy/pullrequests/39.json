{"rendered": {"description": {"raw": "This program requires two YAML files (test files are included in yaml/ ). The first file contains a list of teams, with the team information (name, timezone, CloudSim constellation, ...). The second file contains a list of tasks with its information (title, latency, uplink, local times to start/stop the task, ...). For each team, this program performs the next operations:\r\n\r\n  1. Create a sequence of tasks according to the YAML task file and team file.\r\n  2. Convert the local start/stop times to UTC.\r\n  3. Upload a JSON file containing the tasks into the Team's CloudSim.\r\n  4. Load the set of tasks into the Redis DB running on the Team's CloudSim.\r\n\r\nHow can I test this tool using Amazon?\r\n\r\n  1. Run CloudSim on your local machine.\r\n  2. Connect to your local CloudSim and start two new CloudSim constellations (CS-01, CS-02).\r\n  3. Connect to CS-01 and start a new simulator constellation (Sim-01).\r\n  4. Connect to CS-02 and start a new simulator constellation (Sim-02).\r\n  5. Each team should have a CloudSim and a simulator constellation associated. Update teams.yaml with the constellation IDs for each team.\r\n  6. Run ./bin/send_tasks.py <teams_file> <tasks_file>\r\n  7. A new task list should appear on each Team's CloudSim.", "markup": "markdown", "html": "<p>This program requires two YAML files (test files are included in yaml/ ). The first file contains a list of teams, with the team information (name, timezone, CloudSim constellation, ...). The second file contains a list of tasks with its information (title, latency, uplink, local times to start/stop the task, ...). For each team, this program performs the next operations:</p>\n<ol>\n<li>Create a sequence of tasks according to the YAML task file and team file.</li>\n<li>Convert the local start/stop times to UTC.</li>\n<li>Upload a JSON file containing the tasks into the Team's CloudSim.</li>\n<li>Load the set of tasks into the Redis DB running on the Team's CloudSim.</li>\n</ol>\n<p>How can I test this tool using Amazon?</p>\n<ol>\n<li>Run CloudSim on your local machine.</li>\n<li>Connect to your local CloudSim and start two new CloudSim constellations (CS-01, CS-02).</li>\n<li>Connect to CS-01 and start a new simulator constellation (Sim-01).</li>\n<li>Connect to CS-02 and start a new simulator constellation (Sim-02).</li>\n<li>Each team should have a CloudSim and a simulator constellation associated. Update teams.yaml with the constellation IDs for each team.</li>\n<li>Run ./bin/send_tasks.py &lt;teams_file&gt; &lt;tasks_file&gt;</li>\n<li>A new task list should appear on each Team's CloudSim.</li>\n</ol>", "type": "rendered"}, "title": {"raw": "send_tasks.py : A command line tool for loading tasks into a list of constellations", "markup": "markdown", "html": "<p>send_tasks.py : A command line tool for loading tasks into a list of constellations</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This program requires two YAML files (test files are included in yaml/ ). The first file contains a list of teams, with the team information (name, timezone, CloudSim constellation, ...). The second file contains a list of tasks with its information (title, latency, uplink, local times to start/stop the task, ...). For each team, this program performs the next operations:\r\n\r\n  1. Create a sequence of tasks according to the YAML task file and team file.\r\n  2. Convert the local start/stop times to UTC.\r\n  3. Upload a JSON file containing the tasks into the Team's CloudSim.\r\n  4. Load the set of tasks into the Redis DB running on the Team's CloudSim.\r\n\r\nHow can I test this tool using Amazon?\r\n\r\n  1. Run CloudSim on your local machine.\r\n  2. Connect to your local CloudSim and start two new CloudSim constellations (CS-01, CS-02).\r\n  3. Connect to CS-01 and start a new simulator constellation (Sim-01).\r\n  4. Connect to CS-02 and start a new simulator constellation (Sim-02).\r\n  5. Each team should have a CloudSim and a simulator constellation associated. Update teams.yaml with the constellation IDs for each team.\r\n  6. Run ./bin/send_tasks.py <teams_file> <tasks_file>\r\n  7. A new task list should appear on each Team's CloudSim.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-legacy/pullrequests/39/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-legacy/diffstat/osrf/cloudsim-legacy:6596daf80192%0Db597418a4562?from_pullrequest_id=39"}, "commits": {"href": "data/repositories/osrf/cloudsim-legacy/pullrequests/39/commits.json"}, "self": {"href": "data/repositories/osrf/cloudsim-legacy/pullrequests/39.json"}, "comments": {"href": "data/repositories/osrf/cloudsim-legacy/pullrequests/39/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-legacy/pullrequests/39/merge"}, "html": {"href": "#!/osrf/cloudsim-legacy/pull-requests/39"}, "activity": {"href": "data/repositories/osrf/cloudsim-legacy/pullrequests/39/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-legacy/diff/osrf/cloudsim-legacy:6596daf80192%0Db597418a4562?from_pullrequest_id=39"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/cloudsim-legacy/pullrequests/39/approve"}, "statuses": {"href": "data/repositories/osrf/cloudsim-legacy/pullrequests/39/statuses_page=1.json"}}, "title": "send_tasks.py : A command line tool for loading tasks into a list of constellations", "close_source_branch": true, "reviewers": [], "id": 39, "destination": {"commit": {"hash": "b597418a4562", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-legacy/commit/b597418a4562.json"}, "html": {"href": "#!/osrf/cloudsim-legacy/commits/b597418a4562"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-legacy.json"}, "html": {"href": "#!/osrf/cloudsim-legacy"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e799e7f6-0caa-464a-97f8-8605a37ebfb1}ts=python"}}, "type": "repository", "name": "cloudsim-legacy", "full_name": "osrf/cloudsim-legacy", "uuid": "{e799e7f6-0caa-464a-97f8-8605a37ebfb1}"}, "branch": {"name": "default"}}, "created_on": "2013-05-05T00:38:15.290828+00:00", "summary": {"raw": "This program requires two YAML files (test files are included in yaml/ ). The first file contains a list of teams, with the team information (name, timezone, CloudSim constellation, ...). The second file contains a list of tasks with its information (title, latency, uplink, local times to start/stop the task, ...). For each team, this program performs the next operations:\r\n\r\n  1. Create a sequence of tasks according to the YAML task file and team file.\r\n  2. Convert the local start/stop times to UTC.\r\n  3. Upload a JSON file containing the tasks into the Team's CloudSim.\r\n  4. Load the set of tasks into the Redis DB running on the Team's CloudSim.\r\n\r\nHow can I test this tool using Amazon?\r\n\r\n  1. Run CloudSim on your local machine.\r\n  2. Connect to your local CloudSim and start two new CloudSim constellations (CS-01, CS-02).\r\n  3. Connect to CS-01 and start a new simulator constellation (Sim-01).\r\n  4. Connect to CS-02 and start a new simulator constellation (Sim-02).\r\n  5. Each team should have a CloudSim and a simulator constellation associated. Update teams.yaml with the constellation IDs for each team.\r\n  6. Run ./bin/send_tasks.py <teams_file> <tasks_file>\r\n  7. A new task list should appear on each Team's CloudSim.", "markup": "markdown", "html": "<p>This program requires two YAML files (test files are included in yaml/ ). The first file contains a list of teams, with the team information (name, timezone, CloudSim constellation, ...). The second file contains a list of tasks with its information (title, latency, uplink, local times to start/stop the task, ...). For each team, this program performs the next operations:</p>\n<ol>\n<li>Create a sequence of tasks according to the YAML task file and team file.</li>\n<li>Convert the local start/stop times to UTC.</li>\n<li>Upload a JSON file containing the tasks into the Team's CloudSim.</li>\n<li>Load the set of tasks into the Redis DB running on the Team's CloudSim.</li>\n</ol>\n<p>How can I test this tool using Amazon?</p>\n<ol>\n<li>Run CloudSim on your local machine.</li>\n<li>Connect to your local CloudSim and start two new CloudSim constellations (CS-01, CS-02).</li>\n<li>Connect to CS-01 and start a new simulator constellation (Sim-01).</li>\n<li>Connect to CS-02 and start a new simulator constellation (Sim-02).</li>\n<li>Each team should have a CloudSim and a simulator constellation associated. Update teams.yaml with the constellation IDs for each team.</li>\n<li>Run ./bin/send_tasks.py &lt;teams_file&gt; &lt;tasks_file&gt;</li>\n<li>A new task list should appear on each Team's CloudSim.</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "934bc7d33935", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-legacy/commit/934bc7d33935.json"}, "html": {"href": "#!/osrf/cloudsim-legacy/commits/934bc7d33935"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/cloudsim-legacy.json"}, "html": {"href": "#!/osrf/cloudsim-legacy"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e799e7f6-0caa-464a-97f8-8605a37ebfb1}ts=python"}}, "type": "repository", "name": "cloudsim-legacy", "full_name": "osrf/cloudsim-legacy", "uuid": "{e799e7f6-0caa-464a-97f8-8605a37ebfb1}"}, "branch": {"name": "task_scheduler"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2013-05-15T01:21:30.452086+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2013-05-05T05:19:00.096932+00:00", "type": "participant", "approved": true, "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}}, {"role": "PARTICIPANT", "participated_on": "2013-05-06T18:34:17.116815+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2013-05-08T06:40:34.679847+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2013-05-15T02:03:00.949318+00:00", "type": "participant", "approved": true, "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}}], "reason": "", "updated_on": "2013-05-15T02:05:30.805048+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "6596daf80192", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/cloudsim-legacy/commit/6596daf80192.json"}, "html": {"href": "#!/osrf/cloudsim-legacy/commits/6596daf80192"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}