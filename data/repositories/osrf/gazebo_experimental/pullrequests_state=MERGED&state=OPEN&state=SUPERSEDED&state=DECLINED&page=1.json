{"pagelen": 50, "values": [{"description": "The manager does not need to know about the c++ types for components. Keeping it ignorant allows a plugin to register a component and have the manager seamlessly support it.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:6b78e5ac34e4%0D2f86ac31914d?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/1.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/1/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/1"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:6b78e5ac34e4%0D2f86ac31914d?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/1/statuses_page=1.json"}}, "title": "Components registered in main.cc instead of Manager.cc", "close_source_branch": true, "type": "pullrequest", "id": 1, "destination": {"commit": {"hash": "2f86ac31914d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/2f86ac31914d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/2f86ac31914d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-03T21:37:47.833031+00:00", "summary": {"raw": "The manager does not need to know about the c++ types for components. Keeping it ignorant allows a plugin to register a component and have the manager seamlessly support it.", "markup": "markdown", "html": "<p>The manager does not need to know about the c++ types for components. Keeping it ignorant allows a plugin to register a component and have the manager seamlessly support it.</p>", "type": "rendered"}, "source": {"commit": {"hash": "06daa8ba2e5c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/06daa8ba2e5c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/06daa8ba2e5c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_out_of_manager"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-06T16:42:24.376455+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "6b78e5ac34e4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/6b78e5ac34e4.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/6b78e5ac34e4"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This allows components to be removed from entities, and allows entities to be deleted. Deleted entity IDs are reused. If there are deleted Ids, the smallest Id is reused first.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/2/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:8e4e53aa591a%0D6d0f02c2684a?from_pullrequest_id=2"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/2/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/2.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/2/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/2/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/2"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/2/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:8e4e53aa591a%0D6d0f02c2684a?from_pullrequest_id=2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/2/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/2/statuses_page=1.json"}}, "title": "Added ability to remove components and delete entities", "close_source_branch": true, "type": "pullrequest", "id": 2, "destination": {"commit": {"hash": "6d0f02c2684a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/6d0f02c2684a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/6d0f02c2684a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-03T23:28:32.716726+00:00", "summary": {"raw": "This allows components to be removed from entities, and allows entities to be deleted. Deleted entity IDs are reused. If there are deleted Ids, the smallest Id is reused first.", "markup": "markdown", "html": "<p>This allows components to be removed from entities, and allows entities to be deleted. Deleted entity IDs are reused. If there are deleted Ids, the smallest Id is reused first.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9433ed0d35c7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/9433ed0d35c7.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/9433ed0d35c7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "delete_entity"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-12T18:37:50.316311+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "8e4e53aa591a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/8e4e53aa591a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/8e4e53aa591a"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/3/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:2f86ac31914d%0D4508a8350773?from_pullrequest_id=3"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/3/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/3.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/3/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/3/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/3"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/3/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:2f86ac31914d%0D4508a8350773?from_pullrequest_id=3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/3/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/3/statuses_page=1.json"}}, "title": "Minor formatting, and fix to use the latest ign-common plugin loader", "close_source_branch": true, "type": "pullrequest", "id": 3, "destination": {"commit": {"hash": "4508a8350773", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/4508a8350773.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/4508a8350773"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-05T18:21:29.081565+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "bdb5f30fce7f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/bdb5f30fce7f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/bdb5f30fce7f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "minor_formatting"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-06T16:16:08.251986+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": {"hash": "2f86ac31914d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/2f86ac31914d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/2f86ac31914d"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This pull request builds on pull request #3", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/4/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f51b491ed804%0D6b78e5ac34e4?from_pullrequest_id=4"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/4/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/4.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/4/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/4/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/4"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/4/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f51b491ed804%0D6b78e5ac34e4?from_pullrequest_id=4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/4/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/4/statuses_page=1.json"}}, "title": "Update EntityQuery to use unique_ptr, and std::move", "close_source_branch": true, "type": "pullrequest", "id": 4, "destination": {"commit": {"hash": "6b78e5ac34e4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/6b78e5ac34e4.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/6b78e5ac34e4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-05T21:29:06.254910+00:00", "summary": {"raw": "This pull request builds on pull request #3", "markup": "markdown", "html": "<p>This pull request builds on <a href=\"#!/osrf/gazebo_experimental/pull-requests/3/minor-formatting-and-fix-to-use-the-latest\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #3</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "282175f212f0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/282175f212f0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/282175f212f0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "entity_query_refactor"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-06T18:06:44.509839+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": {"hash": "f51b491ed804", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f51b491ed804.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f51b491ed804"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This PR builds on pull request #4", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/5/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:8d32208273df%0Df51b491ed804?from_pullrequest_id=5"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/5/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/5.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/5/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/5/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/5"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/5/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:8d32208273df%0Df51b491ed804?from_pullrequest_id=5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/5/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/5/statuses_page=1.json"}}, "title": "Use unique_ptr for entity", "close_source_branch": true, "type": "pullrequest", "id": 5, "destination": {"commit": {"hash": "f51b491ed804", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f51b491ed804.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f51b491ed804"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-05T23:17:22.570098+00:00", "summary": {"raw": "This PR builds on pull request #4", "markup": "markdown", "html": "<p>This PR builds on <a href=\"#!/osrf/gazebo_experimental/pull-requests/4/update-entityquery-to-use-unique_ptr-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #4</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "16af48333838", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/16af48333838.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/16af48333838"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "entity_refactor"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-06T18:08:10.549139+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": {"hash": "8d32208273df", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/8d32208273df.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/8d32208273df"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This PR doesn't change any architecture. It adds a \"DummyPhysics\" system that uses a \"dummy_physics\" library. The purpose is to see how a physics system might use the current ECS architecture.\r\n\r\nTakeaways from this:\r\n\r\n* A physics system might have to iterate over components defining the bodies' shape, size, velocity, position twice. The first time is to get changes, and the second is to update them\r\n* There is a lot of copying/synchronizing data\r\n* A way to check if a component changed would save on some copying\r\n* How does the system find out about constraints/joints if it can only query entities with a fixed set of components? Does joint information need to be in the same component defining shape somehow?\r\n* Gravity, iterations, solver parameters are independent of bodies being simulated. How does the physics system get them?\r\n* Physics system can use EntityId to match to an internal representation", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/6/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:32bd7fe09efd%0Db812cadeebd1?from_pullrequest_id=6"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/6/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/6.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/6/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/6/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/6"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/6/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:32bd7fe09efd%0Db812cadeebd1?from_pullrequest_id=6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/6/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/6/statuses_page=1.json"}}, "title": "Adds demo with dummy physics", "close_source_branch": true, "type": "pullrequest", "id": 6, "destination": {"commit": {"hash": "b812cadeebd1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b812cadeebd1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b812cadeebd1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-10T16:28:03.320921+00:00", "summary": {"raw": "This PR doesn't change any architecture. It adds a \"DummyPhysics\" system that uses a \"dummy_physics\" library. The purpose is to see how a physics system might use the current ECS architecture.\r\n\r\nTakeaways from this:\r\n\r\n* A physics system might have to iterate over components defining the bodies' shape, size, velocity, position twice. The first time is to get changes, and the second is to update them\r\n* There is a lot of copying/synchronizing data\r\n* A way to check if a component changed would save on some copying\r\n* How does the system find out about constraints/joints if it can only query entities with a fixed set of components? Does joint information need to be in the same component defining shape somehow?\r\n* Gravity, iterations, solver parameters are independent of bodies being simulated. How does the physics system get them?\r\n* Physics system can use EntityId to match to an internal representation", "markup": "markdown", "html": "<p>This PR doesn't change any architecture. It adds a \"DummyPhysics\" system that uses a \"dummy_physics\" library. The purpose is to see how a physics system might use the current ECS architecture.</p>\n<p>Takeaways from this:</p>\n<ul>\n<li>A physics system might have to iterate over components defining the bodies' shape, size, velocity, position twice. The first time is to get changes, and the second is to update them</li>\n<li>There is a lot of copying/synchronizing data</li>\n<li>A way to check if a component changed would save on some copying</li>\n<li>How does the system find out about constraints/joints if it can only query entities with a fixed set of components? Does joint information need to be in the same component defining shape somehow?</li>\n<li>Gravity, iterations, solver parameters are independent of bodies being simulated. How does the physics system get them?</li>\n<li>Physics system can use EntityId to match to an internal representation</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "537382f7e688", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/537382f7e688.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/537382f7e688"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "dumb_physics"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-14T21:27:48.815048+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "32bd7fe09efd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/32bd7fe09efd.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/32bd7fe09efd"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "Solves #5\r\n\r\nEntities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in `EntityComponentDatabase::UpdateBegin()`). This solves the issue of adding/removing a component breaking existing pointers to components.\r\n\r\nSolves #2\r\n\r\nWhen components are created/modified/removed `Entity::IsDifferent<MyComponent>()` will report so during the next time step.\r\n\r\nMisc\r\n\r\n* Added templated methods for convenience to EntityComponentDatabase + updated tests to use them\r\n* Renamed `ComponentTypeInfo::mover` to `copier`\r\n* Fixed Deleted entities not being removed from `EntityQuery`. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)\r\n\r\n**TODO**\r\n\r\n* ~~Report deleted entities after merging pull request #2~~ \r\n* Eliminate unnecessary data copying from dummy physics demo after merging pull request #6", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/7/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:b812cadeebd1%0Df492a7e83d4a?from_pullrequest_id=7"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/7/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/7"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:b812cadeebd1%0Df492a7e83d4a?from_pullrequest_id=7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/7/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/statuses_page=1.json"}}, "title": "Query if component changed + entities/components/queries are constant during update", "close_source_branch": true, "type": "pullrequest", "id": 7, "destination": {"commit": {"hash": "f492a7e83d4a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f492a7e83d4a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f492a7e83d4a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-12T16:54:22.686268+00:00", "summary": {"raw": "Solves #5\r\n\r\nEntities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in `EntityComponentDatabase::UpdateBegin()`). This solves the issue of adding/removing a component breaking existing pointers to components.\r\n\r\nSolves #2\r\n\r\nWhen components are created/modified/removed `Entity::IsDifferent<MyComponent>()` will report so during the next time step.\r\n\r\nMisc\r\n\r\n* Added templated methods for convenience to EntityComponentDatabase + updated tests to use them\r\n* Renamed `ComponentTypeInfo::mover` to `copier`\r\n* Fixed Deleted entities not being removed from `EntityQuery`. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)\r\n\r\n**TODO**\r\n\r\n* ~~Report deleted entities after merging pull request #2~~ \r\n* Eliminate unnecessary data copying from dummy physics demo after merging pull request #6", "markup": "markdown", "html": "<p>Solves <a href=\"#!/osrf/gazebo_experimental/issues/5/entities-components-queries-should-not\" rel=\"nofollow\" title=\"Entities/Components/Queries should not change until after all systems are updated.\" class=\"ap-connect-link\"><s>#5</s></a></p>\n<p>Entities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in <code>EntityComponentDatabase::UpdateBegin()</code>). This solves the issue of adding/removing a component breaking existing pointers to components.</p>\n<p>Solves <a href=\"#!/osrf/gazebo_experimental/issues/2/add-method-to-check-if-component-changed\" rel=\"nofollow\" title=\"Add method to check if component changed since last time step\" class=\"ap-connect-link\"><s>#2</s></a></p>\n<p>When components are created/modified/removed <code>Entity::IsDifferent&lt;MyComponent&gt;()</code> will report so during the next time step.</p>\n<p>Misc</p>\n<ul>\n<li>Added templated methods for convenience to EntityComponentDatabase + updated tests to use them</li>\n<li>Renamed <code>ComponentTypeInfo::mover</code> to <code>copier</code></li>\n<li>Fixed Deleted entities not being removed from <code>EntityQuery</code>. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)</li>\n</ul>\n<p><strong>TODO</strong></p>\n<ul>\n<li><del>Report deleted entities after merging <a href=\"#!/osrf/gazebo_experimental/pull-requests/2/added-ability-to-remove-components-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2</a></del> </li>\n<li>Eliminate unnecessary data copying from dummy physics demo after merging <a href=\"#!/osrf/gazebo_experimental/pull-requests/6/adds-demo-with-dummy-physics\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #6</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "15eea709a17f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/15eea709a17f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/15eea709a17f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "was_modified"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-14T19:50:10.243905+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "b812cadeebd1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b812cadeebd1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b812cadeebd1"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This fixes a bug with the pull request for deleting entities and components where indexes for component storage weren't updated to reflect the change in container size.\r\n\r\nThis fix exposes another problem with the current implementation: removing a component invalidates all other component pointers. With this fix it won't segfault, but it also means systems couldn't be run in parallel, and systems have to take care to reacquire components after any component is removed.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/8/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f492a7e83d4a%0D8e4e53aa591a?from_pullrequest_id=8"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/8/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/8.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/8/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/8/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/8"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/8/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f492a7e83d4a%0D8e4e53aa591a?from_pullrequest_id=8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/8/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/8/statuses_page=1.json"}}, "title": "Fixed indices not being updated after removing a component", "close_source_branch": true, "type": "pullrequest", "id": 8, "destination": {"commit": {"hash": "8e4e53aa591a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/8e4e53aa591a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/8e4e53aa591a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-12T18:57:09.539043+00:00", "summary": {"raw": "This fixes a bug with the pull request for deleting entities and components where indexes for component storage weren't updated to reflect the change in container size.\r\n\r\nThis fix exposes another problem with the current implementation: removing a component invalidates all other component pointers. With this fix it won't segfault, but it also means systems couldn't be run in parallel, and systems have to take care to reacquire components after any component is removed.", "markup": "markdown", "html": "<p>This fixes a bug with the pull request for deleting entities and components where indexes for component storage weren't updated to reflect the change in container size.</p>\n<p>This fix exposes another problem with the current implementation: removing a component invalidates all other component pointers. With this fix it won't segfault, but it also means systems couldn't be run in parallel, and systems have to take care to reacquire components after any component is removed.</p>", "type": "rendered"}, "source": {"commit": {"hash": "720444a0680f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/720444a0680f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/720444a0680f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "do_not_delete_everything"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-12T19:09:21.026867+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "f492a7e83d4a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f492a7e83d4a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f492a7e83d4a"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This pull request doesn't change any architecture. It's purpose is to see what a rendering system might look like and need from an ECS architecture.\r\n\r\nIt renders an image of the dummy physics demo that gets published via ignition transport.\r\n\r\nThings I learned:\r\n\r\n* needs a way to get config info like what cameras should be rendered. See #1\r\n* Update should include current sim time rather than having ECSystems sum it themselves #8\r\n* A GUI window could subscribe to an ignition-transport topic instead of having it's own ECS set up as described in the ECS design doc.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/9/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:4eacbeb18eba%0D5f23d93930d8?from_pullrequest_id=9"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/9/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/9.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/9/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/9/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/9"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/9/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:4eacbeb18eba%0D5f23d93930d8?from_pullrequest_id=9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/9/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/9/statuses_page=1.json"}}, "title": "Adds dummy rendering system", "close_source_branch": true, "type": "pullrequest", "id": 9, "destination": {"commit": {"hash": "5f23d93930d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/5f23d93930d8.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/5f23d93930d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-17T19:05:38.868477+00:00", "summary": {"raw": "This pull request doesn't change any architecture. It's purpose is to see what a rendering system might look like and need from an ECS architecture.\r\n\r\nIt renders an image of the dummy physics demo that gets published via ignition transport.\r\n\r\nThings I learned:\r\n\r\n* needs a way to get config info like what cameras should be rendered. See #1\r\n* Update should include current sim time rather than having ECSystems sum it themselves #8\r\n* A GUI window could subscribe to an ignition-transport topic instead of having it's own ECS set up as described in the ECS design doc.", "markup": "markdown", "html": "<p>This pull request doesn't change any architecture. It's purpose is to see what a rendering system might look like and need from an ECS architecture.</p>\n<p>It renders an image of the dummy physics demo that gets published via ignition transport.</p>\n<p>Things I learned:</p>\n<ul>\n<li>needs a way to get config info like what cameras should be rendered. See #1</li>\n<li>Update should include current sim time rather than having ECSystems sum it themselves <a href=\"#!/osrf/gazebo_experimental/issues/8/make-it-easy-for-a-system-to-know-current\" rel=\"nofollow\" title=\"Make it easy for a system to know current simulation time\" class=\"ap-connect-link\"><s>#8</s></a></li>\n<li>A GUI window could subscribe to an ignition-transport topic instead of having it's own ECS set up as described in the ECS design doc.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "d1edb5b7f853", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d1edb5b7f853.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d1edb5b7f853"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "dummy_rendering"}}, "comment_count": 20, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-01T17:42:06.022511+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "4eacbeb18eba", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/4eacbeb18eba.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/4eacbeb18eba"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "First pass at using gflags for command line parsing. Supports the flags `--version`, `--help`, `-h`.\r\n\r\nI had to do some basic restructuring - moved gz_ecs into a different filename, added some CMake plumbing to generate version information.\r\n\r\nI'm really not a fan of the way the built-in help and version messages are generated, so I replaced them with ones that matched Gazebo 8.\r\n\r\nFor reference, here's a comparison of the original gflags output with Gazebo 8's output:\r\n\r\n```\r\n#!bash\r\n\r\n$ gazebo8 -h\r\ngazebo -- Run the Gazebo server and GUI.\r\n\r\n`gazebo` [options] <world_file>\r\n\r\nGazebo server runs simulation and handles commandline options, starts a Master, runs World update and sensor generation loops. This also starts the Gazebo GUI client in a separate process.\r\n\r\nOptions:\r\n  -v [ --version ]              Output version information.\r\n  --verbose                     Increase the messages written to the terminal.\r\n  -h [ --help ]                 Produce this help message.\r\n  -u [ --pause ]                Start the server in a paused state.\r\n  -e [ --physics ] arg          Specify a physics engine (ode|bullet|dart|simbody).\r\n  -p [ --play ] arg             Play a log file.\r\n  -r [ --record ]               Record state data.\r\n  --record_encoding arg (=zlib) Compression encoding format for log data \r\n                                (zlib|bz2|txt).\r\n  --record_path arg             Absolute path in which to store state data.\r\n  --seed arg                    Start with a given random number seed.\r\n  --iters arg                   Number of iterations to simulate.\r\n  --minimal_comms               Reduce the TCP/IP traffic output by gazebo.\r\n  -g [ --gui-plugin ] arg       Load a GUI plugin.\r\n  -s [ --server-plugin ] arg    Load a server plugin.\r\n  -o [ --profile ] arg          Physics preset profile name from the options in\r\n                                the world file.\r\n\r\n\r\n\r\n\r\n$ ./gazebo -h\r\ngazebo: Run the Gazebo server and GUI.\r\n\r\n`gazebo` [options]\r\n\r\n  Flags from /home/adam/osrf/sandbox/gazebo_experimental/main.cc:\r\n    -h (--help, Print help message) type: bool default: false currently: true\r\n\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/10/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f8d37635e53a%0D000abc8805a3?from_pullrequest_id=10"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/10/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/10.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/10/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/10/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/10"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/10/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f8d37635e53a%0D000abc8805a3?from_pullrequest_id=10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/10/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/10/statuses_page=1.json"}}, "title": "First pass at gflags command line argument parsing", "close_source_branch": true, "type": "pullrequest", "id": 10, "destination": {"commit": {"hash": "000abc8805a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/000abc8805a3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/000abc8805a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-18T16:21:44.261570+00:00", "summary": {"raw": "First pass at using gflags for command line parsing. Supports the flags `--version`, `--help`, `-h`.\r\n\r\nI had to do some basic restructuring - moved gz_ecs into a different filename, added some CMake plumbing to generate version information.\r\n\r\nI'm really not a fan of the way the built-in help and version messages are generated, so I replaced them with ones that matched Gazebo 8.\r\n\r\nFor reference, here's a comparison of the original gflags output with Gazebo 8's output:\r\n\r\n```\r\n#!bash\r\n\r\n$ gazebo8 -h\r\ngazebo -- Run the Gazebo server and GUI.\r\n\r\n`gazebo` [options] <world_file>\r\n\r\nGazebo server runs simulation and handles commandline options, starts a Master, runs World update and sensor generation loops. This also starts the Gazebo GUI client in a separate process.\r\n\r\nOptions:\r\n  -v [ --version ]              Output version information.\r\n  --verbose                     Increase the messages written to the terminal.\r\n  -h [ --help ]                 Produce this help message.\r\n  -u [ --pause ]                Start the server in a paused state.\r\n  -e [ --physics ] arg          Specify a physics engine (ode|bullet|dart|simbody).\r\n  -p [ --play ] arg             Play a log file.\r\n  -r [ --record ]               Record state data.\r\n  --record_encoding arg (=zlib) Compression encoding format for log data \r\n                                (zlib|bz2|txt).\r\n  --record_path arg             Absolute path in which to store state data.\r\n  --seed arg                    Start with a given random number seed.\r\n  --iters arg                   Number of iterations to simulate.\r\n  --minimal_comms               Reduce the TCP/IP traffic output by gazebo.\r\n  -g [ --gui-plugin ] arg       Load a GUI plugin.\r\n  -s [ --server-plugin ] arg    Load a server plugin.\r\n  -o [ --profile ] arg          Physics preset profile name from the options in\r\n                                the world file.\r\n\r\n\r\n\r\n\r\n$ ./gazebo -h\r\ngazebo: Run the Gazebo server and GUI.\r\n\r\n`gazebo` [options]\r\n\r\n  Flags from /home/adam/osrf/sandbox/gazebo_experimental/main.cc:\r\n    -h (--help, Print help message) type: bool default: false currently: true\r\n\r\n```", "markup": "markdown", "html": "<p>First pass at using gflags for command line parsing. Supports the flags <code>--version</code>, <code>--help</code>, <code>-h</code>.</p>\n<p>I had to do some basic restructuring - moved gz_ecs into a different filename, added some CMake plumbing to generate version information.</p>\n<p>I'm really not a fan of the way the built-in help and version messages are generated, so I replaced them with ones that matched Gazebo 8.</p>\n<p>For reference, here's a comparison of the original gflags output with Gazebo 8's output:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>$ gazebo8 -h\ngazebo -- Run the Gazebo server and GUI.\n\n<span class=\"sb\">`</span>gazebo<span class=\"sb\">`</span> <span class=\"o\">[</span>options<span class=\"o\">]</span> &lt;world_file&gt;\n\nGazebo server runs simulation and handles commandline options, starts a Master, runs World update and sensor generation loops. This also starts the Gazebo GUI client in a separate process.\n\nOptions:\n  -v <span class=\"o\">[</span> --version <span class=\"o\">]</span>              Output version information.\n  --verbose                     Increase the messages written to the terminal.\n  -h <span class=\"o\">[</span> --help <span class=\"o\">]</span>                 Produce this <span class=\"nb\">help</span> message.\n  -u <span class=\"o\">[</span> --pause <span class=\"o\">]</span>                Start the server in a paused state.\n  -e <span class=\"o\">[</span> --physics <span class=\"o\">]</span> arg          Specify a physics engine <span class=\"o\">(</span>ode<span class=\"p\">|</span>bullet<span class=\"p\">|</span>dart<span class=\"p\">|</span>simbody<span class=\"o\">)</span>.\n  -p <span class=\"o\">[</span> --play <span class=\"o\">]</span> arg             Play a log file.\n  -r <span class=\"o\">[</span> --record <span class=\"o\">]</span>               Record state data.\n  --record_encoding arg <span class=\"o\">(=</span>zlib<span class=\"o\">)</span> Compression encoding format <span class=\"k\">for</span> log data \n                                <span class=\"o\">(</span>zlib<span class=\"p\">|</span>bz2<span class=\"p\">|</span>txt<span class=\"o\">)</span>.\n  --record_path arg             Absolute path in which to store state data.\n  --seed arg                    Start with a given random number seed.\n  --iters arg                   Number of iterations to simulate.\n  --minimal_comms               Reduce the TCP/IP traffic output by gazebo.\n  -g <span class=\"o\">[</span> --gui-plugin <span class=\"o\">]</span> arg       Load a GUI plugin.\n  -s <span class=\"o\">[</span> --server-plugin <span class=\"o\">]</span> arg    Load a server plugin.\n  -o <span class=\"o\">[</span> --profile <span class=\"o\">]</span> arg          Physics preset profile name from the options in\n                                the world file.\n\n\n\n\n$ ./gazebo -h\ngazebo: Run the Gazebo server and GUI.\n\n<span class=\"sb\">`</span>gazebo<span class=\"sb\">`</span> <span class=\"o\">[</span>options<span class=\"o\">]</span>\n\n  Flags from /home/adam/osrf/sandbox/gazebo_experimental/main.cc:\n    -h <span class=\"o\">(</span>--help, Print <span class=\"nb\">help</span> message<span class=\"o\">)</span> type: bool default: <span class=\"nb\">false</span> currently: <span class=\"nb\">true</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "22f816dc2882", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/22f816dc2882.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/22f816dc2882"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "gflags"}}, "comment_count": 22, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-20T18:19:32.355604+00:00", "author": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "merge_commit": {"hash": "f8d37635e53a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f8d37635e53a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f8d37635e53a"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "I've been playing with the current system for the first time, great stuff! The \"dumb\" examples really help understand how things are meant to fit together in the future. As I was going through the code, I did a few things:\r\n\r\n* Commented and documented, hopefully this will help others. I know this was meant just as a rough draft, but I just commented things as I understood them, so it wasn't \"extra effort\".\r\n* Split the `RigidBody` component into two:\r\n    * `SphereGeom`: This could be used by other systems like rendering, for example\r\n    * `Inertial`: For now all this has is mass. But its presence also plays now the role of deciding whether an entity is static or not. So the `IsStatic` flag is gone. I thought this could be an interesting way to use components.\r\n* Added several `Sync` methods, split into `Internal` and `External`:\r\n    * `Internal` updates the internal representation specific to the system with information from the ECS\r\n    * `External` updates the ECS with results from the system\r\n\r\nThese are all just suggestions, even the documentation is incomplete. It's a selfish PR mostly for my benefit to see if I'm understanding things :)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/11/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:1b5be643ddec%0Df71153ba1ff0?from_pullrequest_id=11"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/11/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/11.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/11/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/11/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/11"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/11/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:1b5be643ddec%0Df71153ba1ff0?from_pullrequest_id=11"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/11/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/11/statuses_page=1.json"}}, "title": "Comments and a few proposals for DumbPhysics", "close_source_branch": true, "type": "pullrequest", "id": 11, "destination": {"commit": {"hash": "f71153ba1ff0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f71153ba1ff0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f71153ba1ff0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-18T16:32:43.798901+00:00", "summary": {"raw": "I've been playing with the current system for the first time, great stuff! The \"dumb\" examples really help understand how things are meant to fit together in the future. As I was going through the code, I did a few things:\r\n\r\n* Commented and documented, hopefully this will help others. I know this was meant just as a rough draft, but I just commented things as I understood them, so it wasn't \"extra effort\".\r\n* Split the `RigidBody` component into two:\r\n    * `SphereGeom`: This could be used by other systems like rendering, for example\r\n    * `Inertial`: For now all this has is mass. But its presence also plays now the role of deciding whether an entity is static or not. So the `IsStatic` flag is gone. I thought this could be an interesting way to use components.\r\n* Added several `Sync` methods, split into `Internal` and `External`:\r\n    * `Internal` updates the internal representation specific to the system with information from the ECS\r\n    * `External` updates the ECS with results from the system\r\n\r\nThese are all just suggestions, even the documentation is incomplete. It's a selfish PR mostly for my benefit to see if I'm understanding things :)", "markup": "markdown", "html": "<p>I've been playing with the current system for the first time, great stuff! The \"dumb\" examples really help understand how things are meant to fit together in the future. As I was going through the code, I did a few things:</p>\n<ul>\n<li>Commented and documented, hopefully this will help others. I know this was meant just as a rough draft, but I just commented things as I understood them, so it wasn't \"extra effort\".</li>\n<li>Split the <code>RigidBody</code> component into two:<ul>\n<li><code>SphereGeom</code>: This could be used by other systems like rendering, for example</li>\n<li><code>Inertial</code>: For now all this has is mass. But its presence also plays now the role of deciding whether an entity is static or not. So the <code>IsStatic</code> flag is gone. I thought this could be an interesting way to use components.</li>\n</ul>\n</li>\n<li>Added several <code>Sync</code> methods, split into <code>Internal</code> and <code>External</code>:<ul>\n<li><code>Internal</code> updates the internal representation specific to the system with information from the ECS</li>\n<li><code>External</code> updates the ECS with results from the system</li>\n</ul>\n</li>\n</ul>\n<p>These are all just suggestions, even the documentation is incomplete. It's a selfish PR mostly for my benefit to see if I'm understanding things :)</p>", "type": "rendered"}, "source": {"commit": {"hash": "a1e49c76b07d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/a1e49c76b07d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/a1e49c76b07d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "comments"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-18T22:43:17.987879+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "1b5be643ddec", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/1b5be643ddec.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/1b5be643ddec"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Solves issue #9\r\n\r\nThe ignition-common pull request for PluginLoader changed to have SystemPaths handle searching for plugins.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/12/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f71153ba1ff0%0D32bd7fe09efd?from_pullrequest_id=12"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/12/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/12.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/12/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/12/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/12"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/12/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f71153ba1ff0%0D32bd7fe09efd?from_pullrequest_id=12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/12/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/12/statuses_page=1.json"}}, "title": "Updated plugin loading code to use SystemPaths", "close_source_branch": true, "type": "pullrequest", "id": 12, "destination": {"commit": {"hash": "32bd7fe09efd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/32bd7fe09efd.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/32bd7fe09efd"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-18T19:07:19.869822+00:00", "summary": {"raw": "Solves issue #9\r\n\r\nThe ignition-common pull request for PluginLoader changed to have SystemPaths handle searching for plugins.", "markup": "markdown", "html": "<p>Solves issue <a href=\"#!/osrf/gazebo_experimental/issues/9/update-demo-to-use-systempaths\" rel=\"nofollow\" title=\"Update demo to use SystemPaths\" class=\"ap-connect-link\"><s>#9</s></a></p>\n<p>The ignition-common pull request for PluginLoader changed to have SystemPaths handle searching for plugins.</p>", "type": "rendered"}, "source": {"commit": {"hash": "19ce1cea6af1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/19ce1cea6af1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/19ce1cea6af1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "use_SystemPaths"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-18T19:55:32.543601+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "f71153ba1ff0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f71153ba1ff0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f71153ba1ff0"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This attempts to solve #7. It moves a bunch of files around\r\n\r\nIt moves the dummy physics demo into the examples folder. I think the add/divide systems could either be moved to the example folder or deleted. Thoughts?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/13/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:000abc8805a3%0D1b5be643ddec?from_pullrequest_id=13"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/13/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/13.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/13/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/13/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/13"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/13/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:000abc8805a3%0D1b5be643ddec?from_pullrequest_id=13"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/13/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/13/statuses_page=1.json"}}, "title": "Moved files around", "close_source_branch": true, "type": "pullrequest", "id": 13, "destination": {"commit": {"hash": "1b5be643ddec", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/1b5be643ddec.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/1b5be643ddec"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-18T21:50:34.936462+00:00", "summary": {"raw": "This attempts to solve #7. It moves a bunch of files around\r\n\r\nIt moves the dummy physics demo into the examples folder. I think the add/divide systems could either be moved to the example folder or deleted. Thoughts?", "markup": "markdown", "html": "<p>This attempts to solve <a href=\"#!/osrf/gazebo_experimental/issues/7/directory-structure\" rel=\"nofollow\" title=\"Directory structure\" class=\"ap-connect-link\"><s>#7</s></a>. It moves a bunch of files around</p>\n<p>It moves the dummy physics demo into the examples folder. I think the add/divide systems could either be moved to the example folder or deleted. Thoughts?</p>", "type": "rendered"}, "source": {"commit": {"hash": "65804e8dfd8c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/65804e8dfd8c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/65804e8dfd8c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "directory_structure"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-19T00:37:41.303853+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "000abc8805a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/000abc8805a3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/000abc8805a3"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.\r\n\r\nThe rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.\r\n\r\nIncluded changes:\r\n\r\n* EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair\r\n* Added QueryRegistrar class and unit test\r\n* `ecs::System::Init()` accepts a QueryRegistrar reference and returns void\r\n* the virtual method `ecs::System::Update()` has been replaced by registering callbacks with the registrar\r\n* Manager provides ecs::System with a pointer to itself", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/14/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:9bfa8c4380cb%0D70d25995a108?from_pullrequest_id=14"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/14/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/14"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:9bfa8c4380cb%0D70d25995a108?from_pullrequest_id=14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/14/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/statuses_page=1.json"}}, "title": "One system can register multiple queries and callbacks", "close_source_branch": true, "type": "pullrequest", "id": 14, "destination": {"commit": {"hash": "70d25995a108", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/70d25995a108.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/70d25995a108"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-19T23:22:25.439081+00:00", "summary": {"raw": "This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.\r\n\r\nThe rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.\r\n\r\nIncluded changes:\r\n\r\n* EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair\r\n* Added QueryRegistrar class and unit test\r\n* `ecs::System::Init()` accepts a QueryRegistrar reference and returns void\r\n* the virtual method `ecs::System::Update()` has been replaced by registering callbacks with the registrar\r\n* Manager provides ecs::System with a pointer to itself", "markup": "markdown", "html": "<p>This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.</p>\n<p>The rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.</p>\n<p>Included changes:</p>\n<ul>\n<li>EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair</li>\n<li>Added QueryRegistrar class and unit test</li>\n<li><code>ecs::System::Init()</code> accepts a QueryRegistrar reference and returns void</li>\n<li>the virtual method <code>ecs::System::Update()</code> has been replaced by registering callbacks with the registrar</li>\n<li>Manager provides ecs::System with a pointer to itself</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "ec28b65fe304", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ec28b65fe304.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ec28b65fe304"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "multiple_queries"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-26T16:30:41.455122+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "9bfa8c4380cb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/9bfa8c4380cb.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/9bfa8c4380cb"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This solves #4. It adds unit tests for the entity class.\r\n\r\nAlso\r\n\r\n* Fixes bugs where `Entity::Id()` would segfault after move constructor or move assignment operator. Now it returns `NO_ENTITY` instead.\r\n* Adds `Entity.operator==()` that checks if two entities have the same id\r\n* Adds `Entity::RemoveComponent()`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/15/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:a169bd2e93e5%0Df8d37635e53a?from_pullrequest_id=15"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/15/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/15.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/15/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/15/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/15"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/15/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:a169bd2e93e5%0Df8d37635e53a?from_pullrequest_id=15"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/15/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/15/statuses_page=1.json"}}, "title": "Adds Entity unit tests", "close_source_branch": true, "type": "pullrequest", "id": 15, "destination": {"commit": {"hash": "f8d37635e53a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f8d37635e53a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f8d37635e53a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-20T16:49:50.291633+00:00", "summary": {"raw": "This solves #4. It adds unit tests for the entity class.\r\n\r\nAlso\r\n\r\n* Fixes bugs where `Entity::Id()` would segfault after move constructor or move assignment operator. Now it returns `NO_ENTITY` instead.\r\n* Adds `Entity.operator==()` that checks if two entities have the same id\r\n* Adds `Entity::RemoveComponent()`", "markup": "markdown", "html": "<p>This solves <a href=\"#!/osrf/gazebo_experimental/issues/4/entity-needs-unit-tests\" rel=\"nofollow\" title=\"Entity needs unit tests\" class=\"ap-connect-link\"><s>#4</s></a>. It adds unit tests for the entity class.</p>\n<p>Also</p>\n<ul>\n<li>Fixes bugs where <code>Entity::Id()</code> would segfault after move constructor or move assignment operator. Now it returns <code>NO_ENTITY</code> instead.</li>\n<li>Adds <code>Entity.operator==()</code> that checks if two entities have the same id</li>\n<li>Adds <code>Entity::RemoveComponent()</code></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "ac5c22d85b17", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ac5c22d85b17.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ac5c22d85b17"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "entity_unit_test"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-20T18:37:39.768888+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "a169bd2e93e5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/a169bd2e93e5.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/a169bd2e93e5"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This solves #3. It adds unit tests for the `Manager` class. This also removes component methods from `Manager` because they already exist on `Entity`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/16/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f4e5a4ff11c0%0Da169bd2e93e5?from_pullrequest_id=16"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/16/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/16.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/16/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/16/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/16"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/16/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f4e5a4ff11c0%0Da169bd2e93e5?from_pullrequest_id=16"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/16/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/16/statuses_page=1.json"}}, "title": "Manager unit test", "close_source_branch": true, "type": "pullrequest", "id": 16, "destination": {"commit": {"hash": "a169bd2e93e5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/a169bd2e93e5.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/a169bd2e93e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-20T17:38:10.470305+00:00", "summary": {"raw": "This solves #3. It adds unit tests for the `Manager` class. This also removes component methods from `Manager` because they already exist on `Entity`.", "markup": "markdown", "html": "<p>This solves <a href=\"#!/osrf/gazebo_experimental/issues/3/manager-needs-unit-tests\" rel=\"nofollow\" title=\"Manager needs unit tests\" class=\"ap-connect-link\"><s>#3</s></a>. It adds unit tests for the <code>Manager</code> class. This also removes component methods from <code>Manager</code> because they already exist on <code>Entity</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9c18ff90a656", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/9c18ff90a656.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/9c18ff90a656"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "manager_unit_test"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-20T18:38:01.988959+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "f4e5a4ff11c0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f4e5a4ff11c0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f4e5a4ff11c0"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "* Add verbose flag\r\n* Add an empty window with a menu that has `File->Quit`. No plugins are loaded yet.\r\n\r\n![gz2.png](data/bitbucket.org/repo/baqryA7/images/2004634706-gz2.png)\r\n![gz1.png](data/bitbucket.org/repo/baqryA7/images/2128270342-gz1.png)\r\n\r\n### How to test it\r\n\r\n1. Build and install Ignition Common's [console_prefix](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/29/custom-prefix-for-console-logging/diff) branch\r\n\r\n1. [Build and install Ignition GUI from source](https://bitbucket.org/ignitionrobotics/ign-gui)\r\n\r\n1. Build this project:\r\n\r\n        cmake ..\r\n        make\r\n\r\n1. Run the executable on full verbose mode:\r\n\r\n        ./src/gazebo -v 4\r\n\r\n### Notes\r\n\r\n* There should be no segfaults when closing the window or doing Ctrl+C on the terminal", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/17/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:bd56871fdcd0%0D9bfa8c4380cb?from_pullrequest_id=17"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/17/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/17.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/17/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/17/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/17"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/17/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:bd56871fdcd0%0D9bfa8c4380cb?from_pullrequest_id=17"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/17/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/17/statuses_page=1.json"}}, "title": "Integrate Ignition GUI", "close_source_branch": true, "type": "pullrequest", "id": 17, "destination": {"commit": {"hash": "9bfa8c4380cb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/9bfa8c4380cb.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/9bfa8c4380cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-21T23:13:41.656178+00:00", "summary": {"raw": "* Add verbose flag\r\n* Add an empty window with a menu that has `File->Quit`. No plugins are loaded yet.\r\n\r\n![gz2.png](data/bitbucket.org/repo/baqryA7/images/2004634706-gz2.png)\r\n![gz1.png](data/bitbucket.org/repo/baqryA7/images/2128270342-gz1.png)\r\n\r\n### How to test it\r\n\r\n1. Build and install Ignition Common's [console_prefix](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/29/custom-prefix-for-console-logging/diff) branch\r\n\r\n1. [Build and install Ignition GUI from source](https://bitbucket.org/ignitionrobotics/ign-gui)\r\n\r\n1. Build this project:\r\n\r\n        cmake ..\r\n        make\r\n\r\n1. Run the executable on full verbose mode:\r\n\r\n        ./src/gazebo -v 4\r\n\r\n### Notes\r\n\r\n* There should be no segfaults when closing the window or doing Ctrl+C on the terminal", "markup": "markdown", "html": "<ul>\n<li>Add verbose flag</li>\n<li>Add an empty window with a menu that has <code>File-&gt;Quit</code>. No plugins are loaded yet.</li>\n</ul>\n<p><img alt=\"gz2.png\" src=\"data/bitbucket.org/repo/baqryA7/images/2004634706-gz2.png\" />\n<img alt=\"gz1.png\" src=\"data/bitbucket.org/repo/baqryA7/images/2128270342-gz1.png\" /></p>\n<h3 id=\"markdown-header-how-to-test-it\">How to test it</h3>\n<ol>\n<li>\n<p>Build and install Ignition Common's <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/29/custom-prefix-for-console-logging/diff\" rel=\"nofollow\">console_prefix</a> branch</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-gui\" rel=\"nofollow\">Build and install Ignition GUI from source</a></p>\n</li>\n<li>\n<p>Build this project:</p>\n<div class=\"codehilite\"><pre><span></span>cmake ..\nmake\n</pre></div>\n\n\n</li>\n<li>\n<p>Run the executable on full verbose mode:</p>\n<div class=\"codehilite\"><pre><span></span>./src/gazebo -v 4\n</pre></div>\n\n\n</li>\n</ol>\n<h3 id=\"markdown-header-notes\">Notes</h3>\n<ul>\n<li>There should be no segfaults when closing the window or doing Ctrl+C on the terminal</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "248119be91bc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/248119be91bc.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/248119be91bc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "ign-gui"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-26T18:52:14.055158+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "bd56871fdcd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/bd56871fdcd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/bd56871fdcd0"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "Fixed linking errors, missing include, and added install target. There are still quite a few compile warnings but I'll leave that for later.\r\n\r\nTested build with catkin on OSX.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/18/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:70d25995a108%0Df4e5a4ff11c0?from_pullrequest_id=18"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/18/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/18.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/18/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/18/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/18"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/18/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:70d25995a108%0Df4e5a4ff11c0?from_pullrequest_id=18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/18/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/18/statuses_page=1.json"}}, "title": "Fix build on OSX", "close_source_branch": true, "type": "pullrequest", "id": 18, "destination": {"commit": {"hash": "f4e5a4ff11c0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f4e5a4ff11c0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f4e5a4ff11c0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-24T17:30:48.008595+00:00", "summary": {"raw": "Fixed linking errors, missing include, and added install target. There are still quite a few compile warnings but I'll leave that for later.\r\n\r\nTested build with catkin on OSX.", "markup": "markdown", "html": "<p>Fixed linking errors, missing include, and added install target. There are still quite a few compile warnings but I'll leave that for later.</p>\n<p>Tested build with catkin on OSX.</p>", "type": "rendered"}, "source": {"commit": {"hash": "13030cf39477", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/13030cf39477.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/13030cf39477"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "osx_build"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-24T19:32:19.329378+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "70d25995a108", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/70d25995a108.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/70d25995a108"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "This is part of for issue #8. It adds support for setting and pausing simluation time.\r\n\r\nTo pause call `ecs::Master::BeginPause()`, and to unpause call `ecs::Master::EndPause()`. The number of `EndPause()` calls must equal to the number of `BeginPause()` calls before simulation time will resume.\r\n\r\nTo set or get simulation time call `ecs::Master::SimulationTime()`. A physics engine with a variable time step would set the simulation time according to how much time actually elapsed. The new time is used on the following update.\r\n\r\nIf the API looks okay the next steps are\r\n\r\n* **Done** ~~remove `dt` as a parameter from the entity query callbacks (after pull request #14 is merged)~~\r\n* **Done** ~~simulation time changes should take effect at the beginning of the next update so ecs systems only see one sim time during their callbacks.~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/19/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:5f23d93930d8%0Dbd56871fdcd0?from_pullrequest_id=19"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/19/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/19.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/19/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/19/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/19"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/19/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:5f23d93930d8%0Dbd56871fdcd0?from_pullrequest_id=19"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/19/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/19/statuses_page=1.json"}}, "title": "Add SimulationTime() getter/setter and support for pausing time", "close_source_branch": true, "type": "pullrequest", "id": 19, "destination": {"commit": {"hash": "bd56871fdcd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/bd56871fdcd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/bd56871fdcd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-24T23:04:12.148392+00:00", "summary": {"raw": "This is part of for issue #8. It adds support for setting and pausing simluation time.\r\n\r\nTo pause call `ecs::Master::BeginPause()`, and to unpause call `ecs::Master::EndPause()`. The number of `EndPause()` calls must equal to the number of `BeginPause()` calls before simulation time will resume.\r\n\r\nTo set or get simulation time call `ecs::Master::SimulationTime()`. A physics engine with a variable time step would set the simulation time according to how much time actually elapsed. The new time is used on the following update.\r\n\r\nIf the API looks okay the next steps are\r\n\r\n* **Done** ~~remove `dt` as a parameter from the entity query callbacks (after pull request #14 is merged)~~\r\n* **Done** ~~simulation time changes should take effect at the beginning of the next update so ecs systems only see one sim time during their callbacks.~~", "markup": "markdown", "html": "<p>This is part of for issue <a href=\"#!/osrf/gazebo_experimental/issues/8/make-it-easy-for-a-system-to-know-current\" rel=\"nofollow\" title=\"Make it easy for a system to know current simulation time\" class=\"ap-connect-link\"><s>#8</s></a>. It adds support for setting and pausing simluation time.</p>\n<p>To pause call <code>ecs::Master::BeginPause()</code>, and to unpause call <code>ecs::Master::EndPause()</code>. The number of <code>EndPause()</code> calls must equal to the number of <code>BeginPause()</code> calls before simulation time will resume.</p>\n<p>To set or get simulation time call <code>ecs::Master::SimulationTime()</code>. A physics engine with a variable time step would set the simulation time according to how much time actually elapsed. The new time is used on the following update.</p>\n<p>If the API looks okay the next steps are</p>\n<ul>\n<li><strong>Done</strong> <del>remove <code>dt</code> as a parameter from the entity query callbacks (after <a href=\"#!/osrf/gazebo_experimental/pull-requests/14/one-system-can-register-multiple-queries\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #14</a> is merged)</del></li>\n<li><strong>Done</strong> <del>simulation time changes should take effect at the beginning of the next update so ecs systems only see one sim time during their callbacks.</del></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "7a505a2e4fee", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/7a505a2e4fee.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/7a505a2e4fee"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "master_sim_time"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-27T15:09:54.690457+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "5f23d93930d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/5f23d93930d8.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/5f23d93930d8"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so pull request #9 should be merged first, then this PR should be targeted at default.\r\n\r\nTo see it work:\r\n\r\n* `IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo`\r\n* `GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo`\r\n\r\nUnknowns\r\n\r\n* How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.\r\n* Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?\r\n* Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/20/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:941a900a5453%0Ddeff249df3a6?from_pullrequest_id=20"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/20/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/20"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:941a900a5453%0Ddeff249df3a6?from_pullrequest_id=20"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/20/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/statuses_page=1.json"}}, "title": "Plugin to display image using ign-gui", "close_source_branch": true, "type": "pullrequest", "id": 20, "destination": {"commit": {"hash": "deff249df3a6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/deff249df3a6.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/deff249df3a6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-28T17:00:01.940575+00:00", "summary": {"raw": "Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so pull request #9 should be merged first, then this PR should be targeted at default.\r\n\r\nTo see it work:\r\n\r\n* `IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo`\r\n* `GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo`\r\n\r\nUnknowns\r\n\r\n* How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.\r\n* Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?\r\n* Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?", "markup": "markdown", "html": "<p>Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so <a href=\"#!/osrf/gazebo_experimental/pull-requests/9/adds-dummy-rendering-system\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #9</a> should be merged first, then this PR should be targeted at default.</p>\n<p>To see it work:</p>\n<ul>\n<li><code>IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo</code></li>\n<li><code>GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo</code></li>\n</ul>\n<p>Unknowns</p>\n<ul>\n<li>How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.</li>\n<li>Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?</li>\n<li>Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "b561715f17c1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b561715f17c1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b561715f17c1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "gui-display-image"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-04T21:42:01.517503+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "941a900a5453", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/941a900a5453.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/941a900a5453"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "fixed more undefined symbols errors caused by recent PRs.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:deff249df3a6%0D4eacbeb18eba?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/21.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/21/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/21"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:deff249df3a6%0D4eacbeb18eba?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/21/statuses_page=1.json"}}, "title": "Fix osx build", "close_source_branch": false, "type": "pullrequest", "id": 21, "destination": {"commit": {"hash": "4eacbeb18eba", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/4eacbeb18eba.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/4eacbeb18eba"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-02T22:53:51.044370+00:00", "summary": {"raw": "fixed more undefined symbols errors caused by recent PRs.", "markup": "markdown", "html": "<p>fixed more undefined symbols errors caused by recent PRs.</p>", "type": "rendered"}, "source": {"commit": {"hash": "5b9619e9aabc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/5b9619e9aabc.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/5b9619e9aabc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "osx_link"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-04T21:41:10.834377+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "deff249df3a6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/deff249df3a6.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/deff249df3a6"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This adds diagnostics and a GUI plugin to view them. It uses the `ignition::msgs::Diagnostics` message. \r\n\r\nThe GUI window won't win any awards for attractive design, but it does display timing information as a gantt chart. The green bar length shows what percentage of time was spent executing the task listed on the left during one update. The intent is to which systems are taking the most time and need optimization.\r\n\r\n* Added DiagnosticsManager class that's a loose port of `gazebo::util::DiagnosticsManager`\r\n* Manager now publishes diagnostics (added call to init)\r\n* `Manager::LoadSystem` now requires the system's name ( so it can display diagnostics)\r\n* Changed `Manager::UpdateSystems()` to `Manager::UpdateOnce`\r\n* Added `Manager::UpdateOnce(float rtf)` that sleeps after updating to maintain a given real time factor.\r\n* Added GUI diagnostics window to display diagnostics message.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/22/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:bb416641e755%0D133f769adb44?from_pullrequest_id=22"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/22/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/22.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/22/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/22/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/22"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/22/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:bb416641e755%0D133f769adb44?from_pullrequest_id=22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/22/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/22/statuses_page=1.json"}}, "title": "Diagnostic timer", "close_source_branch": true, "type": "pullrequest", "id": 22, "destination": {"commit": {"hash": "133f769adb44", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/133f769adb44.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/133f769adb44"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-06T01:18:57.511126+00:00", "summary": {"raw": "This adds diagnostics and a GUI plugin to view them. It uses the `ignition::msgs::Diagnostics` message. \r\n\r\nThe GUI window won't win any awards for attractive design, but it does display timing information as a gantt chart. The green bar length shows what percentage of time was spent executing the task listed on the left during one update. The intent is to which systems are taking the most time and need optimization.\r\n\r\n* Added DiagnosticsManager class that's a loose port of `gazebo::util::DiagnosticsManager`\r\n* Manager now publishes diagnostics (added call to init)\r\n* `Manager::LoadSystem` now requires the system's name ( so it can display diagnostics)\r\n* Changed `Manager::UpdateSystems()` to `Manager::UpdateOnce`\r\n* Added `Manager::UpdateOnce(float rtf)` that sleeps after updating to maintain a given real time factor.\r\n* Added GUI diagnostics window to display diagnostics message.", "markup": "markdown", "html": "<p>This adds diagnostics and a GUI plugin to view them. It uses the <code>ignition::msgs::Diagnostics</code> message. </p>\n<p>The GUI window won't win any awards for attractive design, but it does display timing information as a gantt chart. The green bar length shows what percentage of time was spent executing the task listed on the left during one update. The intent is to which systems are taking the most time and need optimization.</p>\n<ul>\n<li>Added DiagnosticsManager class that's a loose port of <code>gazebo::util::DiagnosticsManager</code></li>\n<li>Manager now publishes diagnostics (added call to init)</li>\n<li><code>Manager::LoadSystem</code> now requires the system's name ( so it can display diagnostics)</li>\n<li>Changed <code>Manager::UpdateSystems()</code> to <code>Manager::UpdateOnce</code></li>\n<li>Added <code>Manager::UpdateOnce(float rtf)</code> that sleeps after updating to maintain a given real time factor.</li>\n<li>Added GUI diagnostics window to display diagnostics message.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "ef2214d225a1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ef2214d225a1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ef2214d225a1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "diagnostic_timer"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-18T15:30:32.493181+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "bb416641e755", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/bb416641e755.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/bb416641e755"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "Memory wasn't being deleted when applying changes to components. This resulted in the amount of memory being allocated growing (stuff in `components`), while the mapping between components and their storage (stuff in `componentIndices`) did not. There is now an assert checking these two are equal in size.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/23/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:0c259450ce4d%0D941a900a5453?from_pullrequest_id=23"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/23/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/23.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/23/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/23/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/23"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/23/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:0c259450ce4d%0D941a900a5453?from_pullrequest_id=23"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/23/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/23/statuses_page=1.json"}}, "title": "Fixed memory leak in handling of modifying components", "close_source_branch": true, "type": "pullrequest", "id": 23, "destination": {"commit": {"hash": "941a900a5453", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/941a900a5453.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/941a900a5453"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-09T16:42:21.209228+00:00", "summary": {"raw": "Memory wasn't being deleted when applying changes to components. This resulted in the amount of memory being allocated growing (stuff in `components`), while the mapping between components and their storage (stuff in `componentIndices`) did not. There is now an assert checking these two are equal in size.", "markup": "markdown", "html": "<p>Memory wasn't being deleted when applying changes to components. This resulted in the amount of memory being allocated growing (stuff in <code>components</code>), while the mapping between components and their storage (stuff in <code>componentIndices</code>) did not. There is now an assert checking these two are equal in size.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a8a40759a5cd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/a8a40759a5cd.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/a8a40759a5cd"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "fix_modify_mem_leak"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-09T17:26:03.675252+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "0c259450ce4d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/0c259450ce4d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/0c259450ce4d"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This fixes issue #22\r\n\r\n* `ComponentTypeInfo` now has two copiers: shallow and deep\r\n    * Shallow byte-for-byte copies the component to a new location\r\n    * Deep uses the copy constructor and placement new operator\r\n* `EntityComponentDatabase` deep copies a component to the temporary storage when it is to be modified\r\n* `EntityComponentDatabase` shallow copies modified components into main storage when building the next state", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/24/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:54c38a30d840%0Dd1f6a712960c?from_pullrequest_id=24"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/24/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/24.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/24/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/24/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/24"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/24/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:54c38a30d840%0Dd1f6a712960c?from_pullrequest_id=24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/24/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/24/statuses_page=1.json"}}, "title": "Fixed bug where supposedly immutable components were mutable", "close_source_branch": true, "type": "pullrequest", "id": 24, "destination": {"commit": {"hash": "d1f6a712960c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d1f6a712960c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d1f6a712960c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-09T17:50:17.844417+00:00", "summary": {"raw": "This fixes issue #22\r\n\r\n* `ComponentTypeInfo` now has two copiers: shallow and deep\r\n    * Shallow byte-for-byte copies the component to a new location\r\n    * Deep uses the copy constructor and placement new operator\r\n* `EntityComponentDatabase` deep copies a component to the temporary storage when it is to be modified\r\n* `EntityComponentDatabase` shallow copies modified components into main storage when building the next state", "markup": "markdown", "html": "<p>This fixes issue <a href=\"#!/osrf/gazebo_experimental/issues/22/entitycomponentdatabase-method-of-making\" rel=\"nofollow\" title=\"EntityComponentDatabase method of making components immutable is flawed\" class=\"ap-connect-link\"><s>#22</s></a></p>\n<ul>\n<li><code>ComponentTypeInfo</code> now has two copiers: shallow and deep<ul>\n<li>Shallow byte-for-byte copies the component to a new location</li>\n<li>Deep uses the copy constructor and placement new operator</li>\n</ul>\n</li>\n<li><code>EntityComponentDatabase</code> deep copies a component to the temporary storage when it is to be modified</li>\n<li><code>EntityComponentDatabase</code> shallow copies modified components into main storage when building the next state</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "7bdf90a75c0c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/7bdf90a75c0c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/7bdf90a75c0c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "copy_constructor_deep_copy"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-16T00:40:08.438341+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "54c38a30d840", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/54c38a30d840.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/54c38a30d840"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This is an intial readme file. It has enough info to help someone build, test, and run the code in this repo. Some things are missing and have been included in the README with **TO DO** under them.\r\n\r\nSee #6", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/25/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:133f769adb44%0D54c38a30d840?from_pullrequest_id=25"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/25/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/25.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/25/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/25/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/25"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/25/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:133f769adb44%0D54c38a30d840?from_pullrequest_id=25"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/25/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/25/statuses_page=1.json"}}, "title": "Add README", "close_source_branch": true, "type": "pullrequest", "id": 25, "destination": {"commit": {"hash": "54c38a30d840", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/54c38a30d840.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/54c38a30d840"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-09T18:33:36.106326+00:00", "summary": {"raw": "This is an intial readme file. It has enough info to help someone build, test, and run the code in this repo. Some things are missing and have been included in the README with **TO DO** under them.\r\n\r\nSee #6", "markup": "markdown", "html": "<p>This is an intial readme file. It has enough info to help someone build, test, and run the code in this repo. Some things are missing and have been included in the README with <strong>TO DO</strong> under them.</p>\n<p>See <a href=\"#!/osrf/gazebo_experimental/issues/6/add-a-readme\" rel=\"nofollow\" title=\"Add a README\" class=\"ap-connect-link\"><s>#6</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "066db598486c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/066db598486c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/066db598486c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "add_readme"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-16T17:59:25.443681+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "133f769adb44", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/133f769adb44.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/133f769adb44"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This puts the ECS system into the main gazebo executable. It also adds a blank ECS system called PhysicsSystem and a component PhysicsProperties.\r\n\r\nThe purpose is to be a base for future pull requests.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/26/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:d013e3372508%0D0c259450ce4d?from_pullrequest_id=26"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/26/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/26.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/26/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/26/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/26"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/26/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:d013e3372508%0D0c259450ce4d?from_pullrequest_id=26"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/26/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/26/statuses_page=1.json"}}, "title": "Stub Physics System", "close_source_branch": true, "type": "pullrequest", "id": 26, "destination": {"commit": {"hash": "0c259450ce4d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/0c259450ce4d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/0c259450ce4d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-10T23:03:46.855710+00:00", "summary": {"raw": "This puts the ECS system into the main gazebo executable. It also adds a blank ECS system called PhysicsSystem and a component PhysicsProperties.\r\n\r\nThe purpose is to be a base for future pull requests.", "markup": "markdown", "html": "<p>This puts the ECS system into the main gazebo executable. It also adds a blank ECS system called PhysicsSystem and a component PhysicsProperties.</p>\n<p>The purpose is to be a base for future pull requests.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d8feacbb2703", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d8feacbb2703.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d8feacbb2703"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_systems"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-11T18:56:59.963909+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "d013e3372508", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d013e3372508.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d013e3372508"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "Gui window displays random data at startup. This makes it white at startup.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/27/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:d1f6a712960c%0Dca6ec6055430?from_pullrequest_id=27"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/27/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/27.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/27/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/27/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/27"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/27/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:d1f6a712960c%0Dca6ec6055430?from_pullrequest_id=27"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/27/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/27/statuses_page=1.json"}}, "title": "Fill the pixmap so it doesn't display random data at startup", "close_source_branch": true, "type": "pullrequest", "id": 27, "destination": {"commit": {"hash": "ca6ec6055430", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ca6ec6055430.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ca6ec6055430"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-12T17:32:16.234968+00:00", "summary": {"raw": "Gui window displays random data at startup. This makes it white at startup.", "markup": "markdown", "html": "<p>Gui window displays random data at startup. This makes it white at startup.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7141218694ef", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/7141218694ef.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/7141218694ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "fill_gui"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-16T00:39:49.624044+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "d1f6a712960c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d1f6a712960c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d1f6a712960c"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "this fixes the build on OSX for me", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/28/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:ca6ec6055430%0Dd013e3372508?from_pullrequest_id=28"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/28/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/28.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/28/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/28/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/28"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/28/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:ca6ec6055430%0Dd013e3372508?from_pullrequest_id=28"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/28/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/28/statuses_page=1.json"}}, "title": "Link physics system against GazeboECS", "close_source_branch": true, "type": "pullrequest", "id": 28, "destination": {"commit": {"hash": "d013e3372508", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d013e3372508.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d013e3372508"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-12T17:48:45.448997+00:00", "summary": {"raw": "this fixes the build on OSX for me", "markup": "markdown", "html": "<p>this fixes the build on OSX for me</p>", "type": "rendered"}, "source": {"commit": {"hash": "53dfeb5cace7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/53dfeb5cace7.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/53dfeb5cace7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_linking"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-16T00:39:30.163233+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "ca6ec6055430", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ca6ec6055430.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ca6ec6055430"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "First pass at integration. Currently it just builds a sample scene for demo purposes, and publishes images over ign transport.\r\n\r\n![gazebo-ign-rendering.png](data/bitbucket.org/repo/baqryA7/images/369353022-gazebo-ign-rendering.png)\r\n\r\ntry out the demo by running:\r\n\r\n~~~\r\nGAZEBO_PLUGIN_PATH=$LD_LIBRARY_PATH IGN_GUI_PLUGIN_PATH=src/gui gazebo\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/29/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:3c47be3c6b4f%0D458110f786c9?from_pullrequest_id=29"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/29/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/29.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/29/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/29/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/29"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/29/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:3c47be3c6b4f%0D458110f786c9?from_pullrequest_id=29"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/29/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/29/statuses_page=1.json"}}, "title": "Integrate ign rendering", "close_source_branch": false, "type": "pullrequest", "id": 29, "destination": {"commit": {"hash": "458110f786c9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/458110f786c9.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/458110f786c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-12T18:52:06.973283+00:00", "summary": {"raw": "First pass at integration. Currently it just builds a sample scene for demo purposes, and publishes images over ign transport.\r\n\r\n![gazebo-ign-rendering.png](data/bitbucket.org/repo/baqryA7/images/369353022-gazebo-ign-rendering.png)\r\n\r\ntry out the demo by running:\r\n\r\n~~~\r\nGAZEBO_PLUGIN_PATH=$LD_LIBRARY_PATH IGN_GUI_PLUGIN_PATH=src/gui gazebo\r\n~~~", "markup": "markdown", "html": "<p>First pass at integration. Currently it just builds a sample scene for demo purposes, and publishes images over ign transport.</p>\n<p><img alt=\"gazebo-ign-rendering.png\" src=\"data/bitbucket.org/repo/baqryA7/images/369353022-gazebo-ign-rendering.png\" /></p>\n<p>try out the demo by running:</p>\n<div class=\"codehilite\"><pre><span></span>GAZEBO_PLUGIN_PATH=$LD_LIBRARY_PATH IGN_GUI_PLUGIN_PATH=src/gui gazebo\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "655f5cff8539", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/655f5cff8539.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/655f5cff8539"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "ign_rendering"}}, "comment_count": 25, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-14T15:06:16.068715+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "3c47be3c6b4f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/3c47be3c6b4f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/3c47be3c6b4f"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "Ready to review. This pull request adds componentizers. These turn SDF into entities and components.\r\n\r\nComponentizers are loaded as plugins, and given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree breadth-first and invokes the componentizers one `sdf::Element` at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.\r\n\r\nI prefixed the **C**omponenti**Z**ers with CZ so tabs in my editor weren't named the same as the component files.\r\n\r\n* Componentizers\r\n    * `CZName` adds a name component to anything that has an attribute 'name'\r\n    * `CZGeometry` adds a geometry component when it sees `<geometry>` under a `<collision>` or `<visual>`. It currently supports spheres, boxes, and cylinders only.\r\n    * `CZPose` adds a pose component when it sees a `<model>`, `<link>`, `<visual>`, or `<collision>`. The pose are given in the parent frame so that visuals move when the collision moves. See [this Jira ticket](https://osrfoundation.atlassian.net/browse/GAZ-141).\r\n    * `CZMaterial` Adds a material when a `<visual>` component is given. It currently only uses `<ambient>` to make a flat color material.\r\n    * `CZCollidable` creates a component when there is a `<collision>`. This signals that the `Geometry` component is collision geometry, and is grouped with other `<collision>` on the same link. This component should also have contact and surface properties, but that's not currently implemented\r\n    * `CZInertial` adds an interial component when there is one on a `<link>`. The `Collidable` component `groupId` references the entity this component is created on.\r\n    * `CZPhysicsConfig` adds a component for global `<physics>` properties. It only has `maxStepSize` currently.\r\n    * `CZWorldVelocity` if model is not static then the entities created for the `<link>` get `WorldVelocity` components.\r\n\r\n\r\n# Examples #\r\n\r\n## Empty world ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n\r\n## World with non-static model ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n    <model name=\"model1\">\r\n      <link name=\"link1\">\r\n        <collision name=\"col1\">\r\n          <geometry>\r\n            <box>\r\n              <size>1 2 3</size>\r\n            </box>\r\n          </geometry>\r\n        </collision>\r\n        <visual name=\"vis1\">\r\n          <geometry>\r\n            <sphere>\r\n              <radius>0.5</radius>\r\n            </sphere>\r\n          </geometry>\r\n          <material>\r\n            <ambient>0.1 0.2 0.3 1.0</ambient>\r\n          </material>\r\n        </visual>\r\n        <inertial>\r\n          <mass>5</mass>\r\n          <inertia>\r\n            <ixx>1</ixx>\r\n            <iyy>1</iyy>\r\n            <izz>1</izz>\r\n            <ixy>0</ixy>\r\n            <ixz>0</ixz>\r\n            <iyz>0</iyz>\r\n          </inertia>\r\n        </inertial>\r\n      </link>\r\n    </model>\r\n  </world>\r\n</sdf>\r\n\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n* **E3**\r\n    * *Name: model1* - created by `CZName`\r\n    * *Pose: origin in frame \"/\", defines frame \"/model/model1\"* - created by `CZPose`\r\n* **E4**\r\n    * *Name: link1* - created by `CZName`\r\n    * *Inertial: mass 5, inertia identity matrix* - created by `CZInertial`\r\n    * *WorldVelocity: initially zero* - created by `CZWorldVelocity`\r\n    * *Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"* - created by `CZPose`\r\n* **E5**\r\n    * *Name: col1* - created by `CZName`\r\n    * *Geometry: box size 1,2,3* - created by `CZGeometry`\r\n    * *Collidable: groupId E4* - created by `CZCollidable`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"* - created by `CZPose`\r\n* **E6**\r\n    * *Name vis1* - created by `CZName`\r\n    * *Geometry: sphere radius 0.5* - created by `CZGeometry`\r\n    * *Material; RGBA 0.1, 0.2, 0.3, 1.0* - created by `CZMaterial`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"* - created by `CZPose`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:b0bfa9550ef2%0D4deac4e79cc3?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/30/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:b0bfa9550ef2%0D4deac4e79cc3?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/statuses_page=1.json"}}, "title": "Componentizers", "close_source_branch": true, "type": "pullrequest", "id": 30, "destination": {"commit": {"hash": "4deac4e79cc3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/4deac4e79cc3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/4deac4e79cc3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-15T17:20:24.806508+00:00", "summary": {"raw": "Ready to review. This pull request adds componentizers. These turn SDF into entities and components.\r\n\r\nComponentizers are loaded as plugins, and given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree breadth-first and invokes the componentizers one `sdf::Element` at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.\r\n\r\nI prefixed the **C**omponenti**Z**ers with CZ so tabs in my editor weren't named the same as the component files.\r\n\r\n* Componentizers\r\n    * `CZName` adds a name component to anything that has an attribute 'name'\r\n    * `CZGeometry` adds a geometry component when it sees `<geometry>` under a `<collision>` or `<visual>`. It currently supports spheres, boxes, and cylinders only.\r\n    * `CZPose` adds a pose component when it sees a `<model>`, `<link>`, `<visual>`, or `<collision>`. The pose are given in the parent frame so that visuals move when the collision moves. See [this Jira ticket](https://osrfoundation.atlassian.net/browse/GAZ-141).\r\n    * `CZMaterial` Adds a material when a `<visual>` component is given. It currently only uses `<ambient>` to make a flat color material.\r\n    * `CZCollidable` creates a component when there is a `<collision>`. This signals that the `Geometry` component is collision geometry, and is grouped with other `<collision>` on the same link. This component should also have contact and surface properties, but that's not currently implemented\r\n    * `CZInertial` adds an interial component when there is one on a `<link>`. The `Collidable` component `groupId` references the entity this component is created on.\r\n    * `CZPhysicsConfig` adds a component for global `<physics>` properties. It only has `maxStepSize` currently.\r\n    * `CZWorldVelocity` if model is not static then the entities created for the `<link>` get `WorldVelocity` components.\r\n\r\n\r\n# Examples #\r\n\r\n## Empty world ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n\r\n## World with non-static model ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n    <model name=\"model1\">\r\n      <link name=\"link1\">\r\n        <collision name=\"col1\">\r\n          <geometry>\r\n            <box>\r\n              <size>1 2 3</size>\r\n            </box>\r\n          </geometry>\r\n        </collision>\r\n        <visual name=\"vis1\">\r\n          <geometry>\r\n            <sphere>\r\n              <radius>0.5</radius>\r\n            </sphere>\r\n          </geometry>\r\n          <material>\r\n            <ambient>0.1 0.2 0.3 1.0</ambient>\r\n          </material>\r\n        </visual>\r\n        <inertial>\r\n          <mass>5</mass>\r\n          <inertia>\r\n            <ixx>1</ixx>\r\n            <iyy>1</iyy>\r\n            <izz>1</izz>\r\n            <ixy>0</ixy>\r\n            <ixz>0</ixz>\r\n            <iyz>0</iyz>\r\n          </inertia>\r\n        </inertial>\r\n      </link>\r\n    </model>\r\n  </world>\r\n</sdf>\r\n\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n* **E3**\r\n    * *Name: model1* - created by `CZName`\r\n    * *Pose: origin in frame \"/\", defines frame \"/model/model1\"* - created by `CZPose`\r\n* **E4**\r\n    * *Name: link1* - created by `CZName`\r\n    * *Inertial: mass 5, inertia identity matrix* - created by `CZInertial`\r\n    * *WorldVelocity: initially zero* - created by `CZWorldVelocity`\r\n    * *Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"* - created by `CZPose`\r\n* **E5**\r\n    * *Name: col1* - created by `CZName`\r\n    * *Geometry: box size 1,2,3* - created by `CZGeometry`\r\n    * *Collidable: groupId E4* - created by `CZCollidable`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"* - created by `CZPose`\r\n* **E6**\r\n    * *Name vis1* - created by `CZName`\r\n    * *Geometry: sphere radius 0.5* - created by `CZGeometry`\r\n    * *Material; RGBA 0.1, 0.2, 0.3, 1.0* - created by `CZMaterial`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"* - created by `CZPose`", "markup": "markdown", "html": "<p>Ready to review. This pull request adds componentizers. These turn SDF into entities and components.</p>\n<p>Componentizers are loaded as plugins, and given to the <code>ecs::Manager</code> class. <code>Manager::LoadWorld(std::string _world)</code> gives walks the SDF tree breadth-first and invokes the componentizers one <code>sdf::Element</code> at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.</p>\n<p>I prefixed the <strong>C</strong>omponenti<strong>Z</strong>ers with CZ so tabs in my editor weren't named the same as the component files.</p>\n<ul>\n<li>Componentizers<ul>\n<li><code>CZName</code> adds a name component to anything that has an attribute 'name'</li>\n<li><code>CZGeometry</code> adds a geometry component when it sees <code>&lt;geometry&gt;</code> under a <code>&lt;collision&gt;</code> or <code>&lt;visual&gt;</code>. It currently supports spheres, boxes, and cylinders only.</li>\n<li><code>CZPose</code> adds a pose component when it sees a <code>&lt;model&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;visual&gt;</code>, or <code>&lt;collision&gt;</code>. The pose are given in the parent frame so that visuals move when the collision moves. See <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/browse/GAZ-141\" rel=\"nofollow\">this Jira ticket</a>.</li>\n<li><code>CZMaterial</code> Adds a material when a <code>&lt;visual&gt;</code> component is given. It currently only uses <code>&lt;ambient&gt;</code> to make a flat color material.</li>\n<li><code>CZCollidable</code> creates a component when there is a <code>&lt;collision&gt;</code>. This signals that the <code>Geometry</code> component is collision geometry, and is grouped with other <code>&lt;collision&gt;</code> on the same link. This component should also have contact and surface properties, but that's not currently implemented</li>\n<li><code>CZInertial</code> adds an interial component when there is one on a <code>&lt;link&gt;</code>. The <code>Collidable</code> component <code>groupId</code> references the entity this component is created on.</li>\n<li><code>CZPhysicsConfig</code> adds a component for global <code>&lt;physics&gt;</code> properties. It only has <code>maxStepSize</code> currently.</li>\n<li><code>CZWorldVelocity</code> if model is not static then the entities created for the <code>&lt;link&gt;</code> get <code>WorldVelocity</code> components.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-examples\">Examples</h1>\n<h2 id=\"markdown-header-empty-world\">Empty world</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;asdf&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Creates these <strong>Entities</strong> and <em>components</em></p>\n<ul>\n<li><strong>E1</strong><ul>\n<li><em>Name: default</em> - created by <code>CZName</code></li>\n</ul>\n</li>\n<li><strong>E2</strong><ul>\n<li><em>Name: asdf</em> - created by <code>CZName</code></li>\n<li><em>PhysicsConfig: maxStepSize: 0.001</em> - created by <code>CZPhysicsConfig</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"markdown-header-world-with-non-static-model\">World with non-static model</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;asdf&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;model1&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;col1&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>1 2 3<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/collision&gt;</span>\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;vis1&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;sphere&gt;</span>\n              <span class=\"nt\">&lt;radius&gt;</span>0.5<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;/sphere&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n          <span class=\"nt\">&lt;material&gt;</span>\n            <span class=\"nt\">&lt;ambient&gt;</span>0.1 0.2 0.3 1.0<span class=\"nt\">&lt;/ambient&gt;</span>\n          <span class=\"nt\">&lt;/material&gt;</span>\n        <span class=\"nt\">&lt;/visual&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>5<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>1<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>1<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>1<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Creates these <strong>Entities</strong> and <em>components</em></p>\n<ul>\n<li><strong>E1</strong><ul>\n<li><em>Name: default</em> - created by <code>CZName</code></li>\n</ul>\n</li>\n<li><strong>E2</strong><ul>\n<li><em>Name: asdf</em> - created by <code>CZName</code></li>\n<li><em>PhysicsConfig: maxStepSize: 0.001</em> - created by <code>CZPhysicsConfig</code></li>\n</ul>\n</li>\n<li><strong>E3</strong><ul>\n<li><em>Name: model1</em> - created by <code>CZName</code></li>\n<li><em>Pose: origin in frame \"/\", defines frame \"/model/model1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E4</strong><ul>\n<li><em>Name: link1</em> - created by <code>CZName</code></li>\n<li><em>Inertial: mass 5, inertia identity matrix</em> - created by <code>CZInertial</code></li>\n<li><em>WorldVelocity: initially zero</em> - created by <code>CZWorldVelocity</code></li>\n<li><em>Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E5</strong><ul>\n<li><em>Name: col1</em> - created by <code>CZName</code></li>\n<li><em>Geometry: box size 1,2,3</em> - created by <code>CZGeometry</code></li>\n<li><em>Collidable: groupId E4</em> - created by <code>CZCollidable</code></li>\n<li><em>Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E6</strong><ul>\n<li><em>Name vis1</em> - created by <code>CZName</code></li>\n<li><em>Geometry: sphere radius 0.5</em> - created by <code>CZGeometry</code></li>\n<li><em>Material; RGBA 0.1, 0.2, 0.3, 1.0</em> - created by <code>CZMaterial</code></li>\n<li><em>Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "e863e2dadd4b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e863e2dadd4b.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e863e2dadd4b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "comment_count": 41, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-04T01:08:47.404864+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "b0bfa9550ef2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b0bfa9550ef2.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b0bfa9550ef2"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "Quick fix to avoid updating when there's no PhysicsProperties component", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/31/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:daa71ca6acd0%0Dbb416641e755?from_pullrequest_id=31"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/31/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/31.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/31/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/31/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/31"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/31/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:daa71ca6acd0%0Dbb416641e755?from_pullrequest_id=31"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/31/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/31/statuses_page=1.json"}}, "title": "If component is undefined don't register query", "close_source_branch": true, "type": "pullrequest", "id": 31, "destination": {"commit": {"hash": "bb416641e755", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/bb416641e755.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/bb416641e755"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-18T16:03:25.024233+00:00", "summary": {"raw": "Quick fix to avoid updating when there's no PhysicsProperties component", "markup": "markdown", "html": "<p>Quick fix to avoid updating when there's no PhysicsProperties component</p>", "type": "rendered"}, "source": {"commit": {"hash": "f480a60bf8a0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f480a60bf8a0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f480a60bf8a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_ignore_undefined_component"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-18T16:03:35.014004+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "Preview:\r\n\r\n#!/osrf/gazebo_experimental/src/readme_dummy/?at=readme_dummy", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/32/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:adb56158ca50%0Ddaa71ca6acd0?from_pullrequest_id=32"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/32/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/32.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/32/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/32/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/32"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/32/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:adb56158ca50%0Ddaa71ca6acd0?from_pullrequest_id=32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/32/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/32/statuses_page=1.json"}}, "title": "Add instructions on running dummy demo", "close_source_branch": true, "type": "pullrequest", "id": 32, "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-18T18:46:49.108123+00:00", "summary": {"raw": "Preview:\r\n\r\n#!/osrf/gazebo_experimental/src/readme_dummy/?at=readme_dummy", "markup": "markdown", "html": "<p>Preview:</p>\n<p><a href=\"#!/osrf/gazebo_experimental/src/readme_dummy/?at=readme_dummy\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/gazebo_experimental/src/readme_dummy/?at=readme_dummy</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "56d5b1496761", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/56d5b1496761.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/56d5b1496761"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "readme_dummy"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-22T20:55:28.402965+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "adb56158ca50", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/adb56158ca50.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/adb56158ca50"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "This requires [ign-common pull request #35](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/35).\r\n\r\nBy default it loads `empty.world`. `gazebo -f shapes.world` loads a world file with some simple shapes.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:6e1326f5d59c%0D368d0429ec2c?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/33.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/33/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/33"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:6e1326f5d59c%0D368d0429ec2c?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/33/statuses_page=1.json"}}, "title": "Load world from file", "close_source_branch": true, "type": "pullrequest", "id": 33, "destination": {"commit": {"hash": "368d0429ec2c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/368d0429ec2c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/368d0429ec2c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-23T19:05:11.721660+00:00", "summary": {"raw": "This requires [ign-common pull request #35](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/35).\r\n\r\nBy default it loads `empty.world`. `gazebo -f shapes.world` loads a world file with some simple shapes.", "markup": "markdown", "html": "<p>This requires <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/35\" rel=\"nofollow\">ign-common pull request #35</a>.</p>\n<p>By default it loads <code>empty.world</code>. <code>gazebo -f shapes.world</code> loads a world file with some simple shapes.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a6c4d2e6dd0f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/a6c4d2e6dd0f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/a6c4d2e6dd0f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "load_from_file"}}, "comment_count": 23, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-05T19:33:50.064784+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "6e1326f5d59c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/6e1326f5d59c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/6e1326f5d59c"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "This pull request runs ECS systems in parallel. ~~It requires [ign-common pull request #38](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/38/thread-worker-pool/diff)~~ **merged**.\r\n\r\n`EntityComponentDatabase` is made thread-safe by adding a single mutex for everything. This is probably unacceptable long term because it means entities and components can't be read in parallel. However, the database implementation needs to be rewritten at some point so I decided to not spend time making it better.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/34/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:553c3830d8e3%0D715f4f50e32d?from_pullrequest_id=34"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/34/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/34.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/34/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/34/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/34"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/34/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:553c3830d8e3%0D715f4f50e32d?from_pullrequest_id=34"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/34/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/34/statuses_page=1.json"}}, "title": "Run ECS systems in parallel", "close_source_branch": true, "type": "pullrequest", "id": 34, "destination": {"commit": {"hash": "715f4f50e32d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/715f4f50e32d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/715f4f50e32d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-31T23:22:03.795236+00:00", "summary": {"raw": "This pull request runs ECS systems in parallel. ~~It requires [ign-common pull request #38](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/38/thread-worker-pool/diff)~~ **merged**.\r\n\r\n`EntityComponentDatabase` is made thread-safe by adding a single mutex for everything. This is probably unacceptable long term because it means entities and components can't be read in parallel. However, the database implementation needs to be rewritten at some point so I decided to not spend time making it better.", "markup": "markdown", "html": "<p>This pull request runs ECS systems in parallel. <del>It requires <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/38/thread-worker-pool/diff\" rel=\"nofollow\">ign-common pull request #38</a></del> <strong>merged</strong>.</p>\n<p><code>EntityComponentDatabase</code> is made thread-safe by adding a single mutex for everything. This is probably unacceptable long term because it means entities and components can't be read in parallel. However, the database implementation needs to be rewritten at some point so I decided to not spend time making it better.</p>", "type": "rendered"}, "source": {"commit": {"hash": "060204d59f51", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/060204d59f51.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/060204d59f51"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "parallel_systems"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-19T22:39:53.069852+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "553c3830d8e3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/553c3830d8e3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/553c3830d8e3"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "I've imported the script from gazebo and adapted it to the filesystem layout of gazebo_experimental.\r\n\r\nTesting run:\r\nhttps://build.osrfoundation.org/job/gazebo_experimental-ci-pr_any-xenial-amd64-gpu-none/12/cppcheckResult/", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/35/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:4deac4e79cc3%0Dadb56158ca50?from_pullrequest_id=35"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/35/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/35.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/35/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/35/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/35"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/35/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:4deac4e79cc3%0Dadb56158ca50?from_pullrequest_id=35"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/35/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/35/statuses_page=1.json"}}, "title": "Add code_check script", "close_source_branch": true, "type": "pullrequest", "id": 35, "destination": {"commit": {"hash": "adb56158ca50", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/adb56158ca50.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/adb56158ca50"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-06-05T17:03:34.362888+00:00", "summary": {"raw": "I've imported the script from gazebo and adapted it to the filesystem layout of gazebo_experimental.\r\n\r\nTesting run:\r\nhttps://build.osrfoundation.org/job/gazebo_experimental-ci-pr_any-xenial-amd64-gpu-none/12/cppcheckResult/", "markup": "markdown", "html": "<p>I've imported the script from gazebo and adapted it to the filesystem layout of gazebo_experimental.</p>\n<p>Testing run:\n<a href=\"https://build.osrfoundation.org/job/gazebo_experimental-ci-pr_any-xenial-amd64-gpu-none/12/cppcheckResult/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/gazebo_experimental-ci-pr_any-xenial-amd64-gpu-none/12/cppcheckResult/</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "f1bf3c3b48af", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f1bf3c3b48af.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f1bf3c3b48af"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "code_check"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-07T22:20:11.474819+00:00", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "merge_commit": {"hash": "4deac4e79cc3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/4deac4e79cc3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/4deac4e79cc3"}}}, "closed_by": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"description": "**Update** components have been simplified to solve a liking issue. I also fixed likely visibility issues with components on windows after reading  PRs/issues by @traversaro [here](https://bitbucket.org/osrf/gazebo/pull-requests/2738).\r\n\r\nThis feature is split into two pull requests. This pull request is the code to generate c++ code from protobuf files using a protobuf compiler plugin. The integration of this with the rest of the code is in pull request #37.\r\n\r\nThis is a redesign of components. The goal for this pull request is to offer these benefits\r\n\r\n* No use of RTTI #29\r\n* Components use PIMPL #25\r\n\r\nWithout losing these benefits:\r\n\r\n* New components come from plugins without recompiling the database\r\n* ~~Component data can be stored adjacent in memory~~\r\n    * **Update** Components are now normal PIMPL classes. I dropped this optimization in favor of working code now.\r\n* Components have convenient `ignition::math` types\r\n\r\nAnd with a path towards these features in the future:\r\n\r\n* Components are serializable\r\n    * Create a component viewer #19\r\n    * Run ECS on different systems #18 \r\n\r\nA protobuf compiler plugin generates c++ code for components. A developer will write a protobuf message, invoke a cmake macro to turn it into a component, and use the generated API.\r\n\r\nFor example this protobuf message\r\n\r\n```\r\nsyntax = \"proto2\";\r\n\r\npackage gazebo.components;\r\n\r\nimport \"gazebo/components/Pose3d.proto\";\r\n\r\nmessage MyPoseComponent\r\n{\r\n  optional string ParentFrame = 1;\r\n  optional Pose3d Pose = 3;\r\n}\r\n```\r\n\r\nWould be used like this:\r\n```\r\n// Component API files end in \".api.hh\"\r\n#include \"gazebo/components/MyPoseComponent.api.hh\"\r\n// ...\r\n// No RTTI being used here, MyPoseComponent has a class-wide id given to it by the database\r\nauto *comp = someEntity.ComponentMutable<gazebo::components::MyPoseComponent>();\r\n\r\n// .gazebo.components.Pose3d swapped for igntion::math::Pose3d type\r\ncomp->Pose().Pos().X() = 5;\r\ncomp->Pose().Rot().W() = 1.0f;\r\n\r\n// ParentFrame string became a method that returns a reference\r\ncomp->ParentFrame() = \"my_frame\";\r\nstd::cout << comp->ParentFrame(); // \"my_frame\"\r\n```\r\n\r\nNotes/Limitations on generation from protobuf files:\r\n\r\n* must have exactly one top-level message per proto file\r\n* can import other proto files as long as they have exactly one top-level message\r\n* can use enumerations as long as they're nested in a message\r\n* Vector3d, quaternion, matrix3d, and Pose are replaced with ignition::math types in API\r\n\r\n\r\nTo-do in the future\r\n\r\n* Make components serializable (Shouldn't be too hard, they're defined as protobuf messages)\r\n* Do the cool things that need serializable components (Multiple PCs powering one simulation, component viewer, etc)\r\n\r\n\r\n## Generated Code ##\r\n\r\n~~https://bitbucket.org/repo/baqryA7/images/2722483835-generated_files.png~~\r\n\r\nGiven a protobuf file called `Pose.proto`, the protoc plugin will generate these files:\r\n\r\n* `Pose.api.hh`\r\n    * Has Api class called `Pose` using PIMPL pattern\r\n    * Api class inherits from `gazebo::ecs::ComponentAPI`\r\n    * This is the only header file that gets installed\r\n* `Pose.api.cc`\r\n    * Definitions for generated API class\r\n* `Pose.storage.hh`\r\n    * Has storage class called `PoseStorage`\r\n* ~~Pose.factory.hh~~\r\n    * ~~Has a factory class with methods for constructing/destructing API and Storage classes~~\r\n    * **Update** Removed factory, component itself is now a plugin\r\n* ~~Pose.factory.cc~~\r\n    * ~~Registers plugin of type gazebo::ecs::ComponentFactory~~\r\n    * **Update** Removed\r\n\r\n~~https://bitbucket.org/repo/baqryA7/images/3425815260-libgazboComponentXIncludes.png~~\r\n\r\nThe generated files get built into a single plugin library called `libGazeboComponentPose.so`. Loading this library gives an instance of ~~ComponentFactory~~ `Component`, which has methods that allow `gazebo::ecs::EntityComponentDatabase` to store the component without knowing it's type.\r\n\r\n~~https://bitbucket.org/repo/baqryA7/images/1871514051-database_pimpl.png~~\r\n\r\n**Update**  Components are a normal PIMPL class. The optimization of allowing the private implementations to be constructed adjacent to each other was removed because it is tricky to make component libraries depend on each other properly. Also I missed something important: alignment.\r\n~~Unlike a normal PIMPL class, the private implementation isn't allocated in some random place on the heap. The database will use the factory to construct them adjacent in memory. When a user asks for a component on an entity, they get an instance of the API class constructed with a reference to storage inside of the database. This layout means fewer cache misses when a system does work with components because the storage for that type of component is tightly packed.~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/36/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:76cc5fad2e63%0D458110f786c9?from_pullrequest_id=36"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/36/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/36.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/36/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/36/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/36"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/36/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:76cc5fad2e63%0D458110f786c9?from_pullrequest_id=36"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/36/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/36/statuses_page=1.json"}}, "title": "Components defined by protobuf files", "close_source_branch": false, "type": "pullrequest", "id": 36, "destination": {"commit": {"hash": "458110f786c9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/458110f786c9.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/458110f786c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-06-10T00:11:40.836385+00:00", "summary": {"raw": "**Update** components have been simplified to solve a liking issue. I also fixed likely visibility issues with components on windows after reading  PRs/issues by @traversaro [here](https://bitbucket.org/osrf/gazebo/pull-requests/2738).\r\n\r\nThis feature is split into two pull requests. This pull request is the code to generate c++ code from protobuf files using a protobuf compiler plugin. The integration of this with the rest of the code is in pull request #37.\r\n\r\nThis is a redesign of components. The goal for this pull request is to offer these benefits\r\n\r\n* No use of RTTI #29\r\n* Components use PIMPL #25\r\n\r\nWithout losing these benefits:\r\n\r\n* New components come from plugins without recompiling the database\r\n* ~~Component data can be stored adjacent in memory~~\r\n    * **Update** Components are now normal PIMPL classes. I dropped this optimization in favor of working code now.\r\n* Components have convenient `ignition::math` types\r\n\r\nAnd with a path towards these features in the future:\r\n\r\n* Components are serializable\r\n    * Create a component viewer #19\r\n    * Run ECS on different systems #18 \r\n\r\nA protobuf compiler plugin generates c++ code for components. A developer will write a protobuf message, invoke a cmake macro to turn it into a component, and use the generated API.\r\n\r\nFor example this protobuf message\r\n\r\n```\r\nsyntax = \"proto2\";\r\n\r\npackage gazebo.components;\r\n\r\nimport \"gazebo/components/Pose3d.proto\";\r\n\r\nmessage MyPoseComponent\r\n{\r\n  optional string ParentFrame = 1;\r\n  optional Pose3d Pose = 3;\r\n}\r\n```\r\n\r\nWould be used like this:\r\n```\r\n// Component API files end in \".api.hh\"\r\n#include \"gazebo/components/MyPoseComponent.api.hh\"\r\n// ...\r\n// No RTTI being used here, MyPoseComponent has a class-wide id given to it by the database\r\nauto *comp = someEntity.ComponentMutable<gazebo::components::MyPoseComponent>();\r\n\r\n// .gazebo.components.Pose3d swapped for igntion::math::Pose3d type\r\ncomp->Pose().Pos().X() = 5;\r\ncomp->Pose().Rot().W() = 1.0f;\r\n\r\n// ParentFrame string became a method that returns a reference\r\ncomp->ParentFrame() = \"my_frame\";\r\nstd::cout << comp->ParentFrame(); // \"my_frame\"\r\n```\r\n\r\nNotes/Limitations on generation from protobuf files:\r\n\r\n* must have exactly one top-level message per proto file\r\n* can import other proto files as long as they have exactly one top-level message\r\n* can use enumerations as long as they're nested in a message\r\n* Vector3d, quaternion, matrix3d, and Pose are replaced with ignition::math types in API\r\n\r\n\r\nTo-do in the future\r\n\r\n* Make components serializable (Shouldn't be too hard, they're defined as protobuf messages)\r\n* Do the cool things that need serializable components (Multiple PCs powering one simulation, component viewer, etc)\r\n\r\n\r\n## Generated Code ##\r\n\r\n~~https://bitbucket.org/repo/baqryA7/images/2722483835-generated_files.png~~\r\n\r\nGiven a protobuf file called `Pose.proto`, the protoc plugin will generate these files:\r\n\r\n* `Pose.api.hh`\r\n    * Has Api class called `Pose` using PIMPL pattern\r\n    * Api class inherits from `gazebo::ecs::ComponentAPI`\r\n    * This is the only header file that gets installed\r\n* `Pose.api.cc`\r\n    * Definitions for generated API class\r\n* `Pose.storage.hh`\r\n    * Has storage class called `PoseStorage`\r\n* ~~Pose.factory.hh~~\r\n    * ~~Has a factory class with methods for constructing/destructing API and Storage classes~~\r\n    * **Update** Removed factory, component itself is now a plugin\r\n* ~~Pose.factory.cc~~\r\n    * ~~Registers plugin of type gazebo::ecs::ComponentFactory~~\r\n    * **Update** Removed\r\n\r\n~~https://bitbucket.org/repo/baqryA7/images/3425815260-libgazboComponentXIncludes.png~~\r\n\r\nThe generated files get built into a single plugin library called `libGazeboComponentPose.so`. Loading this library gives an instance of ~~ComponentFactory~~ `Component`, which has methods that allow `gazebo::ecs::EntityComponentDatabase` to store the component without knowing it's type.\r\n\r\n~~https://bitbucket.org/repo/baqryA7/images/1871514051-database_pimpl.png~~\r\n\r\n**Update**  Components are a normal PIMPL class. The optimization of allowing the private implementations to be constructed adjacent to each other was removed because it is tricky to make component libraries depend on each other properly. Also I missed something important: alignment.\r\n~~Unlike a normal PIMPL class, the private implementation isn't allocated in some random place on the heap. The database will use the factory to construct them adjacent in memory. When a user asks for a component on an entity, they get an instance of the API class constructed with a reference to storage inside of the database. This layout means fewer cache misses when a system does work with components because the storage for that type of component is tightly packed.~~", "markup": "markdown", "html": "<p><strong>Update</strong> components have been simplified to solve a liking issue. I also fixed likely visibility issues with components on windows after reading  PRs/issues by @traversaro <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2738\" rel=\"nofollow\">here</a>.</p>\n<p>This feature is split into two pull requests. This pull request is the code to generate c++ code from protobuf files using a protobuf compiler plugin. The integration of this with the rest of the code is in <a href=\"#!/osrf/gazebo_experimental/pull-requests/37/wip-components-pimpl-integration\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #37</a>.</p>\n<p>This is a redesign of components. The goal for this pull request is to offer these benefits</p>\n<ul>\n<li>No use of RTTI <a href=\"#!/osrf/gazebo_experimental/issues/29/determine-if-typeid-works-accross-dll\" rel=\"nofollow\" title=\"Determine if typeid works accross DLL boundaries on windows\" class=\"ap-connect-link\">#29</a></li>\n<li>Components use PIMPL <a href=\"#!/osrf/gazebo_experimental/issues/25/components-should-use-pimpl-pattern-to\" rel=\"nofollow\" title=\"Components should use PIMPL pattern to avoid ABI breakage during updates\" class=\"ap-connect-link\">#25</a></li>\n</ul>\n<p>Without losing these benefits:</p>\n<ul>\n<li>New components come from plugins without recompiling the database</li>\n<li><del>Component data can be stored adjacent in memory</del><ul>\n<li><strong>Update</strong> Components are now normal PIMPL classes. I dropped this optimization in favor of working code now.</li>\n</ul>\n</li>\n<li>Components have convenient <code>ignition::math</code> types</li>\n</ul>\n<p>And with a path towards these features in the future:</p>\n<ul>\n<li>Components are serializable<ul>\n<li>Create a component viewer <a href=\"#!/osrf/gazebo_experimental/issues/19/create-viewer-for-viewing-all-entities-and\" rel=\"nofollow\" title=\"Create viewer for viewing all entities and components\" class=\"ap-connect-link\">#19</a></li>\n<li>Run ECS on different systems #18 </li>\n</ul>\n</li>\n</ul>\n<p>A protobuf compiler plugin generates c++ code for components. A developer will write a protobuf message, invoke a cmake macro to turn it into a component, and use the generated API.</p>\n<p>For example this protobuf message</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">syntax</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;proto2&quot;</span><span class=\"p\">;</span>\n\n<span class=\"n\">package</span> <span class=\"n\">gazebo</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"s2\">&quot;gazebo/components/Pose3d.proto&quot;</span><span class=\"p\">;</span>\n\n<span class=\"n\">message</span> <span class=\"n\">MyPoseComponent</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">optional</span> <span class=\"n\">string</span> <span class=\"n\">ParentFrame</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"n\">optional</span> <span class=\"n\">Pose3d</span> <span class=\"n\">Pose</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Would be used like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// Component API files end in &quot;.api.hh&quot;</span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&quot;gazebo/components/MyPoseComponent.api.hh&quot;</span><span class=\"cp\"></span>\n<span class=\"c1\">// ...</span>\n<span class=\"c1\">// No RTTI being used here, MyPoseComponent has a class-wide id given to it by the database</span>\n<span class=\"k\">auto</span> <span class=\"o\">*</span><span class=\"n\">comp</span> <span class=\"o\">=</span> <span class=\"n\">someEntity</span><span class=\"p\">.</span><span class=\"n\">ComponentMutable</span><span class=\"o\">&lt;</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">components</span><span class=\"o\">::</span><span class=\"n\">MyPoseComponent</span><span class=\"o\">&gt;</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// .gazebo.components.Pose3d swapped for igntion::math::Pose3d type</span>\n<span class=\"n\">comp</span><span class=\"o\">-&gt;</span><span class=\"n\">Pose</span><span class=\"p\">().</span><span class=\"n\">Pos</span><span class=\"p\">().</span><span class=\"n\">X</span><span class=\"p\">()</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">;</span>\n<span class=\"n\">comp</span><span class=\"o\">-&gt;</span><span class=\"n\">Pose</span><span class=\"p\">().</span><span class=\"n\">Rot</span><span class=\"p\">().</span><span class=\"n\">W</span><span class=\"p\">()</span> <span class=\"o\">=</span> <span class=\"mf\">1.0f</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// ParentFrame string became a method that returns a reference</span>\n<span class=\"n\">comp</span><span class=\"o\">-&gt;</span><span class=\"n\">ParentFrame</span><span class=\"p\">()</span> <span class=\"o\">=</span> <span class=\"s\">&quot;my_frame&quot;</span><span class=\"p\">;</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">comp</span><span class=\"o\">-&gt;</span><span class=\"n\">ParentFrame</span><span class=\"p\">();</span> <span class=\"c1\">// &quot;my_frame&quot;</span>\n</pre></div>\n\n\n<p>Notes/Limitations on generation from protobuf files:</p>\n<ul>\n<li>must have exactly one top-level message per proto file</li>\n<li>can import other proto files as long as they have exactly one top-level message</li>\n<li>can use enumerations as long as they're nested in a message</li>\n<li>Vector3d, quaternion, matrix3d, and Pose are replaced with ignition::math types in API</li>\n</ul>\n<p>To-do in the future</p>\n<ul>\n<li>Make components serializable (Shouldn't be too hard, they're defined as protobuf messages)</li>\n<li>Do the cool things that need serializable components (Multiple PCs powering one simulation, component viewer, etc)</li>\n</ul>\n<h2 id=\"markdown-header-generated-code\">Generated Code</h2>\n<p><del><a href=\"data/bitbucket.org/repo/baqryA7/images/2722483835-generated_files.png\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/repo/baqryA7/images/2722483835-generated_files.png</a></del></p>\n<p>Given a protobuf file called <code>Pose.proto</code>, the protoc plugin will generate these files:</p>\n<ul>\n<li><code>Pose.api.hh</code><ul>\n<li>Has Api class called <code>Pose</code> using PIMPL pattern</li>\n<li>Api class inherits from <code>gazebo::ecs::ComponentAPI</code></li>\n<li>This is the only header file that gets installed</li>\n</ul>\n</li>\n<li><code>Pose.api.cc</code><ul>\n<li>Definitions for generated API class</li>\n</ul>\n</li>\n<li><code>Pose.storage.hh</code><ul>\n<li>Has storage class called <code>PoseStorage</code></li>\n</ul>\n</li>\n<li><del>Pose.factory.hh</del><ul>\n<li><del>Has a factory class with methods for constructing/destructing API and Storage classes</del></li>\n<li><strong>Update</strong> Removed factory, component itself is now a plugin</li>\n</ul>\n</li>\n<li><del>Pose.factory.cc</del><ul>\n<li><del>Registers plugin of type gazebo::ecs::ComponentFactory</del></li>\n<li><strong>Update</strong> Removed</li>\n</ul>\n</li>\n</ul>\n<p><del><a href=\"data/bitbucket.org/repo/baqryA7/images/3425815260-libgazboComponentXIncludes.png\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/repo/baqryA7/images/3425815260-libgazboComponentXIncludes.png</a></del></p>\n<p>The generated files get built into a single plugin library called <code>libGazeboComponentPose.so</code>. Loading this library gives an instance of <del>ComponentFactory</del> <code>Component</code>, which has methods that allow <code>gazebo::ecs::EntityComponentDatabase</code> to store the component without knowing it's type.</p>\n<p><del><a href=\"data/bitbucket.org/repo/baqryA7/images/1871514051-database_pimpl.png\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/repo/baqryA7/images/1871514051-database_pimpl.png</a></del></p>\n<p><strong>Update</strong>  Components are a normal PIMPL class. The optimization of allowing the private implementations to be constructed adjacent to each other was removed because it is tricky to make component libraries depend on each other properly. Also I missed something important: alignment.\n<del>Unlike a normal PIMPL class, the private implementation isn't allocated in some random place on the heap. The database will use the factory to construct them adjacent in memory. When a user asks for a component on an entity, they get an instance of the API class constructed with a reference to storage inside of the database. This layout means fewer cache misses when a system does work with components because the storage for that type of component is tightly packed.</del></p>", "type": "rendered"}, "source": {"commit": {"hash": "76cc5fad2e63", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/76cc5fad2e63.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/76cc5fad2e63"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl"}}, "comment_count": 38, "state": "DECLINED", "task_count": 0, "reason": "Will be replaced by changes on nate_tweaks", "updated_on": "2017-08-01T20:35:58.018368+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "**Update** back to [WIP] due to changes made to pull request #36\r\n\r\nThis pull request is the integration of the new component design into the existing code. It requires pull request #36.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/37/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:786402f94128%0D76cc5fad2e63?from_pullrequest_id=37"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/37/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/37.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/37/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/37/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/37"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/37/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:786402f94128%0D76cc5fad2e63?from_pullrequest_id=37"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/37/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/37/statuses_page=1.json"}}, "title": "[WIP] Components pimpl integration", "close_source_branch": false, "type": "pullrequest", "id": 37, "destination": {"commit": {"hash": "76cc5fad2e63", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/76cc5fad2e63.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/76cc5fad2e63"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl"}}, "created_on": "2017-06-16T23:10:39.997239+00:00", "summary": {"raw": "**Update** back to [WIP] due to changes made to pull request #36\r\n\r\nThis pull request is the integration of the new component design into the existing code. It requires pull request #36.", "markup": "markdown", "html": "<p><strong>Update</strong> back to [WIP] due to changes made to <a href=\"#!/osrf/gazebo_experimental/pull-requests/36/components-defined-by-protobuf-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #36</a></p>\n<p>This pull request is the integration of the new component design into the existing code. It requires <a href=\"#!/osrf/gazebo_experimental/pull-requests/36/components-defined-by-protobuf-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #36</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "Will be replaced by changes on nate_tweaks", "updated_on": "2017-08-01T20:36:30.638138+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/38/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:258a12e77385%0Db0bfa9550ef2?from_pullrequest_id=38"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/38/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/38.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/38/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/38/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/38"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/38/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:258a12e77385%0Db0bfa9550ef2?from_pullrequest_id=38"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/38/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/38/statuses_page=1.json"}}, "title": "Fix componentizer linking errors on OSX", "close_source_branch": true, "type": "pullrequest", "id": 38, "destination": {"commit": {"hash": "b0bfa9550ef2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b0bfa9550ef2.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b0bfa9550ef2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-06-28T21:05:44.830798+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "ef671ba0214f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ef671ba0214f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ef671ba0214f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "osx_component"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-28T22:09:15.033892+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "258a12e77385", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/258a12e77385.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/258a12e77385"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"description": "This makes the destructor on `ecs::system` virtual so the derived class destructors will be called on ECS systems.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/39/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:8540b25fde28%0D258a12e77385?from_pullrequest_id=39"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/39/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/39.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/39/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/39/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/39"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/39/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:8540b25fde28%0D258a12e77385?from_pullrequest_id=39"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/39/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/39/statuses_page=1.json"}}, "title": "System Virtual destructor", "close_source_branch": true, "type": "pullrequest", "id": 39, "destination": {"commit": {"hash": "258a12e77385", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/258a12e77385.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/258a12e77385"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-06-29T21:48:54.448930+00:00", "summary": {"raw": "This makes the destructor on `ecs::system` virtual so the derived class destructors will be called on ECS systems.", "markup": "markdown", "html": "<p>This makes the destructor on <code>ecs::system</code> virtual so the derived class destructors will be called on ECS systems.</p>", "type": "rendered"}, "source": {"commit": {"hash": "223f13738441", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/223f13738441.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/223f13738441"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "virtual_destructor"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-30T16:46:08.473730+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "8540b25fde28", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/8540b25fde28.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/8540b25fde28"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This moves the componentizer destructor to a separate source file to avoid a duplicate definition linker error when multiple files include `Componentizer.hh`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/40/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:368d0429ec2c%0D8540b25fde28?from_pullrequest_id=40"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/40/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/40.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/40/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/40/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/40"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/40/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:368d0429ec2c%0D8540b25fde28?from_pullrequest_id=40"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/40/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/40/statuses_page=1.json"}}, "title": "Move componentizer destructor", "close_source_branch": true, "type": "pullrequest", "id": 40, "destination": {"commit": {"hash": "8540b25fde28", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/8540b25fde28.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/8540b25fde28"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-07-03T16:23:42.056397+00:00", "summary": {"raw": "This moves the componentizer destructor to a separate source file to avoid a duplicate definition linker error when multiple files include `Componentizer.hh`", "markup": "markdown", "html": "<p>This moves the componentizer destructor to a separate source file to avoid a duplicate definition linker error when multiple files include <code>Componentizer.hh</code></p>", "type": "rendered"}, "source": {"commit": {"hash": "81881e4cd5ce", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/81881e4cd5ce.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/81881e4cd5ce"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "componentizer_duplicate_definition"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-03T16:24:00.345062+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "368d0429ec2c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/368d0429ec2c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/368d0429ec2c"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/41/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:aab2f615386e%0D786402f94128?from_pullrequest_id=41"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/41/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:aab2f615386e%0D786402f94128?from_pullrequest_id=41"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/41/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/statuses_page=1.json"}}, "title": "Bullet physics system", "close_source_branch": false, "type": "pullrequest", "id": 41, "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "created_on": "2017-07-03T19:28:18.480188+00:00", "summary": {"raw": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "markup": "markdown", "html": "<p>This pull request depends on <a href=\"#!/osrf/gazebo_experimental/pull-requests/37/wip-components-pimpl-integration\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #37</a> and <a href=\"#!/osrf/gazebo_experimental/pull-requests/36/components-defined-by-protobuf-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #36</a>.</p>\n<p>It makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.</p>\n<h2 id=\"markdown-header-changes\">Changes</h2>\n<ul>\n<li>Pose component<ul>\n<li>Removed <code>ParentFrame</code>/<code>DefinesFrame</code><ul>\n<li>These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.</li>\n</ul>\n</li>\n<li>Added <code>AttachedTo</code><ul>\n<li>Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (<code>AttachedTo = NO_ENTITY</code>). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.</li>\n</ul>\n</li>\n<li>Renamed <code>Origin</code> to <code>Transform</code></li>\n</ul>\n</li>\n<li>Added PoseHelper header<ul>\n<li>This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.</li>\n</ul>\n</li>\n<li>Geometry Component<ul>\n<li>One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.</li>\n</ul>\n</li>\n<li>Collidable Component<ul>\n<li>Removed <code>GroupId</code></li>\n<li><code>Collidable</code> and <code>Geometry</code> are now together on the same entity. Previously <code>Collidable</code> was on one entity, and <code>Geometry</code> was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.</li>\n</ul>\n</li>\n<li>ECS Database<ul>\n<li>If something calls <code>AddComponent</code> twice, the second time it gets the same component previously added instead of an error.</li>\n</ul>\n</li>\n<li>Added a world with a bunch of spheres falling on a static box</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "aab2f615386e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/aab2f615386e.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/aab2f615386e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "Pausing until after restructuring work is complete. See issue #34", "updated_on": "2017-08-14T15:10:41.373846+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/42/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:715f4f50e32d%0D6e1326f5d59c?from_pullrequest_id=42"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/42/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/42.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/42/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/42/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/42"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/42/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:715f4f50e32d%0D6e1326f5d59c?from_pullrequest_id=42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/42/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/42/statuses_page=1.json"}}, "title": "Dependencies' branches on README", "close_source_branch": true, "type": "pullrequest", "id": 42, "destination": {"commit": {"hash": "6e1326f5d59c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/6e1326f5d59c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/6e1326f5d59c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-07-05T17:50:03.593860+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "6eeaf9fc86b1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/6eeaf9fc86b1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/6eeaf9fc86b1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "readme_branches"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-05T20:12:43.490870+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "715f4f50e32d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/715f4f50e32d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/715f4f50e32d"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "@nkoenig mentioned something like this idea in the gazebo meeting today. I think it was the idea of returning a per-component handle instead of a reference to the component. This PR adds one handle for accessing all entities and components. The components are accessed by reference, but they're guaranteed to be valid while the handle is alive. It depends on pull request #36 and pull request #37.\r\n\r\nBefore some code accesses entities/components it must get a handle by calling `manager.Handle()`. As long as this handle is alive the entities/components won't be updated by the database. This means they're safe to access/modify from other threads.\r\n\r\nFor example, say a GUI plugin needs to move an entity and it has a pointer to the manager. The GUI plugin would get a handle from the manager, modify the pose component on the entity to move, then let the handle go out of scope.\r\n\r\nThis PR adds `Manager::Handle()` which returns an `std::unique_ptr<DataHandle>`. These methods used to be on `Manager` but are now on `DataHandle`: `CreateEntity()`, `DeleteEntity()`, `SimulationTime()`, `SimulationTime(_newTime)`, `Entity()`. The database has a new method `BlockUpdate(bool _doBlock)`. It maintains a count of how many handles are blocking the update. `DataHandle` calls this method in it's constructor to block the update, and again in it's destructor to stop blocking the update.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/43/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f26ae9ab19ae%0D786402f94128?from_pullrequest_id=43"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/43/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/43"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f26ae9ab19ae%0D786402f94128?from_pullrequest_id=43"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/43/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43/statuses_page=1.json"}}, "title": "Manager handle to access entities and components", "close_source_branch": false, "type": "pullrequest", "id": 43, "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "created_on": "2017-07-07T01:48:53.929928+00:00", "summary": {"raw": "@nkoenig mentioned something like this idea in the gazebo meeting today. I think it was the idea of returning a per-component handle instead of a reference to the component. This PR adds one handle for accessing all entities and components. The components are accessed by reference, but they're guaranteed to be valid while the handle is alive. It depends on pull request #36 and pull request #37.\r\n\r\nBefore some code accesses entities/components it must get a handle by calling `manager.Handle()`. As long as this handle is alive the entities/components won't be updated by the database. This means they're safe to access/modify from other threads.\r\n\r\nFor example, say a GUI plugin needs to move an entity and it has a pointer to the manager. The GUI plugin would get a handle from the manager, modify the pose component on the entity to move, then let the handle go out of scope.\r\n\r\nThis PR adds `Manager::Handle()` which returns an `std::unique_ptr<DataHandle>`. These methods used to be on `Manager` but are now on `DataHandle`: `CreateEntity()`, `DeleteEntity()`, `SimulationTime()`, `SimulationTime(_newTime)`, `Entity()`. The database has a new method `BlockUpdate(bool _doBlock)`. It maintains a count of how many handles are blocking the update. `DataHandle` calls this method in it's constructor to block the update, and again in it's destructor to stop blocking the update.", "markup": "markdown", "html": "<p>@nkoenig mentioned something like this idea in the gazebo meeting today. I think it was the idea of returning a per-component handle instead of a reference to the component. This PR adds one handle for accessing all entities and components. The components are accessed by reference, but they're guaranteed to be valid while the handle is alive. It depends on <a href=\"#!/osrf/gazebo_experimental/pull-requests/36/components-defined-by-protobuf-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #36</a> and <a href=\"#!/osrf/gazebo_experimental/pull-requests/37/wip-components-pimpl-integration\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #37</a>.</p>\n<p>Before some code accesses entities/components it must get a handle by calling <code>manager.Handle()</code>. As long as this handle is alive the entities/components won't be updated by the database. This means they're safe to access/modify from other threads.</p>\n<p>For example, say a GUI plugin needs to move an entity and it has a pointer to the manager. The GUI plugin would get a handle from the manager, modify the pose component on the entity to move, then let the handle go out of scope.</p>\n<p>This PR adds <code>Manager::Handle()</code> which returns an <code>std::unique_ptr&lt;DataHandle&gt;</code>. These methods used to be on <code>Manager</code> but are now on <code>DataHandle</code>: <code>CreateEntity()</code>, <code>DeleteEntity()</code>, <code>SimulationTime()</code>, <code>SimulationTime(_newTime)</code>, <code>Entity()</code>. The database has a new method <code>BlockUpdate(bool _doBlock)</code>. It maintains a count of how many handles are blocking the update. <code>DataHandle</code> calls this method in it's constructor to block the update, and again in it's destructor to stop blocking the update.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f26ae9ab19ae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f26ae9ab19ae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f26ae9ab19ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "manager_handle"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "Revive after restructuring work. See issue #35", "updated_on": "2017-08-14T15:11:38.016977+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "A suggestion on how to solve issue #32\r\n\r\n* Add `uninstall` target (copied from Gazebo)\r\n\r\n* Install built-in plugins into `<lib install>/gazebo-0/plugins`\r\n\r\n* Other libraries (currently `libGazeboUtil` and `libGazeboECS`) are still installed directly under `<lib>`\r\n\r\n* This requires the latest branch of ignition gui\r\n\r\n* There is only one environment variable to define the paths for all plugins to be used by Gazebo, including plugins for ignition libraries.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/44/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:458110f786c9%0D553c3830d8e3?from_pullrequest_id=44"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/44/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/44.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/44/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/44/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/44"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/44/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:458110f786c9%0D553c3830d8e3?from_pullrequest_id=44"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/44/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/44/statuses_page=1.json"}}, "title": "[Ready for review] Install plugins where they can be found", "close_source_branch": true, "type": "pullrequest", "id": 44, "destination": {"commit": {"hash": "553c3830d8e3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/553c3830d8e3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/553c3830d8e3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-07-18T22:43:21.022490+00:00", "summary": {"raw": "A suggestion on how to solve issue #32\r\n\r\n* Add `uninstall` target (copied from Gazebo)\r\n\r\n* Install built-in plugins into `<lib install>/gazebo-0/plugins`\r\n\r\n* Other libraries (currently `libGazeboUtil` and `libGazeboECS`) are still installed directly under `<lib>`\r\n\r\n* This requires the latest branch of ignition gui\r\n\r\n* There is only one environment variable to define the paths for all plugins to be used by Gazebo, including plugins for ignition libraries.", "markup": "markdown", "html": "<p>A suggestion on how to solve issue <a href=\"#!/osrf/gazebo_experimental/issues/32/install-official-plugins-in-places-where\" rel=\"nofollow\" title=\"Install official plugins in places where they can be found\" class=\"ap-connect-link\"><s>#32</s></a></p>\n<ul>\n<li>\n<p>Add <code>uninstall</code> target (copied from Gazebo)</p>\n</li>\n<li>\n<p>Install built-in plugins into <code>&lt;lib install&gt;/gazebo-0/plugins</code></p>\n</li>\n<li>\n<p>Other libraries (currently <code>libGazeboUtil</code> and <code>libGazeboECS</code>) are still installed directly under <code>&lt;lib&gt;</code></p>\n</li>\n<li>\n<p>This requires the latest branch of ignition gui</p>\n</li>\n<li>\n<p>There is only one environment variable to define the paths for all plugins to be used by Gazebo, including plugins for ignition libraries.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "1224e3aeba19", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/1224e3aeba19.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/1224e3aeba19"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "install_tweaks"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-27T17:19:21.227686+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "458110f786c9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/458110f786c9.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/458110f786c9"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "First revision of a time panel, builds on top of pull request #44 but I can make a new branch off default if needed.\r\n\r\n## Features\r\n\r\n* Add a `TimeSystem` which handles `TimeInfo` components\r\n* `TimeSystem` publishes time on `/world_stats`\r\n* `TimeSystem` offers a service on `/world_control`\r\n* `PhysicsSystem` updates the `TimeInfo` component\r\n* Gazebo will use a `TimePanel` plugin provided by Ignition GUI\r\n* Added real time to `ecs::Manager`\r\n\r\n![timepanel.gif](data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif)\r\n\r\n## Known issues\r\n\r\n* Play / pause seems to work fine just with the diagnostics window, but if I run `dummy_demo` and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.\r\n\r\n* There are no tests because QTest will have to be integrated first, still need to figure out how that will work.\r\n\r\n* Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.\r\n\r\n## Questions\r\n\r\nI didn't want to go too far before getting feedback on this. Some questions:\r\n\r\n* ~~I assume the `ecs::Manager` is the authority on time, should it be publishing on `/world_stats` instead of getting this info from diagnostics?~~\r\n* ~~Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?~~\r\n* ~~Was there already a source of real time which I didn't find?~~\r\n\r\nAny other tips which could clarify how reset and step could be implemented are very welcome :smile:", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/45/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f3d99ee37b2d%0D466ee110cf18?from_pullrequest_id=45"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/45/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/45"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f3d99ee37b2d%0D466ee110cf18?from_pullrequest_id=45"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/45/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/statuses_page=1.json"}}, "title": "[Read for review] Time system", "close_source_branch": false, "type": "pullrequest", "id": 45, "destination": {"commit": {"hash": "466ee110cf18", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/466ee110cf18.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/466ee110cf18"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-07-19T19:15:58.383075+00:00", "summary": {"raw": "First revision of a time panel, builds on top of pull request #44 but I can make a new branch off default if needed.\r\n\r\n## Features\r\n\r\n* Add a `TimeSystem` which handles `TimeInfo` components\r\n* `TimeSystem` publishes time on `/world_stats`\r\n* `TimeSystem` offers a service on `/world_control`\r\n* `PhysicsSystem` updates the `TimeInfo` component\r\n* Gazebo will use a `TimePanel` plugin provided by Ignition GUI\r\n* Added real time to `ecs::Manager`\r\n\r\n![timepanel.gif](data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif)\r\n\r\n## Known issues\r\n\r\n* Play / pause seems to work fine just with the diagnostics window, but if I run `dummy_demo` and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.\r\n\r\n* There are no tests because QTest will have to be integrated first, still need to figure out how that will work.\r\n\r\n* Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.\r\n\r\n## Questions\r\n\r\nI didn't want to go too far before getting feedback on this. Some questions:\r\n\r\n* ~~I assume the `ecs::Manager` is the authority on time, should it be publishing on `/world_stats` instead of getting this info from diagnostics?~~\r\n* ~~Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?~~\r\n* ~~Was there already a source of real time which I didn't find?~~\r\n\r\nAny other tips which could clarify how reset and step could be implemented are very welcome :smile:", "markup": "markdown", "html": "<p>First revision of a time panel, builds on top of <a href=\"#!/osrf/gazebo_experimental/pull-requests/44/ready-for-review-install-plugins-where\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #44</a> but I can make a new branch off default if needed.</p>\n<h2 id=\"markdown-header-features\">Features</h2>\n<ul>\n<li>Add a <code>TimeSystem</code> which handles <code>TimeInfo</code> components</li>\n<li><code>TimeSystem</code> publishes time on <code>/world_stats</code></li>\n<li><code>TimeSystem</code> offers a service on <code>/world_control</code></li>\n<li><code>PhysicsSystem</code> updates the <code>TimeInfo</code> component</li>\n<li>Gazebo will use a <code>TimePanel</code> plugin provided by Ignition GUI</li>\n<li>Added real time to <code>ecs::Manager</code></li>\n</ul>\n<p><img alt=\"timepanel.gif\" src=\"data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif\" /></p>\n<h2 id=\"markdown-header-known-issues\">Known issues</h2>\n<ul>\n<li>\n<p>Play / pause seems to work fine just with the diagnostics window, but if I run <code>dummy_demo</code> and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.</p>\n</li>\n<li>\n<p>There are no tests because QTest will have to be integrated first, still need to figure out how that will work.</p>\n</li>\n<li>\n<p>Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.</p>\n</li>\n</ul>\n<h2 id=\"markdown-header-questions\">Questions</h2>\n<p>I didn't want to go too far before getting feedback on this. Some questions:</p>\n<ul>\n<li><del>I assume the <code>ecs::Manager</code> is the authority on time, should it be publishing on <code>/world_stats</code> instead of getting this info from diagnostics?</del></li>\n<li><del>Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?</del></li>\n<li><del>Was there already a source of real time which I didn't find?</del></li>\n</ul>\n<p>Any other tips which could clarify how reset and step could be implemented are very welcome <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f604.png\" alt=\"\ud83d\ude04\" title=\":smile:\" data-emoji-short-name=\":smile:\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "f3d99ee37b2d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f3d99ee37b2d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f3d99ee37b2d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "time_panel"}}, "comment_count": 16, "state": "DECLINED", "task_count": 0, "reason": "Putting this PR on hold until after a bit of restructuring. See issue #33", "updated_on": "2017-08-14T15:09:35.578390+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "The `GuiDisplayImage` plugin was ported to Ignition GUI and made configurable, so we can use that one here.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/46/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:466ee110cf18%0D3c47be3c6b4f?from_pullrequest_id=46"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/46/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/46.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/46/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/46/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/46"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/46/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:466ee110cf18%0D3c47be3c6b4f?from_pullrequest_id=46"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/46/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/46/statuses_page=1.json"}}, "title": "Use Ignition GUI's image display plugin", "close_source_branch": true, "type": "pullrequest", "id": 46, "destination": {"commit": {"hash": "3c47be3c6b4f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/3c47be3c6b4f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/3c47be3c6b4f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-08-04T22:46:41.670711+00:00", "summary": {"raw": "The `GuiDisplayImage` plugin was ported to Ignition GUI and made configurable, so we can use that one here.", "markup": "markdown", "html": "<p>The <code>GuiDisplayImage</code> plugin was ported to Ignition GUI and made configurable, so we can use that one here.</p>", "type": "rendered"}, "source": {"commit": {"hash": "101d1d73ea81", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/101d1d73ea81.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/101d1d73ea81"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "ign_gui_image_display"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-14T15:07:22.379631+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "466ee110cf18", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/466ee110cf18.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/466ee110cf18"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"description": "Otherwise, running `gazebo -v 4` gives this error:\r\n\r\n`[Err] [gazebo_main.cc:123] Failed to load library gazeboRenderSystem`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/47/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:d828f7845f99%0D466ee110cf18?from_pullrequest_id=47"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/47/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/47.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/47/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/47/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/47"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/47/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:d828f7845f99%0D466ee110cf18?from_pullrequest_id=47"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/47/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/47/statuses_page=1.json"}}, "title": "Install render system where Gazebo can find it", "close_source_branch": true, "type": "pullrequest", "id": 47, "destination": {"commit": {"hash": "466ee110cf18", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/466ee110cf18.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/466ee110cf18"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-09-06T21:57:14.004616+00:00", "summary": {"raw": "Otherwise, running `gazebo -v 4` gives this error:\r\n\r\n`[Err] [gazebo_main.cc:123] Failed to load library gazeboRenderSystem`", "markup": "markdown", "html": "<p>Otherwise, running <code>gazebo -v 4</code> gives this error:</p>\n<p><code>[Err] [gazebo_main.cc:123] Failed to load library gazeboRenderSystem</code></p>", "type": "rendered"}, "source": {"commit": {"hash": "02e9a4935463", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/02e9a4935463.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/02e9a4935463"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "system_install_path"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-09-06T22:56:02.055090+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "d828f7845f99", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d828f7845f99.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d828f7845f99"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"description": "Update to use new ign-rendering API - fixes issue #36\r\n\r\nalso isolated all rendering updates to its own thread. This is because the `WorkerPool` introduced in pull request #34 causes updates calls to come from different threads which causes render system to segfault.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/48/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:3d7b4b81f100%0Dd828f7845f99?from_pullrequest_id=48"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/48/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/48.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/48/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/48/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/48"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/48/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:3d7b4b81f100%0Dd828f7845f99?from_pullrequest_id=48"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/48/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/48/statuses_page=1.json"}}, "title": "Fix building RenderSystem and move update calls", "close_source_branch": false, "type": "pullrequest", "id": 48, "destination": {"commit": {"hash": "d828f7845f99", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d828f7845f99.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d828f7845f99"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-09-06T23:47:29.846753+00:00", "summary": {"raw": "Update to use new ign-rendering API - fixes issue #36\r\n\r\nalso isolated all rendering updates to its own thread. This is because the `WorkerPool` introduced in pull request #34 causes updates calls to come from different threads which causes render system to segfault.", "markup": "markdown", "html": "<p>Update to use new ign-rendering API - fixes issue <a href=\"#!/osrf/gazebo_experimental/issues/36/doesnt-build-against-latest-ign-rendering\" rel=\"nofollow\" title=\"Doesn&#39;t build against latest ign-rendering\" class=\"ap-connect-link\">#36</a></p>\n<p>also isolated all rendering updates to its own thread. This is because the <code>WorkerPool</code> introduced in <a href=\"#!/osrf/gazebo_experimental/pull-requests/34/run-ecs-systems-in-parallel\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #34</a> causes updates calls to come from different threads which causes render system to segfault.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3d7b4b81f100", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/3d7b4b81f100.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/3d7b4b81f100"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "rendersystem_update"}}, "comment_count": 1, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2020-04-03T00:50:29.227122+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": null, "closed_by": null}], "page": 1, "size": 48}