{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "links": {"attachments": {"href": "data/repositories/osrf/gazebo_experimental/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/issues/5/watch"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/issues/5/comments_page=1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/issues/5/entities-components-queries-should-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/issues/5/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Entities/Components/Queries should not change until after all systems are updated.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The description of pull request #8 describes another problem with the implementation: removing components invalidates other component pointers. This proposal is to solve the issue by freezing entities and components during the update, and applying any changes after. It would means a copy on write system for components.\r\n\r\n* When an entity is deleted the database will add it to a list to delete, and then delete it after all systems have been updated\r\n* When a component is deleted the database will add it to a list to delete, and then delete it after all systems have been updated\r\n* When a component is modified the database will return a copy of the component at new storage. After all systems are updated the database will overwrite the original storage with the changes.\r\n* When an entity is created the database will add it to a list and to new storage, then copy the storage to the main storage after all systems are updated\r\n* When an entity is deleted or created the queries won't update until after all systems are updated", "markup": "markdown", "html": "<p>The description of <a href=\"#!/osrf/gazebo_experimental/pull-requests/8/fixed-indices-not-being-updated-after\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #8</a> describes another problem with the implementation: removing components invalidates other component pointers. This proposal is to solve the issue by freezing entities and components during the update, and applying any changes after. It would means a copy on write system for components.</p>\n<ul>\n<li>When an entity is deleted the database will add it to a list to delete, and then delete it after all systems have been updated</li>\n<li>When a component is deleted the database will add it to a list to delete, and then delete it after all systems have been updated</li>\n<li>When a component is modified the database will return a copy of the component at new storage. After all systems are updated the database will overwrite the original storage with the changes.</li>\n<li>When an entity is created the database will add it to a list and to new storage, then copy the storage to the main storage after all systems are updated</li>\n<li>When an entity is deleted or created the queries won't update until after all systems are updated</li>\n</ul>", "type": "rendered"}, "assignee": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-04-12T19:08:35.888370+00:00", "milestone": null, "updated_on": "2017-04-14T21:28:27.303963+00:00", "type": "issue", "id": 5}