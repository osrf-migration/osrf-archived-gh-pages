{"rendered": {"description": {"raw": "Solves #5\r\n\r\nEntities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in `EntityComponentDatabase::UpdateBegin()`). This solves the issue of adding/removing a component breaking existing pointers to components.\r\n\r\nSolves #2\r\n\r\nWhen components are created/modified/removed `Entity::IsDifferent<MyComponent>()` will report so during the next time step.\r\n\r\nMisc\r\n\r\n* Added templated methods for convenience to EntityComponentDatabase + updated tests to use them\r\n* Renamed `ComponentTypeInfo::mover` to `copier`\r\n* Fixed Deleted entities not being removed from `EntityQuery`. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)\r\n\r\n**TODO**\r\n\r\n* ~~Report deleted entities after merging pull request #2~~ \r\n* Eliminate unnecessary data copying from dummy physics demo after merging pull request #6", "markup": "markdown", "html": "<p>Solves <a href=\"#!/osrf/gazebo_experimental/issues/5/entities-components-queries-should-not\" rel=\"nofollow\" title=\"Entities/Components/Queries should not change until after all systems are updated.\" class=\"ap-connect-link\"><s>#5</s></a></p>\n<p>Entities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in <code>EntityComponentDatabase::UpdateBegin()</code>). This solves the issue of adding/removing a component breaking existing pointers to components.</p>\n<p>Solves <a href=\"#!/osrf/gazebo_experimental/issues/2/add-method-to-check-if-component-changed\" rel=\"nofollow\" title=\"Add method to check if component changed since last time step\" class=\"ap-connect-link\"><s>#2</s></a></p>\n<p>When components are created/modified/removed <code>Entity::IsDifferent&lt;MyComponent&gt;()</code> will report so during the next time step.</p>\n<p>Misc</p>\n<ul>\n<li>Added templated methods for convenience to EntityComponentDatabase + updated tests to use them</li>\n<li>Renamed <code>ComponentTypeInfo::mover</code> to <code>copier</code></li>\n<li>Fixed Deleted entities not being removed from <code>EntityQuery</code>. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)</li>\n</ul>\n<p><strong>TODO</strong></p>\n<ul>\n<li><del>Report deleted entities after merging <a href=\"#!/osrf/gazebo_experimental/pull-requests/2/added-ability-to-remove-components-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2</a></del> </li>\n<li>Eliminate unnecessary data copying from dummy physics demo after merging <a href=\"#!/osrf/gazebo_experimental/pull-requests/6/adds-demo-with-dummy-physics\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #6</a></li>\n</ul>", "type": "rendered"}, "title": {"raw": "Query if component changed + entities/components/queries are constant during update", "markup": "markdown", "html": "<p>Query if component changed + entities/components/queries are constant during update</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Solves #5\r\n\r\nEntities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in `EntityComponentDatabase::UpdateBegin()`). This solves the issue of adding/removing a component breaking existing pointers to components.\r\n\r\nSolves #2\r\n\r\nWhen components are created/modified/removed `Entity::IsDifferent<MyComponent>()` will report so during the next time step.\r\n\r\nMisc\r\n\r\n* Added templated methods for convenience to EntityComponentDatabase + updated tests to use them\r\n* Renamed `ComponentTypeInfo::mover` to `copier`\r\n* Fixed Deleted entities not being removed from `EntityQuery`. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)\r\n\r\n**TODO**\r\n\r\n* ~~Report deleted entities after merging pull request #2~~ \r\n* Eliminate unnecessary data copying from dummy physics demo after merging pull request #6", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/7/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:b812cadeebd1%0Df492a7e83d4a?from_pullrequest_id=7"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/7/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/7"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:b812cadeebd1%0Df492a7e83d4a?from_pullrequest_id=7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/7/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/7/statuses_page=1.json"}}, "title": "Query if component changed + entities/components/queries are constant during update", "close_source_branch": true, "reviewers": [], "id": 7, "destination": {"commit": {"hash": "f492a7e83d4a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f492a7e83d4a.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f492a7e83d4a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-12T16:54:22.686268+00:00", "summary": {"raw": "Solves #5\r\n\r\nEntities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in `EntityComponentDatabase::UpdateBegin()`). This solves the issue of adding/removing a component breaking existing pointers to components.\r\n\r\nSolves #2\r\n\r\nWhen components are created/modified/removed `Entity::IsDifferent<MyComponent>()` will report so during the next time step.\r\n\r\nMisc\r\n\r\n* Added templated methods for convenience to EntityComponentDatabase + updated tests to use them\r\n* Renamed `ComponentTypeInfo::mover` to `copier`\r\n* Fixed Deleted entities not being removed from `EntityQuery`. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)\r\n\r\n**TODO**\r\n\r\n* ~~Report deleted entities after merging pull request #2~~ \r\n* Eliminate unnecessary data copying from dummy physics demo after merging pull request #6", "markup": "markdown", "html": "<p>Solves <a href=\"#!/osrf/gazebo_experimental/issues/5/entities-components-queries-should-not\" rel=\"nofollow\" title=\"Entities/Components/Queries should not change until after all systems are updated.\" class=\"ap-connect-link\"><s>#5</s></a></p>\n<p>Entities/Components/Queries are unchanging while ECSystems are being updated. All components additions, creations, deletions, and modifications are saved and applied before the ECSystems are updated again (in <code>EntityComponentDatabase::UpdateBegin()</code>). This solves the issue of adding/removing a component breaking existing pointers to components.</p>\n<p>Solves <a href=\"#!/osrf/gazebo_experimental/issues/2/add-method-to-check-if-component-changed\" rel=\"nofollow\" title=\"Add method to check if component changed since last time step\" class=\"ap-connect-link\"><s>#2</s></a></p>\n<p>When components are created/modified/removed <code>Entity::IsDifferent&lt;MyComponent&gt;()</code> will report so during the next time step.</p>\n<p>Misc</p>\n<ul>\n<li>Added templated methods for convenience to EntityComponentDatabase + updated tests to use them</li>\n<li>Renamed <code>ComponentTypeInfo::mover</code> to <code>copier</code></li>\n<li>Fixed Deleted entities not being removed from <code>EntityQuery</code>. They're now removed after one update (so systems have a chance to clean up after entities that no longer match)</li>\n</ul>\n<p><strong>TODO</strong></p>\n<ul>\n<li><del>Report deleted entities after merging <a href=\"#!/osrf/gazebo_experimental/pull-requests/2/added-ability-to-remove-components-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #2</a></del> </li>\n<li>Eliminate unnecessary data copying from dummy physics demo after merging <a href=\"#!/osrf/gazebo_experimental/pull-requests/6/adds-demo-with-dummy-physics\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #6</a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "15eea709a17f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/15eea709a17f.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/15eea709a17f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "was_modified"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-04-14T18:48:44.911224+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}], "reason": "", "updated_on": "2017-04-14T19:50:10.243905+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "b812cadeebd1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b812cadeebd1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b812cadeebd1"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}