{"pagelen": 50, "values": [{"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create `PhysicsConfig` components for global physics info\r\n* Create `WorldVelocity` if model is not static\r\n\r\nTODO\r\n\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9d01a4fc232", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f9d01a4fc232.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f9d01a4fc232"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T20:30:40.317689+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create `PhysicsConfig` components for global physics info\r\n* Create `WorldVelocity` if model is not static\r\n\r\nTODO\r\n\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e62ffd990ad3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e62ffd990ad3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e62ffd990ad3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T20:22:36.724143+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create `PhysicsConfig` components for global physics info\r\n* Create `WorldVelocity` if model is not static\r\n\r\nTODO\r\n\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers\r\n* `EntityComponentDatabase` Should not create entities with no components", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e62ffd990ad3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e62ffd990ad3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e62ffd990ad3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T20:14:41.523719+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create `PhysicsConfig` components for global physics info\r\n* Create `WorldVelocity` if model is not static\r\n\r\nTODO\r\n\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers\r\n* `EntityComponentDatabase` Should not create entities with no components", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "941d6362a192", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/941d6362a192.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/941d6362a192"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T20:09:31.891615+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create `PhysicsConfig` components for global physics info\r\n* Create `WorldVelocity` if model is not static\r\n\r\nTODO\r\n\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers\r\n* `EntityComponentDatabase` Should not create entities with no components", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9dfd17467e1c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/9dfd17467e1c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/9dfd17467e1c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T20:06:50.646450+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create PhysicsConfig components for global physics info\r\n\r\nTODO\r\n\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9dfd17467e1c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/9dfd17467e1c.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/9dfd17467e1c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T20:04:30.061278+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create PhysicsConfig components for global physics info\r\n\r\nTODO\r\n\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1c33cbbe8475", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/1c33cbbe8475.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/1c33cbbe8475"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T19:54:13.561673+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n* Create PhysicsConfig components for global physics info\r\n\r\nTODO\r\n\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ab1845510812", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ab1845510812.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ab1845510812"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T18:41:51.203308+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n\r\nTODO\r\n\r\n* PhysicsProperties componentizer\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ab1845510812", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ab1845510812.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ab1845510812"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T18:41:15.048256+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n\r\nTODO\r\n\r\n* PhysicsProperties componentizer\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "73b26f57c696", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/73b26f57c696.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/73b26f57c696"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T18:22:54.321387+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n\r\nTODO\r\n\r\n* PhysicsProperties componentizer\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f970da8059ab", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f970da8059ab.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f970da8059ab"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T18:21:43.470218+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components\r\n    * With a Geometry component it means it should be used by physics\r\n    * Attribute `group` is for combining multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n\r\nTODO\r\n\r\n* PhysicsProperties componentizer\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e5dcf346ba09", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e5dcf346ba09.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e5dcf346ba09"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T18:13:09.019318+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components to signal object should be used by physics, and group multiple `<collision>` into a single rigid body\r\n* Create `Inertial` components\r\n\r\nTODO\r\n\r\n* PhysicsProperties componentizer\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e5dcf346ba09", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e5dcf346ba09.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e5dcf346ba09"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T18:11:51.591767+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components to signal object should be used by physics, and group multiple `<collision>` into a single rigid body\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e5dcf346ba09", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e5dcf346ba09.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e5dcf346ba09"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T18:11:10.576640+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` components for named things\r\n* Create `Geometry` components for simple shapes\r\n* Create `Pose` components (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` components for flat color only\r\n* Create `Collidable` components to signal object should be used by physics, and group multiple `<collision>` into a single rigid body\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldVelocity componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e3118a19fbae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e3118a19fbae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e3118a19fbae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T16:59:11.588618+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n* Create `Pose` component (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` component\r\n* Create `Collidable` component to signal object should be used by physics, and group multiple `<collision>` into a single rigid body\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e3118a19fbae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e3118a19fbae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e3118a19fbae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T16:58:19.973659+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n* Create `Pose` component (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` component\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e3118a19fbae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e3118a19fbae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e3118a19fbae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T16:55:05.165399+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n* Create `Pose` component (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` component\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* Unit tests for `Manager::LoadWorld()`\r\n* Unit tests for `Manager::LoadComponentizer()`\r\n* Tests for componentizers", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c7bc23afaa15", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/c7bc23afaa15.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/c7bc23afaa15"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T15:59:40.569125+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n* Create `Pose` component (replaces WorldPose, needs pose graph to be useful)\r\n* Create `Material` component\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c7bc23afaa15", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/c7bc23afaa15.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/c7bc23afaa15"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T15:58:08.659888+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldPose componentizer\r\n* Material componentizer", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c7bc23afaa15", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/c7bc23afaa15.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/c7bc23afaa15"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-19T15:56:39.775296+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/37176829.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-37176829"}}, "parent": {"id": 36918976, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918976.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918976"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "5c7fcaf", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo_experimental/commits/5c7fcaf\" rel=\"nofollow\" class=\"ap-connect-link\">5c7fcaf</a></p>", "type": "rendered"}, "created_on": "2017-05-18T16:15:17.857142+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-18T16:15:17.859457+00:00", "type": "pullrequest_comment", "id": 37176829}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/37176805.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-37176805"}}, "parent": {"id": 36918849, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918849.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918849"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "d32e392", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo_experimental/commits/d32e392\" rel=\"nofollow\" class=\"ap-connect-link\">d32e392</a></p>", "type": "rendered"}, "created_on": "2017-05-18T16:14:55.380956+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-18T16:15:07.352110+00:00", "type": "pullrequest_comment", "id": 37176805}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/37176784.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-37176784"}}, "parent": {"id": 36916312, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36916312.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36916312"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "94a1caf", "markup": "markdown", "html": "<p><a href=\"#!/osrf/gazebo_experimental/commits/94a1caf\" rel=\"nofollow\" class=\"ap-connect-link\">94a1caf</a></p>", "type": "rendered"}, "created_on": "2017-05-18T16:14:45.565133+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-18T16:14:45.567402+00:00", "type": "pullrequest_comment", "id": 37176784}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldPose componentizer\r\n* Material componentizer", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "94a1caf20297", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/94a1caf20297.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/94a1caf20297"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-18T16:14:30.900643+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldPose componentizer\r\n* Material componentizer", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "daa71ca6acd0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/daa71ca6acd0.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/daa71ca6acd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "868f811f3dc6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/868f811f3dc6.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/868f811f3dc6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-18T16:05:15.241411+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldPose componentizer\r\n* Material componentizer", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "bb416641e755", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/bb416641e755.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/bb416641e755"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "85301e0e90c1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/85301e0e90c1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/85301e0e90c1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-18T16:01:44.834359+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36920760.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36920760"}}, "parent": {"id": 36919275, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36919275.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36919275"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "I shouldn't have committed this. It was a lazy way of suppressing the `time moved backwards` when there isn't a system advancing time. `len(\"=\") < len(\"//\")` ;-)", "markup": "markdown", "html": "<p>I shouldn't have committed this. It was a lazy way of suppressing the <code>time moved backwards</code> when there isn't a system advancing time. <code>len(\"=\") &lt; len(\"//\")</code> ;-)</p>", "type": "rendered"}, "created_on": "2017-05-16T00:30:07.107056+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-16T00:30:07.109439+00:00", "type": "pullrequest_comment", "id": 36920760}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36920615.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36920615"}}, "parent": {"id": 36918976, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918976.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918976"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "Ooops nice catch. I renamed the class and missed this. The include guards rules are the [google c++ style guide](https://google.github.io/styleguide/cppguide.html#The__define_Guard) rules except ending in `_HH_`.", "markup": "markdown", "html": "<p>Ooops nice catch. I renamed the class and missed this. The include guards rules are the <a data-is-external-link=\"true\" href=\"https://google.github.io/styleguide/cppguide.html#The__define_Guard\" rel=\"nofollow\">google c++ style guide</a> rules except ending in <code>_HH_</code>.</p>", "type": "rendered"}, "created_on": "2017-05-16T00:25:57.628838+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-16T00:25:57.631075+00:00", "type": "pullrequest_comment", "id": 36920615}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36920527.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36920527"}}, "parent": {"id": 36918947, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918947.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918947"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "I think doing nothing is the right action. An empty name isn't of any use. This logic could be more thorough and only add a `Name` component if the attribute is on an official SDF xml tag (like world, model, collision, visual, etc).", "markup": "markdown", "html": "<p>I think doing nothing is the right action. An empty name isn't of any use. This logic could be more thorough and only add a <code>Name</code> component if the attribute is on an official SDF xml tag (like world, model, collision, visual, etc).</p>", "type": "rendered"}, "created_on": "2017-05-16T00:23:31.915322+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-16T00:23:31.918590+00:00", "type": "pullrequest_comment", "id": 36920527}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36920459.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36920459"}}, "parent": {"id": 36918849, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918849.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918849"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "A warning is a good idea if there's no parent. If there's a `geometry` tag but the parent isn't `collision` or `visual` it means it's inside some unknown xml inside a `plugin` block. This logic could be a little more thorough by checking if any ancestor is `plugin` and ignoring it.", "markup": "markdown", "html": "<p>A warning is a good idea if there's no parent. If there's a <code>geometry</code> tag but the parent isn't <code>collision</code> or <code>visual</code> it means it's inside some unknown xml inside a <code>plugin</code> block. This logic could be a little more thorough by checking if any ancestor is <code>plugin</code> and ignoring it.</p>", "type": "rendered"}, "created_on": "2017-05-16T00:21:18.087496+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-16T00:21:18.089698+00:00", "type": "pullrequest_comment", "id": 36920459}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36920323.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36920323"}}, "parent": {"id": 36918854, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918854.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918854"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "Nothing happens. It means there is a geometry tag but it is empty `<geometry/>`. No component is needed because there's no data to populate it with.", "markup": "markdown", "html": "<p>Nothing happens. It means there is a geometry tag but it is empty <code>&lt;geometry/&gt;</code>. No component is needed because there's no data to populate it with.</p>", "type": "rendered"}, "created_on": "2017-05-16T00:16:46.545835+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-05-16T00:16:46.548582+00:00", "type": "pullrequest_comment", "id": 36920323}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36919275.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36919275"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "Why do we process a 0-time update?", "markup": "markdown", "html": "<p>Why do we process a 0-time update?</p>", "type": "rendered"}, "created_on": "2017-05-15T23:45:21.142095+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-15T23:45:21.144362+00:00", "type": "pullrequest_comment", "id": 36919275}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36919237.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36919237"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "Combine with previous line?", "markup": "markdown", "html": "<p>Combine with previous line?</p>", "type": "rendered"}, "created_on": "2017-05-15T23:44:04.474216+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-15T23:44:04.477162+00:00", "type": "pullrequest_comment", "id": 36919237}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918976.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918976"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "is there a naming convention for the include guards? This one doesn't match the CZGeometry.hh include.", "markup": "markdown", "html": "<p>is there a naming convention for the include guards? This one doesn't match the CZGeometry.hh include.</p>", "type": "rendered"}, "created_on": "2017-05-15T23:36:14.483807+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-15T23:36:14.486987+00:00", "type": "pullrequest_comment", "id": 36918976}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918947.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918947"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "Same comment as above -- if a `<name>` tag exists with no content, should anything happen?", "markup": "markdown", "html": "<p>Same comment as above -- if a <code>&lt;name&gt;</code> tag exists with no content, should anything happen?</p>", "type": "rendered"}, "created_on": "2017-05-15T23:35:19.562525+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-15T23:35:19.565202+00:00", "type": "pullrequest_comment", "id": 36918947}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918854.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918854"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "What happens if there's no child?", "markup": "markdown", "html": "<p>What happens if there's no child?</p>", "type": "rendered"}, "created_on": "2017-05-15T23:32:45.275254+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-15T23:32:45.278290+00:00", "type": "pullrequest_comment", "id": 36918854}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36918849.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36918849"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "If there's no parent element, is there no expected behavior, such as a warning?", "markup": "markdown", "html": "<p>If there's no parent element, is there no expected behavior, such as a warning?</p>", "type": "rendered"}, "created_on": "2017-05-15T23:32:34.605136+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-15T23:32:34.607244+00:00", "type": "pullrequest_comment", "id": 36918849}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments/36916312.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30/_/diff#comment-36916312"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}, "content": {"raw": "Nitpicking the 2 spaces", "markup": "markdown", "html": "<p>Nitpicking the 2 spaces</p>", "type": "rendered"}, "created_on": "2017-05-15T22:26:29.169542+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-15T22:26:29.173040+00:00", "type": "pullrequest_comment", "id": 36916312}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldPose componentizer\r\n* Material componentizer", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "d013e3372508", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d013e3372508.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d013e3372508"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "900833f7e777", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/900833f7e777.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/900833f7e777"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-15T17:20:24.847959+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}, {"update": {"description": "Working on adding componentizers. These turn SDF into entities and components.\r\n\r\nRight now the api loads componentizers as plugins. These are given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree and invokes the componentizers one `sdf::Element` at at a time.\r\n\r\nWorking\r\n\r\n* Load componentizers as plugins\r\n* Create `Name` component for named things\r\n* Create `Geometry` component for simple shapes\r\n\r\nTODO\r\n\r\n* Inertial componentizer\r\n* PhysicsProperties componentizer\r\n* WorldPose componentizer\r\n* Material componentizer", "title": "[WIP] Componentizers", "destination": {"commit": {"hash": "d013e3372508", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d013e3372508.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d013e3372508"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "900833f7e777", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/900833f7e777.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/900833f7e777"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-05-15T17:20:24.816819+00:00"}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}}, "title": "Componentizers"}}]}