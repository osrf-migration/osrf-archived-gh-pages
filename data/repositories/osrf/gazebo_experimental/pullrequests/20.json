{"rendered": {"description": {"raw": "Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so pull request #9 should be merged first, then this PR should be targeted at default.\r\n\r\nTo see it work:\r\n\r\n* `IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo`\r\n* `GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo`\r\n\r\nUnknowns\r\n\r\n* How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.\r\n* Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?\r\n* Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?", "markup": "markdown", "html": "<p>Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so <a href=\"#!/osrf/gazebo_experimental/pull-requests/9/adds-dummy-rendering-system\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #9</a> should be merged first, then this PR should be targeted at default.</p>\n<p>To see it work:</p>\n<ul>\n<li><code>IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo</code></li>\n<li><code>GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo</code></li>\n</ul>\n<p>Unknowns</p>\n<ul>\n<li>How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.</li>\n<li>Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?</li>\n<li>Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Plugin to display image using ign-gui", "markup": "markdown", "html": "<p>Plugin to display image using ign-gui</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so pull request #9 should be merged first, then this PR should be targeted at default.\r\n\r\nTo see it work:\r\n\r\n* `IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo`\r\n* `GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo`\r\n\r\nUnknowns\r\n\r\n* How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.\r\n* Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?\r\n* Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/20/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:941a900a5453%0Ddeff249df3a6?from_pullrequest_id=20"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/20/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/20"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:941a900a5453%0Ddeff249df3a6?from_pullrequest_id=20"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/20/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/20/statuses_page=1.json"}}, "title": "Plugin to display image using ign-gui", "close_source_branch": true, "reviewers": [], "id": 20, "destination": {"commit": {"hash": "deff249df3a6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/deff249df3a6.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/deff249df3a6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-28T17:00:01.940575+00:00", "summary": {"raw": "Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so pull request #9 should be merged first, then this PR should be targeted at default.\r\n\r\nTo see it work:\r\n\r\n* `IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo`\r\n* `GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo`\r\n\r\nUnknowns\r\n\r\n* How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.\r\n* Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?\r\n* Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?", "markup": "markdown", "html": "<p>Adds an ign-gui plugin that displays an image received via an ignition transport topic. It uses the dummy_demo, so <a href=\"#!/osrf/gazebo_experimental/pull-requests/9/adds-dummy-rendering-system\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #9</a> should be merged first, then this PR should be targeted at default.</p>\n<p>To see it work:</p>\n<ul>\n<li><code>IGN_GUI_PLUGIN_PATH=src/gui/ ./src/gazebo</code></li>\n<li><code>GAZEBO_PLUGIN_PATH=examples/dummy_demo/systems/ ./examples/dummy_demo/dummy_demo</code></li>\n</ul>\n<p>Unknowns</p>\n<ul>\n<li>How to give information to ignition-gui plugins? For example, how would this plugin know what topic to connect to? Right now it is hardcoded to /rendering/image.</li>\n<li>Can an ECS system load ignition-gui plugins? What would an ECS gui system look like?</li>\n<li>Is it ok to call ignition::gui::loadPlugin() from whatever thread the ECS system runs in?</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "b561715f17c1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b561715f17c1.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b561715f17c1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "gui-display-image"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-05-02T19:12:52.079154+00:00", "type": "participant", "approved": true, "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}}, {"role": "PARTICIPANT", "participated_on": "2017-05-02T19:02:30.963262+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-05-01T16:12:25.008133+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2017-05-04T21:42:01.517503+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "941a900a5453", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/941a900a5453.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/941a900a5453"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}