{"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/33/comments/39724801.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:e855b245955d..b0bfa9550ef2?path=src%2Fgazebo_main.cc"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/33/_/diff#comment-39724801"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/33.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/33"}}, "title": "Load world from file"}, "content": {"raw": "Reading the file using `std` file avoids correctness checking that is performed by libsdformat. You could do something like\n\n```\nsdf::SDFPtr sdfParsed(new sdf::SDF());\nsdf::init(sdfParsed);\n\n// Read an SDF file, and store the result in sdfParsed.\nif (sdf::readFile(fullPath, sdfParsed))\n{\n  _mgr.LoadWorld(sdfParsed.ToString());\n}\nelse\n{\n   ERROR\n}\n```", "markup": "markdown", "html": "<p>Reading the file using <code>std</code> file avoids correctness checking that is performed by libsdformat. You could do something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">SDFPtr</span> <span class=\"nt\">sdfParsed</span><span class=\"o\">(</span><span class=\"nt\">new</span> <span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">SDF</span><span class=\"o\">());</span>\n<span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">init</span><span class=\"o\">(</span><span class=\"nt\">sdfParsed</span><span class=\"o\">);</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Read</span> <span class=\"nt\">an</span> <span class=\"nt\">SDF</span> <span class=\"nt\">file</span><span class=\"o\">,</span> <span class=\"nt\">and</span> <span class=\"nt\">store</span> <span class=\"nt\">the</span> <span class=\"nt\">result</span> <span class=\"nt\">in</span> <span class=\"nt\">sdfParsed</span><span class=\"o\">.</span>\n<span class=\"nt\">if</span> <span class=\"o\">(</span><span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">readFile</span><span class=\"o\">(</span><span class=\"nt\">fullPath</span><span class=\"o\">,</span> <span class=\"nt\">sdfParsed</span><span class=\"o\">))</span>\n<span class=\"p\">{</span>\n  <span class=\"err\">_mgr.LoadWorld(sdfParsed.ToString())</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">else</span>\n<span class=\"p\">{</span>\n   <span class=\"err\">ERROR</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-28T13:06:38.756351+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 179, "from": null, "outdated": true, "path": "src/gazebo_main.cc"}, "updated_on": "2017-06-28T13:06:38.759521+00:00", "type": "pullrequest_comment", "id": 39724801}