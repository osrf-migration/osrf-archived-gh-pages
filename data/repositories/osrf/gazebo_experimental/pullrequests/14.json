{"rendered": {"description": {"raw": "This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.\r\n\r\nThe rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.\r\n\r\nIncluded changes:\r\n\r\n* EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair\r\n* Added QueryRegistrar class and unit test\r\n* `ecs::System::Init()` accepts a QueryRegistrar reference and returns void\r\n* the virtual method `ecs::System::Update()` has been replaced by registering callbacks with the registrar\r\n* Manager provides ecs::System with a pointer to itself", "markup": "markdown", "html": "<p>This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.</p>\n<p>The rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.</p>\n<p>Included changes:</p>\n<ul>\n<li>EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair</li>\n<li>Added QueryRegistrar class and unit test</li>\n<li><code>ecs::System::Init()</code> accepts a QueryRegistrar reference and returns void</li>\n<li>the virtual method <code>ecs::System::Update()</code> has been replaced by registering callbacks with the registrar</li>\n<li>Manager provides ecs::System with a pointer to itself</li>\n</ul>", "type": "rendered"}, "title": {"raw": "One system can register multiple queries and callbacks", "markup": "markdown", "html": "<p>One system can register multiple queries and callbacks</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.\r\n\r\nThe rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.\r\n\r\nIncluded changes:\r\n\r\n* EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair\r\n* Added QueryRegistrar class and unit test\r\n* `ecs::System::Init()` accepts a QueryRegistrar reference and returns void\r\n* the virtual method `ecs::System::Update()` has been replaced by registering callbacks with the registrar\r\n* Manager provides ecs::System with a pointer to itself", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/14/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:9bfa8c4380cb%0D70d25995a108?from_pullrequest_id=14"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/14/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/14"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:9bfa8c4380cb%0D70d25995a108?from_pullrequest_id=14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/14/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/14/statuses_page=1.json"}}, "title": "One system can register multiple queries and callbacks", "close_source_branch": true, "reviewers": [], "id": 14, "destination": {"commit": {"hash": "70d25995a108", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/70d25995a108.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/70d25995a108"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-04-19T23:22:25.439081+00:00", "summary": {"raw": "This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.\r\n\r\nThe rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.\r\n\r\nIncluded changes:\r\n\r\n* EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair\r\n* Added QueryRegistrar class and unit test\r\n* `ecs::System::Init()` accepts a QueryRegistrar reference and returns void\r\n* the virtual method `ecs::System::Update()` has been replaced by registering callbacks with the registrar\r\n* Manager provides ecs::System with a pointer to itself", "markup": "markdown", "html": "<p>This pull request allows a system to have multiple queries and callbacks. It is an implementation of #1.</p>\n<p>The rationale is for systems to query global information. For example a physics system needs both global information like solver parameters and gravity, and components to simulate. Its first query should check if the global information has changed, and its second query should check if the components to simulate have changed.</p>\n<p>Included changes:</p>\n<ul>\n<li>EntityQuery is now copyable instead of movable - this made it easier for the registrar to associate a query with a callback via std::pair</li>\n<li>Added QueryRegistrar class and unit test</li>\n<li><code>ecs::System::Init()</code> accepts a QueryRegistrar reference and returns void</li>\n<li>the virtual method <code>ecs::System::Update()</code> has been replaced by registering callbacks with the registrar</li>\n<li>Manager provides ecs::System with a pointer to itself</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "ec28b65fe304", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ec28b65fe304.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ec28b65fe304"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "multiple_queries"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-04-20T18:44:40.464207+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}], "reason": "", "updated_on": "2017-04-26T16:30:41.455122+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "9bfa8c4380cb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/9bfa8c4380cb.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/9bfa8c4380cb"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}