{"pagelen": 50, "values": [{"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "Pausing until after restructuring work is complete. See issue #34", "source": {"commit": {"hash": "aab2f615386e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/aab2f615386e.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/aab2f615386e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "DECLINED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2017-08-14T15:10:41.384882+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "aab2f615386e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/aab2f615386e.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/aab2f615386e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-06T22:30:18.566733+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "a898e3253fbc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/a898e3253fbc.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/a898e3253fbc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-06T20:53:19.482171+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "0d4011674f7d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/0d4011674f7d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/0d4011674f7d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "dc0cddfc8875", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/dc0cddfc8875.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/dc0cddfc8875"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-05T21:43:26.550058+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "0d4011674f7d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/0d4011674f7d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/0d4011674f7d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "dc0cddfc8875", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/dc0cddfc8875.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/dc0cddfc8875"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-05T21:41:49.537250+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "0d4011674f7d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/0d4011674f7d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/0d4011674f7d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "dc0cddfc8875", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/dc0cddfc8875.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/dc0cddfc8875"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-05T21:40:39.698498+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "0d4011674f7d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/0d4011674f7d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/0d4011674f7d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "dc0cddfc8875", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/dc0cddfc8875.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/dc0cddfc8875"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-05T21:35:35.751527+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "48cacff72676", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/48cacff72676.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/48cacff72676"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "34db29bae9f3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/34db29bae9f3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/34db29bae9f3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-05T19:05:34.379176+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "cbcf02c56233", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/cbcf02c56233.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/cbcf02c56233"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "ed18294628f3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/ed18294628f3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/ed18294628f3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-05T15:47:39.223725+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "37dba5d5d8ed", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/37dba5d5d8ed.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/37dba5d5d8ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "d8997172b805", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d8997172b805.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d8997172b805"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-03T19:36:34.944222+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "37dba5d5d8ed", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/37dba5d5d8ed.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/37dba5d5d8ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "d8997172b805", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d8997172b805.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d8997172b805"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-03T19:30:20.968907+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision.\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "title": "Bullet physics system", "destination": {"commit": {"hash": "37dba5d5d8ed", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/37dba5d5d8ed.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/37dba5d5d8ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "d8997172b805", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d8997172b805.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d8997172b805"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-03T19:29:29.264597+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision.\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.", "title": "Bullet physics system", "destination": {"commit": {"hash": "37dba5d5d8ed", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/37dba5d5d8ed.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/37dba5d5d8ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "d8997172b805", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d8997172b805.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d8997172b805"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-03T19:28:18.522515+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}, {"update": {"description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. It was difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision.\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape, or a shape made of multiple others. This is intended to be used when a link has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * Collidable and collision geometry are now together on the entity associated with the link, rather than having each collision get its own entity. This makes it easier on a physics system to tell when a rigid body is modified.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.", "title": "Bullet physics system", "destination": {"commit": {"hash": "37dba5d5d8ed", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/37dba5d5d8ed.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/37dba5d5d8ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "d8997172b805", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/d8997172b805.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/d8997172b805"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-03T19:28:18.494281+00:00"}, "pull_request": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}}, "title": "Bullet physics system"}}]}