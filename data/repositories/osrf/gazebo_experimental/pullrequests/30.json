{"rendered": {"description": {"raw": "Ready to review. This pull request adds componentizers. These turn SDF into entities and components.\r\n\r\nComponentizers are loaded as plugins, and given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree breadth-first and invokes the componentizers one `sdf::Element` at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.\r\n\r\nI prefixed the **C**omponenti**Z**ers with CZ so tabs in my editor weren't named the same as the component files.\r\n\r\n* Componentizers\r\n    * `CZName` adds a name component to anything that has an attribute 'name'\r\n    * `CZGeometry` adds a geometry component when it sees `<geometry>` under a `<collision>` or `<visual>`. It currently supports spheres, boxes, and cylinders only.\r\n    * `CZPose` adds a pose component when it sees a `<model>`, `<link>`, `<visual>`, or `<collision>`. The pose are given in the parent frame so that visuals move when the collision moves. See [this Jira ticket](https://osrfoundation.atlassian.net/browse/GAZ-141).\r\n    * `CZMaterial` Adds a material when a `<visual>` component is given. It currently only uses `<ambient>` to make a flat color material.\r\n    * `CZCollidable` creates a component when there is a `<collision>`. This signals that the `Geometry` component is collision geometry, and is grouped with other `<collision>` on the same link. This component should also have contact and surface properties, but that's not currently implemented\r\n    * `CZInertial` adds an interial component when there is one on a `<link>`. The `Collidable` component `groupId` references the entity this component is created on.\r\n    * `CZPhysicsConfig` adds a component for global `<physics>` properties. It only has `maxStepSize` currently.\r\n    * `CZWorldVelocity` if model is not static then the entities created for the `<link>` get `WorldVelocity` components.\r\n\r\n\r\n# Examples #\r\n\r\n## Empty world ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n\r\n## World with non-static model ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n    <model name=\"model1\">\r\n      <link name=\"link1\">\r\n        <collision name=\"col1\">\r\n          <geometry>\r\n            <box>\r\n              <size>1 2 3</size>\r\n            </box>\r\n          </geometry>\r\n        </collision>\r\n        <visual name=\"vis1\">\r\n          <geometry>\r\n            <sphere>\r\n              <radius>0.5</radius>\r\n            </sphere>\r\n          </geometry>\r\n          <material>\r\n            <ambient>0.1 0.2 0.3 1.0</ambient>\r\n          </material>\r\n        </visual>\r\n        <inertial>\r\n          <mass>5</mass>\r\n          <inertia>\r\n            <ixx>1</ixx>\r\n            <iyy>1</iyy>\r\n            <izz>1</izz>\r\n            <ixy>0</ixy>\r\n            <ixz>0</ixz>\r\n            <iyz>0</iyz>\r\n          </inertia>\r\n        </inertial>\r\n      </link>\r\n    </model>\r\n  </world>\r\n</sdf>\r\n\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n* **E3**\r\n    * *Name: model1* - created by `CZName`\r\n    * *Pose: origin in frame \"/\", defines frame \"/model/model1\"* - created by `CZPose`\r\n* **E4**\r\n    * *Name: link1* - created by `CZName`\r\n    * *Inertial: mass 5, inertia identity matrix* - created by `CZInertial`\r\n    * *WorldVelocity: initially zero* - created by `CZWorldVelocity`\r\n    * *Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"* - created by `CZPose`\r\n* **E5**\r\n    * *Name: col1* - created by `CZName`\r\n    * *Geometry: box size 1,2,3* - created by `CZGeometry`\r\n    * *Collidable: groupId E4* - created by `CZCollidable`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"* - created by `CZPose`\r\n* **E6**\r\n    * *Name vis1* - created by `CZName`\r\n    * *Geometry: sphere radius 0.5* - created by `CZGeometry`\r\n    * *Material; RGBA 0.1, 0.2, 0.3, 1.0* - created by `CZMaterial`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"* - created by `CZPose`", "markup": "markdown", "html": "<p>Ready to review. This pull request adds componentizers. These turn SDF into entities and components.</p>\n<p>Componentizers are loaded as plugins, and given to the <code>ecs::Manager</code> class. <code>Manager::LoadWorld(std::string _world)</code> gives walks the SDF tree breadth-first and invokes the componentizers one <code>sdf::Element</code> at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.</p>\n<p>I prefixed the <strong>C</strong>omponenti<strong>Z</strong>ers with CZ so tabs in my editor weren't named the same as the component files.</p>\n<ul>\n<li>Componentizers<ul>\n<li><code>CZName</code> adds a name component to anything that has an attribute 'name'</li>\n<li><code>CZGeometry</code> adds a geometry component when it sees <code>&lt;geometry&gt;</code> under a <code>&lt;collision&gt;</code> or <code>&lt;visual&gt;</code>. It currently supports spheres, boxes, and cylinders only.</li>\n<li><code>CZPose</code> adds a pose component when it sees a <code>&lt;model&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;visual&gt;</code>, or <code>&lt;collision&gt;</code>. The pose are given in the parent frame so that visuals move when the collision moves. See <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/browse/GAZ-141\" rel=\"nofollow\">this Jira ticket</a>.</li>\n<li><code>CZMaterial</code> Adds a material when a <code>&lt;visual&gt;</code> component is given. It currently only uses <code>&lt;ambient&gt;</code> to make a flat color material.</li>\n<li><code>CZCollidable</code> creates a component when there is a <code>&lt;collision&gt;</code>. This signals that the <code>Geometry</code> component is collision geometry, and is grouped with other <code>&lt;collision&gt;</code> on the same link. This component should also have contact and surface properties, but that's not currently implemented</li>\n<li><code>CZInertial</code> adds an interial component when there is one on a <code>&lt;link&gt;</code>. The <code>Collidable</code> component <code>groupId</code> references the entity this component is created on.</li>\n<li><code>CZPhysicsConfig</code> adds a component for global <code>&lt;physics&gt;</code> properties. It only has <code>maxStepSize</code> currently.</li>\n<li><code>CZWorldVelocity</code> if model is not static then the entities created for the <code>&lt;link&gt;</code> get <code>WorldVelocity</code> components.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-examples\">Examples</h1>\n<h2 id=\"markdown-header-empty-world\">Empty world</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;asdf&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Creates these <strong>Entities</strong> and <em>components</em></p>\n<ul>\n<li><strong>E1</strong><ul>\n<li><em>Name: default</em> - created by <code>CZName</code></li>\n</ul>\n</li>\n<li><strong>E2</strong><ul>\n<li><em>Name: asdf</em> - created by <code>CZName</code></li>\n<li><em>PhysicsConfig: maxStepSize: 0.001</em> - created by <code>CZPhysicsConfig</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"markdown-header-world-with-non-static-model\">World with non-static model</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;asdf&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;model1&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;col1&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>1 2 3<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/collision&gt;</span>\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;vis1&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;sphere&gt;</span>\n              <span class=\"nt\">&lt;radius&gt;</span>0.5<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;/sphere&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n          <span class=\"nt\">&lt;material&gt;</span>\n            <span class=\"nt\">&lt;ambient&gt;</span>0.1 0.2 0.3 1.0<span class=\"nt\">&lt;/ambient&gt;</span>\n          <span class=\"nt\">&lt;/material&gt;</span>\n        <span class=\"nt\">&lt;/visual&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>5<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>1<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>1<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>1<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Creates these <strong>Entities</strong> and <em>components</em></p>\n<ul>\n<li><strong>E1</strong><ul>\n<li><em>Name: default</em> - created by <code>CZName</code></li>\n</ul>\n</li>\n<li><strong>E2</strong><ul>\n<li><em>Name: asdf</em> - created by <code>CZName</code></li>\n<li><em>PhysicsConfig: maxStepSize: 0.001</em> - created by <code>CZPhysicsConfig</code></li>\n</ul>\n</li>\n<li><strong>E3</strong><ul>\n<li><em>Name: model1</em> - created by <code>CZName</code></li>\n<li><em>Pose: origin in frame \"/\", defines frame \"/model/model1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E4</strong><ul>\n<li><em>Name: link1</em> - created by <code>CZName</code></li>\n<li><em>Inertial: mass 5, inertia identity matrix</em> - created by <code>CZInertial</code></li>\n<li><em>WorldVelocity: initially zero</em> - created by <code>CZWorldVelocity</code></li>\n<li><em>Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E5</strong><ul>\n<li><em>Name: col1</em> - created by <code>CZName</code></li>\n<li><em>Geometry: box size 1,2,3</em> - created by <code>CZGeometry</code></li>\n<li><em>Collidable: groupId E4</em> - created by <code>CZCollidable</code></li>\n<li><em>Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E6</strong><ul>\n<li><em>Name vis1</em> - created by <code>CZName</code></li>\n<li><em>Geometry: sphere radius 0.5</em> - created by <code>CZGeometry</code></li>\n<li><em>Material; RGBA 0.1, 0.2, 0.3, 1.0</em> - created by <code>CZMaterial</code></li>\n<li><em>Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Componentizers", "markup": "markdown", "html": "<p>Componentizers</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Ready to review. This pull request adds componentizers. These turn SDF into entities and components.\r\n\r\nComponentizers are loaded as plugins, and given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree breadth-first and invokes the componentizers one `sdf::Element` at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.\r\n\r\nI prefixed the **C**omponenti**Z**ers with CZ so tabs in my editor weren't named the same as the component files.\r\n\r\n* Componentizers\r\n    * `CZName` adds a name component to anything that has an attribute 'name'\r\n    * `CZGeometry` adds a geometry component when it sees `<geometry>` under a `<collision>` or `<visual>`. It currently supports spheres, boxes, and cylinders only.\r\n    * `CZPose` adds a pose component when it sees a `<model>`, `<link>`, `<visual>`, or `<collision>`. The pose are given in the parent frame so that visuals move when the collision moves. See [this Jira ticket](https://osrfoundation.atlassian.net/browse/GAZ-141).\r\n    * `CZMaterial` Adds a material when a `<visual>` component is given. It currently only uses `<ambient>` to make a flat color material.\r\n    * `CZCollidable` creates a component when there is a `<collision>`. This signals that the `Geometry` component is collision geometry, and is grouped with other `<collision>` on the same link. This component should also have contact and surface properties, but that's not currently implemented\r\n    * `CZInertial` adds an interial component when there is one on a `<link>`. The `Collidable` component `groupId` references the entity this component is created on.\r\n    * `CZPhysicsConfig` adds a component for global `<physics>` properties. It only has `maxStepSize` currently.\r\n    * `CZWorldVelocity` if model is not static then the entities created for the `<link>` get `WorldVelocity` components.\r\n\r\n\r\n# Examples #\r\n\r\n## Empty world ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n\r\n## World with non-static model ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n    <model name=\"model1\">\r\n      <link name=\"link1\">\r\n        <collision name=\"col1\">\r\n          <geometry>\r\n            <box>\r\n              <size>1 2 3</size>\r\n            </box>\r\n          </geometry>\r\n        </collision>\r\n        <visual name=\"vis1\">\r\n          <geometry>\r\n            <sphere>\r\n              <radius>0.5</radius>\r\n            </sphere>\r\n          </geometry>\r\n          <material>\r\n            <ambient>0.1 0.2 0.3 1.0</ambient>\r\n          </material>\r\n        </visual>\r\n        <inertial>\r\n          <mass>5</mass>\r\n          <inertia>\r\n            <ixx>1</ixx>\r\n            <iyy>1</iyy>\r\n            <izz>1</izz>\r\n            <ixy>0</ixy>\r\n            <ixz>0</ixz>\r\n            <iyz>0</iyz>\r\n          </inertia>\r\n        </inertial>\r\n      </link>\r\n    </model>\r\n  </world>\r\n</sdf>\r\n\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n* **E3**\r\n    * *Name: model1* - created by `CZName`\r\n    * *Pose: origin in frame \"/\", defines frame \"/model/model1\"* - created by `CZPose`\r\n* **E4**\r\n    * *Name: link1* - created by `CZName`\r\n    * *Inertial: mass 5, inertia identity matrix* - created by `CZInertial`\r\n    * *WorldVelocity: initially zero* - created by `CZWorldVelocity`\r\n    * *Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"* - created by `CZPose`\r\n* **E5**\r\n    * *Name: col1* - created by `CZName`\r\n    * *Geometry: box size 1,2,3* - created by `CZGeometry`\r\n    * *Collidable: groupId E4* - created by `CZCollidable`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"* - created by `CZPose`\r\n* **E6**\r\n    * *Name vis1* - created by `CZName`\r\n    * *Geometry: sphere radius 0.5* - created by `CZGeometry`\r\n    * *Material; RGBA 0.1, 0.2, 0.3, 1.0* - created by `CZMaterial`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"* - created by `CZPose`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:b0bfa9550ef2%0D4deac4e79cc3?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/30/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/30"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:b0bfa9550ef2%0D4deac4e79cc3?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/30/statuses_page=1.json"}}, "title": "Componentizers", "close_source_branch": true, "reviewers": [], "id": 30, "destination": {"commit": {"hash": "4deac4e79cc3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/4deac4e79cc3.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/4deac4e79cc3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-05-15T17:20:24.806508+00:00", "summary": {"raw": "Ready to review. This pull request adds componentizers. These turn SDF into entities and components.\r\n\r\nComponentizers are loaded as plugins, and given to the `ecs::Manager` class. `Manager::LoadWorld(std::string _world)` gives walks the SDF tree breadth-first and invokes the componentizers one `sdf::Element` at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.\r\n\r\nI prefixed the **C**omponenti**Z**ers with CZ so tabs in my editor weren't named the same as the component files.\r\n\r\n* Componentizers\r\n    * `CZName` adds a name component to anything that has an attribute 'name'\r\n    * `CZGeometry` adds a geometry component when it sees `<geometry>` under a `<collision>` or `<visual>`. It currently supports spheres, boxes, and cylinders only.\r\n    * `CZPose` adds a pose component when it sees a `<model>`, `<link>`, `<visual>`, or `<collision>`. The pose are given in the parent frame so that visuals move when the collision moves. See [this Jira ticket](https://osrfoundation.atlassian.net/browse/GAZ-141).\r\n    * `CZMaterial` Adds a material when a `<visual>` component is given. It currently only uses `<ambient>` to make a flat color material.\r\n    * `CZCollidable` creates a component when there is a `<collision>`. This signals that the `Geometry` component is collision geometry, and is grouped with other `<collision>` on the same link. This component should also have contact and surface properties, but that's not currently implemented\r\n    * `CZInertial` adds an interial component when there is one on a `<link>`. The `Collidable` component `groupId` references the entity this component is created on.\r\n    * `CZPhysicsConfig` adds a component for global `<physics>` properties. It only has `maxStepSize` currently.\r\n    * `CZWorldVelocity` if model is not static then the entities created for the `<link>` get `WorldVelocity` components.\r\n\r\n\r\n# Examples #\r\n\r\n## Empty world ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n\r\n## World with non-static model ##\r\n```\r\n<sdf version=\"1.6\">\r\n  <world name=\"default\">\r\n    <physics name=\"asdf\" type=\"ode\">\r\n      <max_step_size>0.001</max_step_size>\r\n    </physics>\r\n    <model name=\"model1\">\r\n      <link name=\"link1\">\r\n        <collision name=\"col1\">\r\n          <geometry>\r\n            <box>\r\n              <size>1 2 3</size>\r\n            </box>\r\n          </geometry>\r\n        </collision>\r\n        <visual name=\"vis1\">\r\n          <geometry>\r\n            <sphere>\r\n              <radius>0.5</radius>\r\n            </sphere>\r\n          </geometry>\r\n          <material>\r\n            <ambient>0.1 0.2 0.3 1.0</ambient>\r\n          </material>\r\n        </visual>\r\n        <inertial>\r\n          <mass>5</mass>\r\n          <inertia>\r\n            <ixx>1</ixx>\r\n            <iyy>1</iyy>\r\n            <izz>1</izz>\r\n            <ixy>0</ixy>\r\n            <ixz>0</ixz>\r\n            <iyz>0</iyz>\r\n          </inertia>\r\n        </inertial>\r\n      </link>\r\n    </model>\r\n  </world>\r\n</sdf>\r\n\r\n```\r\n\r\nCreates these **Entities** and *components*\r\n\r\n* **E1**\r\n    * *Name: default* - created by `CZName`\r\n* **E2**\r\n    * *Name: asdf* - created by `CZName`\r\n    * *PhysicsConfig: maxStepSize: 0.001* - created by `CZPhysicsConfig`\r\n* **E3**\r\n    * *Name: model1* - created by `CZName`\r\n    * *Pose: origin in frame \"/\", defines frame \"/model/model1\"* - created by `CZPose`\r\n* **E4**\r\n    * *Name: link1* - created by `CZName`\r\n    * *Inertial: mass 5, inertia identity matrix* - created by `CZInertial`\r\n    * *WorldVelocity: initially zero* - created by `CZWorldVelocity`\r\n    * *Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"* - created by `CZPose`\r\n* **E5**\r\n    * *Name: col1* - created by `CZName`\r\n    * *Geometry: box size 1,2,3* - created by `CZGeometry`\r\n    * *Collidable: groupId E4* - created by `CZCollidable`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"* - created by `CZPose`\r\n* **E6**\r\n    * *Name vis1* - created by `CZName`\r\n    * *Geometry: sphere radius 0.5* - created by `CZGeometry`\r\n    * *Material; RGBA 0.1, 0.2, 0.3, 1.0* - created by `CZMaterial`\r\n    * *Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"* - created by `CZPose`", "markup": "markdown", "html": "<p>Ready to review. This pull request adds componentizers. These turn SDF into entities and components.</p>\n<p>Componentizers are loaded as plugins, and given to the <code>ecs::Manager</code> class. <code>Manager::LoadWorld(std::string _world)</code> gives walks the SDF tree breadth-first and invokes the componentizers one <code>sdf::Element</code> at at a time. This PR has a componentizer for each component type. There's nothing preventing a single componentizer from handling multiple component types, but one each seems to separate the code nicely.</p>\n<p>I prefixed the <strong>C</strong>omponenti<strong>Z</strong>ers with CZ so tabs in my editor weren't named the same as the component files.</p>\n<ul>\n<li>Componentizers<ul>\n<li><code>CZName</code> adds a name component to anything that has an attribute 'name'</li>\n<li><code>CZGeometry</code> adds a geometry component when it sees <code>&lt;geometry&gt;</code> under a <code>&lt;collision&gt;</code> or <code>&lt;visual&gt;</code>. It currently supports spheres, boxes, and cylinders only.</li>\n<li><code>CZPose</code> adds a pose component when it sees a <code>&lt;model&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;visual&gt;</code>, or <code>&lt;collision&gt;</code>. The pose are given in the parent frame so that visuals move when the collision moves. See <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/browse/GAZ-141\" rel=\"nofollow\">this Jira ticket</a>.</li>\n<li><code>CZMaterial</code> Adds a material when a <code>&lt;visual&gt;</code> component is given. It currently only uses <code>&lt;ambient&gt;</code> to make a flat color material.</li>\n<li><code>CZCollidable</code> creates a component when there is a <code>&lt;collision&gt;</code>. This signals that the <code>Geometry</code> component is collision geometry, and is grouped with other <code>&lt;collision&gt;</code> on the same link. This component should also have contact and surface properties, but that's not currently implemented</li>\n<li><code>CZInertial</code> adds an interial component when there is one on a <code>&lt;link&gt;</code>. The <code>Collidable</code> component <code>groupId</code> references the entity this component is created on.</li>\n<li><code>CZPhysicsConfig</code> adds a component for global <code>&lt;physics&gt;</code> properties. It only has <code>maxStepSize</code> currently.</li>\n<li><code>CZWorldVelocity</code> if model is not static then the entities created for the <code>&lt;link&gt;</code> get <code>WorldVelocity</code> components.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-examples\">Examples</h1>\n<h2 id=\"markdown-header-empty-world\">Empty world</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;asdf&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Creates these <strong>Entities</strong> and <em>components</em></p>\n<ul>\n<li><strong>E1</strong><ul>\n<li><em>Name: default</em> - created by <code>CZName</code></li>\n</ul>\n</li>\n<li><strong>E2</strong><ul>\n<li><em>Name: asdf</em> - created by <code>CZName</code></li>\n<li><em>PhysicsConfig: maxStepSize: 0.001</em> - created by <code>CZPhysicsConfig</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"markdown-header-world-with-non-static-model\">World with non-static model</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;asdf&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;model1&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;col1&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;box&gt;</span>\n              <span class=\"nt\">&lt;size&gt;</span>1 2 3<span class=\"nt\">&lt;/size&gt;</span>\n            <span class=\"nt\">&lt;/box&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;/collision&gt;</span>\n        <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;vis1&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;geometry&gt;</span>\n            <span class=\"nt\">&lt;sphere&gt;</span>\n              <span class=\"nt\">&lt;radius&gt;</span>0.5<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;/sphere&gt;</span>\n          <span class=\"nt\">&lt;/geometry&gt;</span>\n          <span class=\"nt\">&lt;material&gt;</span>\n            <span class=\"nt\">&lt;ambient&gt;</span>0.1 0.2 0.3 1.0<span class=\"nt\">&lt;/ambient&gt;</span>\n          <span class=\"nt\">&lt;/material&gt;</span>\n        <span class=\"nt\">&lt;/visual&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n          <span class=\"nt\">&lt;mass&gt;</span>5<span class=\"nt\">&lt;/mass&gt;</span>\n          <span class=\"nt\">&lt;inertia&gt;</span>\n            <span class=\"nt\">&lt;ixx&gt;</span>1<span class=\"nt\">&lt;/ixx&gt;</span>\n            <span class=\"nt\">&lt;iyy&gt;</span>1<span class=\"nt\">&lt;/iyy&gt;</span>\n            <span class=\"nt\">&lt;izz&gt;</span>1<span class=\"nt\">&lt;/izz&gt;</span>\n            <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n            <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n            <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;/inertia&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n      <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Creates these <strong>Entities</strong> and <em>components</em></p>\n<ul>\n<li><strong>E1</strong><ul>\n<li><em>Name: default</em> - created by <code>CZName</code></li>\n</ul>\n</li>\n<li><strong>E2</strong><ul>\n<li><em>Name: asdf</em> - created by <code>CZName</code></li>\n<li><em>PhysicsConfig: maxStepSize: 0.001</em> - created by <code>CZPhysicsConfig</code></li>\n</ul>\n</li>\n<li><strong>E3</strong><ul>\n<li><em>Name: model1</em> - created by <code>CZName</code></li>\n<li><em>Pose: origin in frame \"/\", defines frame \"/model/model1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E4</strong><ul>\n<li><em>Name: link1</em> - created by <code>CZName</code></li>\n<li><em>Inertial: mass 5, inertia identity matrix</em> - created by <code>CZInertial</code></li>\n<li><em>WorldVelocity: initially zero</em> - created by <code>CZWorldVelocity</code></li>\n<li><em>Pose: origin in frame \"/model/model1\", defines frame \"/model/model1/link/link1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E5</strong><ul>\n<li><em>Name: col1</em> - created by <code>CZName</code></li>\n<li><em>Geometry: box size 1,2,3</em> - created by <code>CZGeometry</code></li>\n<li><em>Collidable: groupId E4</em> - created by <code>CZCollidable</code></li>\n<li><em>Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/collision/col1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n<li><strong>E6</strong><ul>\n<li><em>Name vis1</em> - created by <code>CZName</code></li>\n<li><em>Geometry: sphere radius 0.5</em> - created by <code>CZGeometry</code></li>\n<li><em>Material; RGBA 0.1, 0.2, 0.3, 1.0</em> - created by <code>CZMaterial</code></li>\n<li><em>Pose: origin in frame \"/model/model1/link/link1\", defines frame \"/model/model1/link/link1/visual/vis1\"</em> - created by <code>CZPose</code></li>\n</ul>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "e863e2dadd4b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/e863e2dadd4b.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/e863e2dadd4b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "stub_componentizer"}}, "comment_count": 41, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-06-01T19:05:20.843623+00:00", "type": "participant", "approved": false, "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}}, {"role": "PARTICIPANT", "participated_on": "2017-06-02T14:57:53.326118+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-04T01:08:47.371589+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2017-07-04T01:08:47.404864+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "b0bfa9550ef2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/b0bfa9550ef2.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/b0bfa9550ef2"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}