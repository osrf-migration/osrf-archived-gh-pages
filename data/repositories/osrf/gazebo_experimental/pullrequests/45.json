{"rendered": {"reason": {"raw": "Putting this PR on hold until after a bit of restructuring. See issue #33", "markup": "markdown", "html": "<p>Putting this PR on hold until after a bit of restructuring. See issue #33</p>", "type": "rendered"}, "description": {"raw": "First revision of a time panel, builds on top of pull request #44 but I can make a new branch off default if needed.\r\n\r\n## Features\r\n\r\n* Add a `TimeSystem` which handles `TimeInfo` components\r\n* `TimeSystem` publishes time on `/world_stats`\r\n* `TimeSystem` offers a service on `/world_control`\r\n* `PhysicsSystem` updates the `TimeInfo` component\r\n* Gazebo will use a `TimePanel` plugin provided by Ignition GUI\r\n* Added real time to `ecs::Manager`\r\n\r\n![timepanel.gif](data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif)\r\n\r\n## Known issues\r\n\r\n* Play / pause seems to work fine just with the diagnostics window, but if I run `dummy_demo` and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.\r\n\r\n* There are no tests because QTest will have to be integrated first, still need to figure out how that will work.\r\n\r\n* Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.\r\n\r\n## Questions\r\n\r\nI didn't want to go too far before getting feedback on this. Some questions:\r\n\r\n* ~~I assume the `ecs::Manager` is the authority on time, should it be publishing on `/world_stats` instead of getting this info from diagnostics?~~\r\n* ~~Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?~~\r\n* ~~Was there already a source of real time which I didn't find?~~\r\n\r\nAny other tips which could clarify how reset and step could be implemented are very welcome :smile:", "markup": "markdown", "html": "<p>First revision of a time panel, builds on top of <a href=\"#!/osrf/gazebo_experimental/pull-requests/44/ready-for-review-install-plugins-where\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #44</a> but I can make a new branch off default if needed.</p>\n<h2 id=\"markdown-header-features\">Features</h2>\n<ul>\n<li>Add a <code>TimeSystem</code> which handles <code>TimeInfo</code> components</li>\n<li><code>TimeSystem</code> publishes time on <code>/world_stats</code></li>\n<li><code>TimeSystem</code> offers a service on <code>/world_control</code></li>\n<li><code>PhysicsSystem</code> updates the <code>TimeInfo</code> component</li>\n<li>Gazebo will use a <code>TimePanel</code> plugin provided by Ignition GUI</li>\n<li>Added real time to <code>ecs::Manager</code></li>\n</ul>\n<p><img alt=\"timepanel.gif\" src=\"data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif\" /></p>\n<h2 id=\"markdown-header-known-issues\">Known issues</h2>\n<ul>\n<li>\n<p>Play / pause seems to work fine just with the diagnostics window, but if I run <code>dummy_demo</code> and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.</p>\n</li>\n<li>\n<p>There are no tests because QTest will have to be integrated first, still need to figure out how that will work.</p>\n</li>\n<li>\n<p>Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.</p>\n</li>\n</ul>\n<h2 id=\"markdown-header-questions\">Questions</h2>\n<p>I didn't want to go too far before getting feedback on this. Some questions:</p>\n<ul>\n<li><del>I assume the <code>ecs::Manager</code> is the authority on time, should it be publishing on <code>/world_stats</code> instead of getting this info from diagnostics?</del></li>\n<li><del>Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?</del></li>\n<li><del>Was there already a source of real time which I didn't find?</del></li>\n</ul>\n<p>Any other tips which could clarify how reset and step could be implemented are very welcome <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f604.png\" alt=\"\ud83d\ude04\" title=\":smile:\" data-emoji-short-name=\":smile:\" /></p>", "type": "rendered"}, "title": {"raw": "[Read for review] Time system", "markup": "markdown", "html": "<p>[Read for review] Time system</p>", "type": "rendered"}}, "type": "pullrequest", "description": "First revision of a time panel, builds on top of pull request #44 but I can make a new branch off default if needed.\r\n\r\n## Features\r\n\r\n* Add a `TimeSystem` which handles `TimeInfo` components\r\n* `TimeSystem` publishes time on `/world_stats`\r\n* `TimeSystem` offers a service on `/world_control`\r\n* `PhysicsSystem` updates the `TimeInfo` component\r\n* Gazebo will use a `TimePanel` plugin provided by Ignition GUI\r\n* Added real time to `ecs::Manager`\r\n\r\n![timepanel.gif](data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif)\r\n\r\n## Known issues\r\n\r\n* Play / pause seems to work fine just with the diagnostics window, but if I run `dummy_demo` and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.\r\n\r\n* There are no tests because QTest will have to be integrated first, still need to figure out how that will work.\r\n\r\n* Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.\r\n\r\n## Questions\r\n\r\nI didn't want to go too far before getting feedback on this. Some questions:\r\n\r\n* ~~I assume the `ecs::Manager` is the authority on time, should it be publishing on `/world_stats` instead of getting this info from diagnostics?~~\r\n* ~~Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?~~\r\n* ~~Was there already a source of real time which I didn't find?~~\r\n\r\nAny other tips which could clarify how reset and step could be implemented are very welcome :smile:", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/45/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:f3d99ee37b2d%0D466ee110cf18?from_pullrequest_id=45"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/45/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/45"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f3d99ee37b2d%0D466ee110cf18?from_pullrequest_id=45"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/45/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/statuses_page=1.json"}}, "title": "[Read for review] Time system", "close_source_branch": false, "reviewers": [], "id": 45, "destination": {"commit": {"hash": "466ee110cf18", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/466ee110cf18.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/466ee110cf18"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "default"}}, "created_on": "2017-07-19T19:15:58.383075+00:00", "summary": {"raw": "First revision of a time panel, builds on top of pull request #44 but I can make a new branch off default if needed.\r\n\r\n## Features\r\n\r\n* Add a `TimeSystem` which handles `TimeInfo` components\r\n* `TimeSystem` publishes time on `/world_stats`\r\n* `TimeSystem` offers a service on `/world_control`\r\n* `PhysicsSystem` updates the `TimeInfo` component\r\n* Gazebo will use a `TimePanel` plugin provided by Ignition GUI\r\n* Added real time to `ecs::Manager`\r\n\r\n![timepanel.gif](data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif)\r\n\r\n## Known issues\r\n\r\n* Play / pause seems to work fine just with the diagnostics window, but if I run `dummy_demo` and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.\r\n\r\n* There are no tests because QTest will have to be integrated first, still need to figure out how that will work.\r\n\r\n* Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.\r\n\r\n## Questions\r\n\r\nI didn't want to go too far before getting feedback on this. Some questions:\r\n\r\n* ~~I assume the `ecs::Manager` is the authority on time, should it be publishing on `/world_stats` instead of getting this info from diagnostics?~~\r\n* ~~Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?~~\r\n* ~~Was there already a source of real time which I didn't find?~~\r\n\r\nAny other tips which could clarify how reset and step could be implemented are very welcome :smile:", "markup": "markdown", "html": "<p>First revision of a time panel, builds on top of <a href=\"#!/osrf/gazebo_experimental/pull-requests/44/ready-for-review-install-plugins-where\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #44</a> but I can make a new branch off default if needed.</p>\n<h2 id=\"markdown-header-features\">Features</h2>\n<ul>\n<li>Add a <code>TimeSystem</code> which handles <code>TimeInfo</code> components</li>\n<li><code>TimeSystem</code> publishes time on <code>/world_stats</code></li>\n<li><code>TimeSystem</code> offers a service on <code>/world_control</code></li>\n<li><code>PhysicsSystem</code> updates the <code>TimeInfo</code> component</li>\n<li>Gazebo will use a <code>TimePanel</code> plugin provided by Ignition GUI</li>\n<li>Added real time to <code>ecs::Manager</code></li>\n</ul>\n<p><img alt=\"timepanel.gif\" src=\"data/bitbucket.org/repo/baqryA7/images/159706074-timepanel.gif\" /></p>\n<h2 id=\"markdown-header-known-issues\">Known issues</h2>\n<ul>\n<li>\n<p>Play / pause seems to work fine just with the diagnostics window, but if I run <code>dummy_demo</code> and images start being published on the image display widget, then pause, the UI gets stuck. I haven't investigated.</p>\n</li>\n<li>\n<p>There are no tests because QTest will have to be integrated first, still need to figure out how that will work.</p>\n</li>\n<li>\n<p>Pause is not affecting real time, I didn't want to implement a lot of things for real time before getting feedback on the questions below.</p>\n</li>\n</ul>\n<h2 id=\"markdown-header-questions\">Questions</h2>\n<p>I didn't want to go too far before getting feedback on this. Some questions:</p>\n<ul>\n<li><del>I assume the <code>ecs::Manager</code> is the authority on time, should it be publishing on <code>/world_stats</code> instead of getting this info from diagnostics?</del></li>\n<li><del>Maybe it's a bad idea to add the world control service to the manager and this should be done from a system?</del></li>\n<li><del>Was there already a source of real time which I didn't find?</del></li>\n</ul>\n<p>Any other tips which could clarify how reset and step could be implemented are very welcome <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f604.png\" alt=\"\ud83d\ude04\" title=\":smile:\" data-emoji-short-name=\":smile:\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "f3d99ee37b2d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f3d99ee37b2d.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f3d99ee37b2d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "time_panel"}}, "comment_count": 16, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-07-27T17:30:10.833029+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-28T18:37:28.336784+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "Putting this PR on hold until after a bit of restructuring. See issue #33", "updated_on": "2017-08-14T15:09:35.578390+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}