{"pagelen": 50, "values": [{"update": {"description": "@nkoenig mentioned something like this idea in the gazebo meeting today. I think it was the idea of returning a per-component handle instead of a reference to the component. This PR adds one handle for accessing all entities and components. The components are accessed by reference, but they're guaranteed to be valid while the handle is alive. It depends on pull request #36 and pull request #37.\r\n\r\nBefore some code accesses entities/components it must get a handle by calling `manager.Handle()`. As long as this handle is alive the entities/components won't be updated by the database. This means they're safe to access/modify from other threads.\r\n\r\nFor example, say a GUI plugin needs to move an entity and it has a pointer to the manager. The GUI plugin would get a handle from the manager, modify the pose component on the entity to move, then let the handle go out of scope.\r\n\r\nThis PR adds `Manager::Handle()` which returns an `std::unique_ptr<DataHandle>`. These methods used to be on `Manager` but are now on `DataHandle`: `CreateEntity()`, `DeleteEntity()`, `SimulationTime()`, `SimulationTime(_newTime)`, `Entity()`. The database has a new method `BlockUpdate(bool _doBlock)`. It maintains a count of how many handles are blocking the update. `DataHandle` calls this method in it's constructor to block the update, and again in it's destructor to stop blocking the update.", "title": "Manager handle to access entities and components", "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "Revive after restructuring work. See issue #35", "source": {"commit": {"hash": "f26ae9ab19ae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f26ae9ab19ae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f26ae9ab19ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "manager_handle"}}, "state": "DECLINED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2017-08-14T15:11:38.030341+00:00"}, "pull_request": {"type": "pullrequest", "id": 43, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/43"}}, "title": "Manager handle to access entities and components"}}, {"update": {"description": "@nkoenig mentioned something like this idea in the gazebo meeting today. I think it was the idea of returning a per-component handle instead of a reference to the component. This PR adds one handle for accessing all entities and components. The components are accessed by reference, but they're guaranteed to be valid while the handle is alive. It depends on pull request #36 and pull request #37.\r\n\r\nBefore some code accesses entities/components it must get a handle by calling `manager.Handle()`. As long as this handle is alive the entities/components won't be updated by the database. This means they're safe to access/modify from other threads.\r\n\r\nFor example, say a GUI plugin needs to move an entity and it has a pointer to the manager. The GUI plugin would get a handle from the manager, modify the pose component on the entity to move, then let the handle go out of scope.\r\n\r\nThis PR adds `Manager::Handle()` which returns an `std::unique_ptr<DataHandle>`. These methods used to be on `Manager` but are now on `DataHandle`: `CreateEntity()`, `DeleteEntity()`, `SimulationTime()`, `SimulationTime(_newTime)`, `Entity()`. The database has a new method `BlockUpdate(bool _doBlock)`. It maintains a count of how many handles are blocking the update. `DataHandle` calls this method in it's constructor to block the update, and again in it's destructor to stop blocking the update.", "title": "Manager handle to access entities and components", "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "f26ae9ab19ae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f26ae9ab19ae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f26ae9ab19ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "manager_handle"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-07T02:04:45.461909+00:00"}, "pull_request": {"type": "pullrequest", "id": 43, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/43"}}, "title": "Manager handle to access entities and components"}}, {"update": {"description": "@nkoenig mentioned this idea in the gazebo meeting today. This PR adds a handle for accessing entities and components. It depends on pull request #36 and pull request #37.\r\n\r\nBefore some code accesses entities/components it must get a handle by calling `manager.Handle()`. As long as this handle is alive the entities/components won't be updated by the database. This means they're safe to access/modify from other threads.\r\n\r\nFor example, say a GUI plugin needs to move an entity and it has a pointer to the manager. The GUI plugin would get a handle from the manager, modify the pose component on the entity to move, then let the handle go out of scope.\r\n\r\nThis PR adds `Manager::Handle()` which returns an `std::unique_ptr<DataHandle>`. These methods used to be on `Manager` but are now on `DataHandle`: `CreateEntity()`, `DeleteEntity()`, `SimulationTime()`, `SimulationTime(_newTime)`, `Entity()`. The database has a new method `BlockUpdate(bool _doBlock)`. It maintains a count of how many handles are blocking the update. `DataHandle` calls this method in it's constructor to block the update, and again in it's destructor to stop blocking the update.", "title": "Manager handle to access entities and components", "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "f26ae9ab19ae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f26ae9ab19ae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f26ae9ab19ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "manager_handle"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-07T01:48:53.974187+00:00"}, "pull_request": {"type": "pullrequest", "id": 43, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/43"}}, "title": "Manager handle to access entities and components"}}, {"update": {"description": "@nkoenig mentioned this idea in the gazebo meeting today. This PR adds a handle for accessing entities and components. It depends on pull request #36 and pull request #37.\r\n\r\nBefore some code accesses entities/components it must get a handle by calling `manager.Handle()`. As long as this handle is alive the entities/components won't be updated by the database. This means they're safe to access/modify from other threads.\r\n\r\nFor example, say a GUI plugin needs to move an entity and it has a pointer to the manager. The GUI plugin would get a handle from the manager, modify the pose component on the entity to move, then let the handle go out of scope.\r\n\r\nThis PR adds `Manager::Handle()` which returns an `std::unique_ptr<DataHandle>`. These methods used to be on `Manager` but are now on `DataHandle`: `CreateEntity()`, `DeleteEntity()`, `SimulationTime()`, `SimulationTime(_newTime)`, `Entity()`. The database has a new method `BlockUpdate(bool _doBlock)`. It maintains a count of how many handles are blocking the update. `DataHandle` calls this method in it's constructor to block the update, and again in it's destructor to stop blocking the update.", "title": "Manager handle to access entities and components", "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "reason": "", "source": {"commit": {"hash": "f26ae9ab19ae", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/f26ae9ab19ae.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/f26ae9ab19ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "manager_handle"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-07-07T01:48:53.945068+00:00"}, "pull_request": {"type": "pullrequest", "id": 43, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/43.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/43"}}, "title": "Manager handle to access entities and components"}}]}