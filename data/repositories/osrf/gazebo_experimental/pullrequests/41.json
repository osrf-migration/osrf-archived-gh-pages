{"rendered": {"reason": {"raw": "Pausing until after restructuring work is complete. See issue #34", "markup": "markdown", "html": "<p>Pausing until after restructuring work is complete. See issue #34</p>", "type": "rendered"}, "description": {"raw": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "markup": "markdown", "html": "<p>This pull request depends on <a href=\"#!/osrf/gazebo_experimental/pull-requests/37/wip-components-pimpl-integration\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #37</a> and <a href=\"#!/osrf/gazebo_experimental/pull-requests/36/components-defined-by-protobuf-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #36</a>.</p>\n<p>It makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.</p>\n<h2 id=\"markdown-header-changes\">Changes</h2>\n<ul>\n<li>Pose component<ul>\n<li>Removed <code>ParentFrame</code>/<code>DefinesFrame</code><ul>\n<li>These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.</li>\n</ul>\n</li>\n<li>Added <code>AttachedTo</code><ul>\n<li>Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (<code>AttachedTo = NO_ENTITY</code>). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.</li>\n</ul>\n</li>\n<li>Renamed <code>Origin</code> to <code>Transform</code></li>\n</ul>\n</li>\n<li>Added PoseHelper header<ul>\n<li>This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.</li>\n</ul>\n</li>\n<li>Geometry Component<ul>\n<li>One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.</li>\n</ul>\n</li>\n<li>Collidable Component<ul>\n<li>Removed <code>GroupId</code></li>\n<li><code>Collidable</code> and <code>Geometry</code> are now together on the same entity. Previously <code>Collidable</code> was on one entity, and <code>Geometry</code> was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.</li>\n</ul>\n</li>\n<li>ECS Database<ul>\n<li>If something calls <code>AddComponent</code> twice, the second time it gets the same component previously added instead of an error.</li>\n</ul>\n</li>\n<li>Added a world with a bunch of spheres falling on a static box</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Bullet physics system", "markup": "markdown", "html": "<p>Bullet physics system</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/41/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diffstat/osrf/gazebo_experimental:aab2f615386e%0D786402f94128?from_pullrequest_id=41"}, "commits": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/commits.json"}, "self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41.json"}, "comments": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/41/merge"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/41"}, "activity": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:aab2f615386e%0D786402f94128?from_pullrequest_id=41"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/pullrequests/41/approve"}, "statuses": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/41/statuses_page=1.json"}}, "title": "Bullet physics system", "close_source_branch": false, "reviewers": [], "id": 41, "destination": {"commit": {"hash": "786402f94128", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/786402f94128.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/786402f94128"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "components_pimpl_integration"}}, "created_on": "2017-07-03T19:28:18.480188+00:00", "summary": {"raw": "This pull request depends on pull request #37 and pull request #36.\r\n\r\nIt makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.\r\n\r\n\r\n## Changes ##\r\n* Pose component\r\n    * Removed `ParentFrame`/`DefinesFrame`\r\n        * These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.\r\n    * Added `AttachedTo`\r\n        * Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (`AttachedTo = NO_ENTITY`). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.\r\n    * Renamed `Origin` to `Transform`\r\n * Added PoseHelper header\r\n    * This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.\r\n * Geometry Component\r\n    * One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.\r\n* Collidable Component\r\n    * Removed `GroupId`\r\n    * `Collidable` and `Geometry` are now together on the same entity. Previously `Collidable` was on one entity, and `Geometry` was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.\r\n* ECS Database\r\n    * If something calls `AddComponent` twice, the second time it gets the same component previously added instead of an error.\r\n* Added a world with a bunch of spheres falling on a static box", "markup": "markdown", "html": "<p>This pull request depends on <a href=\"#!/osrf/gazebo_experimental/pull-requests/37/wip-components-pimpl-integration\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #37</a> and <a href=\"#!/osrf/gazebo_experimental/pull-requests/36/components-defined-by-protobuf-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #36</a>.</p>\n<p>It makes the Physics System use bullet physics, supporting just spheres and boxes. The bulk of this pull request is fixing issues that were discovered during this process.</p>\n<h2 id=\"markdown-header-changes\">Changes</h2>\n<ul>\n<li>Pose component<ul>\n<li>Removed <code>ParentFrame</code>/<code>DefinesFrame</code><ul>\n<li>These fields overlapped the pose graph. But without a pose graph it is difficult to get/set world poses in the physics system.</li>\n</ul>\n</li>\n<li>Added <code>AttachedTo</code><ul>\n<li>Field indicates this entity is attached to another. For example, when a link has both a visual and collision there are two entities. The first entity has collision geometry, surface properties, and a pose in world frame (<code>AttachedTo = NO_ENTITY</code>). The second entity has visual geometry, material, and is attached to the first entity so the visual moves with the collision. Another example: The model is AttachedTo the canonical link.</li>\n</ul>\n</li>\n<li>Renamed <code>Origin</code> to <code>Transform</code></li>\n</ul>\n</li>\n<li>Added PoseHelper header<ul>\n<li>This is a file with functions to get and set the world pose of an entity whether it's attached to another or not.</li>\n</ul>\n</li>\n<li>Geometry Component<ul>\n<li>One Geometry component can now have a compound shape. This is intended for a link that has multiple collisions or multiple visuals. An open question is what to do if each collision has its own surface properties, as sdf 1.6 allows.</li>\n</ul>\n</li>\n<li>Collidable Component<ul>\n<li>Removed <code>GroupId</code></li>\n<li><code>Collidable</code> and <code>Geometry</code> are now together on the same entity. Previously <code>Collidable</code> was on one entity, and <code>Geometry</code> was on another. This makes it easier on a physics system to tell when a rigid body is modified, and to update the pose when a body moves.</li>\n</ul>\n</li>\n<li>ECS Database<ul>\n<li>If something calls <code>AddComponent</code> twice, the second time it gets the same component previously added instead of an error.</li>\n</ul>\n</li>\n<li>Added a world with a bunch of spheres falling on a static box</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "aab2f615386e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/commit/aab2f615386e.json"}, "html": {"href": "#!/osrf/gazebo_experimental/commits/aab2f615386e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental.json"}, "html": {"href": "#!/osrf/gazebo_experimental"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc79acda-fe93-46b4-96a4-f1603142a10a}ts=c_plus_plus"}}, "type": "repository", "name": "gazebo_experimental", "full_name": "osrf/gazebo_experimental", "uuid": "{bc79acda-fe93-46b4-96a4-f1603142a10a}"}, "branch": {"name": "physics_functional"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "participants": [], "reason": "Pausing until after restructuring work is complete. See issue #34", "updated_on": "2017-08-14T15:10:41.373846+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}