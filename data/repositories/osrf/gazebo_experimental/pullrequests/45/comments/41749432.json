{"links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/comments/41749432.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_experimental/diff/osrf/gazebo_experimental:f3d99ee37b2d..466ee110cf18?path=src%2Fecs%2FManager.cc"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/45/_/diff#comment-41749432"}}, "parent": {"id": 41659320, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45/comments/41659320.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/45/_/diff#comment-41659320"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 45, "links": {"self": {"href": "data/repositories/osrf/gazebo_experimental/pullrequests/45.json"}, "html": {"href": "#!/osrf/gazebo_experimental/pull-requests/45"}}, "title": "[Read for review] Time system"}, "content": {"raw": "The manager still uses its own `simTime` a lot for the diagnostics. If we were to get it from the component every time, we'd have to add a few lines for every `this->dataPtr->simTime` currently in the code: \n\n~~~\n  auto rootEntity = this->database.Entity(1);\n  if (rootEntity == EntityNull)\n  {         \n    ignerr << \"Can't get sim time without the root entity\" << std::endl;\n    return; \n  }       \n\n  auto const *component = rootEntity.Component<components::TimeInfo>();\n\n  if (!component)\n  {     \n    ignerr << \"Root entity missing TimeInfo component\" << std::endl;\n    return;\n  }\n\n  auto simTime = component->simTime;\n~~~\n\nAm I missing something, or would this really be needed? If so, I'd propose we keep sim time in the manager for now and think of a less intrusive way of integrating diagnostics. What do you think?", "markup": "markdown", "html": "<p>The manager still uses its own <code>simTime</code> a lot for the diagnostics. If we were to get it from the component every time, we'd have to add a few lines for every <code>this-&gt;dataPtr-&gt;simTime</code> currently in the code: </p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nt\">auto</span> <span class=\"nt\">rootEntity</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">database</span><span class=\"p\">.</span><span class=\"nc\">Entity</span><span class=\"o\">(</span><span class=\"nt\">1</span><span class=\"o\">);</span>\n  <span class=\"nt\">if</span> <span class=\"o\">(</span><span class=\"nt\">rootEntity</span> <span class=\"o\">==</span> <span class=\"nt\">EntityNull</span><span class=\"o\">)</span>\n  <span class=\"p\">{</span>         \n    <span class=\"err\">ignerr</span> <span class=\"err\">&lt;&lt;</span> <span class=\"err\">&quot;Can&#39;t</span> <span class=\"err\">get</span> <span class=\"err\">sim</span> <span class=\"err\">time</span> <span class=\"err\">without</span> <span class=\"err\">the</span> <span class=\"err\">root</span> <span class=\"err\">entity&quot;</span> <span class=\"err\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"err\">return</span><span class=\"p\">;</span> \n  <span class=\"p\">}</span>       \n\n  <span class=\"nt\">auto</span> <span class=\"nt\">const</span> <span class=\"o\">*</span><span class=\"nt\">component</span> <span class=\"o\">=</span> <span class=\"nt\">rootEntity</span><span class=\"p\">.</span><span class=\"nc\">Component</span><span class=\"o\">&lt;</span><span class=\"nt\">components</span><span class=\"p\">::</span><span class=\"nd\">TimeInfo</span><span class=\"o\">&gt;();</span>\n\n  <span class=\"nt\">if</span> <span class=\"o\">(!</span><span class=\"nt\">component</span><span class=\"o\">)</span>\n  <span class=\"p\">{</span>     \n    <span class=\"err\">ignerr</span> <span class=\"err\">&lt;&lt;</span> <span class=\"err\">&quot;Root</span> <span class=\"err\">entity</span> <span class=\"err\">missing</span> <span class=\"err\">TimeInfo</span> <span class=\"err\">component&quot;</span> <span class=\"err\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"err\">return</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nt\">auto</span> <span class=\"nt\">simTime</span> <span class=\"o\">=</span> <span class=\"nt\">component-</span><span class=\"o\">&gt;</span><span class=\"nt\">simTime</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>Am I missing something, or would this really be needed? If so, I'd propose we keep sim time in the manager for now and think of a less intrusive way of integrating diagnostics. What do you think?</p>", "type": "rendered"}, "created_on": "2017-07-28T18:37:28.333161+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "outdated": false, "path": "src/ecs/Manager.cc"}, "updated_on": "2017-07-28T18:37:28.336784+00:00", "type": "pullrequest_comment", "id": 41749432}